/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:37:35 GMT 2019
 */

package org.jfree.chart.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.plot.Plot;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotChangeEvent_ESTest extends PlotChangeEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PlotChangeEvent plotChangeEvent0 = null;
      try {
        plotChangeEvent0 = new PlotChangeEvent((Plot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Plot plot0 = mock(Plot.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(plot0).toString();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(plot0);
      Plot plot1 = plotChangeEvent0.getPlot();
      assertEquals(0, plot1.getBackgroundImageAlignment());
  }
}
