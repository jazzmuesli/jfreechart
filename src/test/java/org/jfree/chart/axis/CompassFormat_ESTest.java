/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:31:58 GMT 2019
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.FieldPosition;
import java.text.Format;
import java.text.ParsePosition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.CompassFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompassFormat_ESTest extends CompassFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat((String) null, (String) null, "", "W");
      String string0 = compassFormat0.getDirectionCode(0.0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("E", "FV.ZC&Ev", "E", "FV.ZC&Ev");
      String string0 = compassFormat0.getDirectionCode(1.0);
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("\"0fT,NW(<", "", "", "\"0fT,NW(<");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      FieldPosition fieldPosition0 = new FieldPosition(1355);
      StringBuffer stringBuffer1 = compassFormat0.format((-3116L), stringBuffer0, fieldPosition0);
      assertEquals(0, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", "", "", "");
      StringBuffer stringBuffer0 = new StringBuffer();
      FieldPosition fieldPosition0 = new FieldPosition(1273);
      StringBuffer stringBuffer1 = compassFormat0.format((-1564.8646626321483), stringBuffer0, fieldPosition0);
      assertEquals(0, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat((String) null, "O4N", (String) null, "N");
      FieldPosition fieldPosition0 = new FieldPosition(1);
      // Undeclared exception!
      try { 
        compassFormat0.format((-4319L), (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("yW1*#", "yW1*#", "yW1*#", "yW1*#");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      // Undeclared exception!
      try { 
        compassFormat0.format((-1L), (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("%(ht~RT]=!4xzB", "4p ", "", "");
      StringBuffer stringBuffer0 = new StringBuffer("");
      FieldPosition fieldPosition0 = new FieldPosition(1);
      // Undeclared exception!
      try { 
        compassFormat0.format((double) (-1), stringBuffer0, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", "", "", "");
      // Undeclared exception!
      try { 
        compassFormat0.getDirectionCode((-1.0));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", "", "", "");
      String string0 = compassFormat0.getDirectionCode(0.0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat((String) null, "O4N", (String) null, "N");
      CompassFormat compassFormat1 = new CompassFormat(compassFormat0.directions);
      assertTrue(compassFormat1.isGroupingUsed());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", ".B.5", "", "_i0wTt1!5-0Iqo");
      FieldPosition fieldPosition0 = new FieldPosition(1);
      // Undeclared exception!
      try { 
        compassFormat0.format(1.0, (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[0];
      CompassFormat compassFormat0 = null;
      try {
        compassFormat0 = new CompassFormat(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'directions' array must contain exactly 16 elements
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat();
      StringBuffer stringBuffer0 = new StringBuffer();
      FieldPosition fieldPosition0 = new FieldPosition(31);
      compassFormat0.format((long) 31, stringBuffer0, fieldPosition0);
      assertEquals("NNE", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat();
      StringBuffer stringBuffer0 = new StringBuffer();
      FieldPosition fieldPosition0 = new FieldPosition(31);
      compassFormat0.format((-2146.4825135), stringBuffer0, fieldPosition0);
      assertEquals("NNE", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat();
      Number number0 = compassFormat0.parse("W", (ParsePosition) null);
      assertNull(number0);
  }
}
