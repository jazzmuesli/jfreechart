/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:24:01 GMT 2019
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.ui.RectangleEdge;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AxisState_ESTest extends AxisState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      axisState0.setTicks((List) null);
      axisState0.getTicks();
      assertEquals(0.0, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      axisState0.setMax(1475.62);
      double double0 = axisState0.getMax();
      assertEquals(1475.62, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AxisState axisState0 = new AxisState(0.0);
      axisState0.setMax((-4097.0));
      double double0 = axisState0.getMax();
      assertEquals((-4097.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AxisState axisState0 = new AxisState(0.0);
      axisState0.setCursor(1492.33801);
      double double0 = axisState0.getCursor();
      assertEquals(1492.33801, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AxisState axisState0 = new AxisState(0.0);
      axisState0.cursorUp(1131.0);
      double double0 = axisState0.getCursor();
      assertEquals((-1131.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      axisState0.cursorRight(396.2);
      assertEquals(396.2, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      axisState0.cursorLeft((-94.6693541348));
      assertEquals(94.6693541348, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AxisState axisState0 = new AxisState(0.0);
      axisState0.cursorDown(1.0);
      assertEquals(1.0, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      axisState0.moveCursor(0.0, (RectangleEdge) null);
      assertEquals(0.0, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      axisState0.moveCursor(0.0, rectangleEdge0);
      assertEquals(0.0, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      double double0 = axisState0.getMax();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      axisState0.moveCursor(3583.755454216155, rectangleEdge0);
      assertEquals((-3583.755454216155), axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      axisState0.moveCursor(0.0, rectangleEdge0);
      assertEquals(0.0, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      double double0 = axisState0.getCursor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      axisState0.moveCursor(0.0, rectangleEdge0);
      assertEquals(0.0, axisState0.getCursor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AxisState axisState0 = new AxisState();
      List list0 = axisState0.getTicks();
      axisState0.setTicks(list0);
      assertEquals(0.0, axisState0.getCursor(), 0.01);
  }
}
