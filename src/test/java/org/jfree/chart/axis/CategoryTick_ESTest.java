/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:14:00 GMT 2019
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.CategoryTick;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBlockAnchor;
import org.jfree.chart.ui.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CategoryTick_ESTest extends CategoryTick_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlock textBlock0 = mock(TextBlock.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, textBlock0, textBlockAnchor0, textAnchor0, (-4234.203747818));
      categoryTick0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBlock textBlock0 = mock(TextBlock.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick((Comparable) null, textBlock0, (TextBlockAnchor) null, textAnchor0, 23.127227131677085);
      categoryTick0.getLabelAnchor();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlock textBlock0 = mock(TextBlock.class, new ViolatedAssumptionAnswer());
      doReturn("Fyf").when(textBlock0).toString();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, textBlock0, textBlockAnchor0, textAnchor0, (-4234.203747818));
      TextBlock textBlock1 = categoryTick0.getLabel();
      assertSame(textBlock1, textBlock0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextBlock textBlock0 = mock(TextBlock.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_RIGHT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick((Comparable) null, textBlock0, textBlockAnchor0, textAnchor0, (-849.9093));
      Comparable comparable0 = categoryTick0.getCategory();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlock textBlock0 = mock(TextBlock.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.CENTER;
      CategoryTick categoryTick0 = null;
      try {
        categoryTick0 = new CategoryTick(comparable0, textBlock0, textBlockAnchor0, (TextAnchor) null, (-3036.86));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rotationAnchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlock textBlock0 = mock(TextBlock.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, textBlock0, textBlockAnchor0, textAnchor0, (-4234.203747818));
      Object object0 = categoryTick0.clone();
      boolean boolean0 = categoryTick0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, (TextBlock) null, textBlockAnchor0, textAnchor0, 2555.0);
      TextAnchor textAnchor1 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick1 = new CategoryTick(textBlockAnchor0, (TextBlock) null, textBlockAnchor0, textAnchor1, (-3262.991));
      boolean boolean0 = categoryTick0.equals(categoryTick1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlock textBlock0 = mock(TextBlock.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.BOTTOM_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, textBlock0, textBlockAnchor0, textAnchor0, (-4234.203747818));
      boolean boolean0 = categoryTick0.equals(categoryTick0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, (TextBlock) null, textBlockAnchor0, textAnchor0, 2555.0);
      boolean boolean0 = categoryTick0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, (TextBlock) null, textBlockAnchor0, textAnchor0, 2555.0);
      // Undeclared exception!
      try { 
        categoryTick0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryTick", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, (TextBlock) null, textBlockAnchor0, textAnchor0, 2555.0);
      TextBlock textBlock0 = categoryTick0.getLabel();
      assertNull(textBlock0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, (TextBlock) null, textBlockAnchor0, textAnchor0, 2555.0);
      Comparable comparable1 = categoryTick0.getCategory();
      assertNotNull(comparable1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBlockAnchor textBlockAnchor0 = TextBlockAnchor.TOP_LEFT;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      CategoryTick categoryTick0 = new CategoryTick(comparable0, (TextBlock) null, textBlockAnchor0, textAnchor0, 2555.0);
      TextBlockAnchor textBlockAnchor1 = categoryTick0.getLabelAnchor();
      assertSame(textBlockAnchor0, textBlockAnchor1);
  }
}
