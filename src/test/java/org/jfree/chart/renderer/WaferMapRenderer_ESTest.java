/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:26:01 GMT 2019
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.math.BigInteger;
import java.util.EnumSet;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.block.LengthConstraintType;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.data.general.WaferMapDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WaferMapRenderer_ESTest extends WaferMapRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getLegendCollection();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      linkedHashSet0.add((Integer) 10);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(1);
      linkedHashSet0.add(integer0);
      waferMapPlot0.handleClick((-1277), 1, plotRenderingInfo0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getChipColor(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.getLegendCollection();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      Integer integer0 = new Integer((-1277));
      linkedHashSet0.add(integer0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      waferMapPlot0.clone();
      waferMapPlot0.handleClick((-1277), 1, plotRenderingInfo0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getPlot();
      WaferMapPlot waferMapPlot1 = waferMapRenderer0.getPlot();
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(waferMapPlot1.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      waferMapRenderer0.getLegendCollection();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-108);
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)14;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = bigInteger0.andNot(bigInteger1);
      HashSet<Float> hashSet0 = new HashSet<Float>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(bigInteger2).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(hashSet0).when(waferMapDataset0).getUniqueValues();
      Float float0 = new Float((float) (byte) (-1));
      hashSet0.add(float0);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      waferMapPlot0.handleClick((-1277), 1, plotRenderingInfo0);
      // Undeclared exception!
      waferMapRenderer0.setPlot(waferMapPlot0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getLegendCollection();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      linkedHashSet0.add((Integer) 10);
      Integer integer0 = new Integer((-1277));
      Integer.getInteger("QHIx ;~CG><1:Vhjt", (Integer) 10);
      linkedHashSet0.add(integer0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      waferMapPlot0.handleClick((-1277), 1, plotRenderingInfo0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getLegendCollection();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'fillPaint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getLegendCollection();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      linkedHashSet0.add((Integer) 10);
      Integer integer0 = new Integer((-1277));
      Integer.getInteger("QHIx ;~CG><1:Vhjt", (Integer) 10);
      linkedHashSet0.add(integer0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getLegendCollection();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'fillPaint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getDefaultCreateEntities());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getDefaultItemLabelsVisible());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, waferMapRenderer0.getDefaultEntityRadius());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisibleInLegend());
      assertNotNull(waferMapRenderer0);
      assertEquals(0, WaferMapRenderer.POSITION_INDEX);
      assertEquals(1, WaferMapRenderer.VALUE_INDEX);
      
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getDefaultCreateEntities());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getDefaultItemLabelsVisible());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, waferMapRenderer0.getDefaultEntityRadius());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, legendItemCollection0.getItemCount());
      assertNotNull(legendItemCollection0);
      assertEquals(0, WaferMapRenderer.POSITION_INDEX);
      assertEquals(1, WaferMapRenderer.VALUE_INDEX);
      
      LegendItemCollection legendItemCollection1 = waferMapRenderer0.getLegendCollection();
      assertTrue(legendItemCollection1.equals((Object)legendItemCollection0));
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getDefaultCreateEntities());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getDefaultItemLabelsVisible());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, waferMapRenderer0.getDefaultEntityRadius());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, legendItemCollection1.getItemCount());
      assertNotSame(legendItemCollection1, legendItemCollection0);
      assertNotNull(legendItemCollection1);
      assertEquals(0, WaferMapRenderer.POSITION_INDEX);
      assertEquals(1, WaferMapRenderer.VALUE_INDEX);
      
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      assertFalse(linkedHashSet0.contains((-793)));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      assertFalse(linkedHashSet0.contains((-793)));
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getDefaultCreateEntities());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getDefaultItemLabelsVisible());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, waferMapRenderer0.getDefaultEntityRadius());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertTrue(waferMapPlot0.isOutlineVisible());
      assertEquals("WMAP_Plot", waferMapPlot0.getPlotType());
      assertEquals(15, waferMapPlot0.getBackgroundImageAlignment());
      assertFalse(waferMapPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, waferMapPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, waferMapPlot0.getForegroundAlpha(), 0.01F);
      assertNull(waferMapPlot0.getNoDataMessage());
      assertTrue(waferMapPlot0.isNotify());
      assertFalse(waferMapPlot0.isSubplot());
      assertEquals(1.0F, waferMapPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(waferMapPlot0);
      assertEquals(0, WaferMapRenderer.POSITION_INDEX);
      assertEquals(1, WaferMapRenderer.VALUE_INDEX);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(WaferMapPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      boolean boolean0 = linkedHashSet0.add((Integer) 10);
      assertTrue(linkedHashSet0.contains(10));
      assertFalse(linkedHashSet0.contains((-793)));
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
      assertTrue(boolean0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      waferMapPlot0.handleClick((-1277), 1, plotRenderingInfo0);
      assertTrue(linkedHashSet0.contains(10));
      assertFalse(linkedHashSet0.contains(1));
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getDefaultCreateEntities());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getDefaultItemLabelsVisible());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, waferMapRenderer0.getDefaultEntityRadius());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
      assertTrue(waferMapPlot0.isOutlineVisible());
      assertEquals("WMAP_Plot", waferMapPlot0.getPlotType());
      assertEquals(15, waferMapPlot0.getBackgroundImageAlignment());
      assertFalse(waferMapPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, waferMapPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, waferMapPlot0.getForegroundAlpha(), 0.01F);
      assertNull(waferMapPlot0.getNoDataMessage());
      assertTrue(waferMapPlot0.isNotify());
      assertFalse(waferMapPlot0.isSubplot());
      assertEquals(1.0F, waferMapPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, WaferMapRenderer.POSITION_INDEX);
      assertEquals(1, WaferMapRenderer.VALUE_INDEX);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(WaferMapPlot.DEFAULT_CROSSHAIR_VISIBLE);
      
      waferMapRenderer0.setPlot(waferMapPlot0);
      assertTrue(linkedHashSet0.contains(10));
      assertFalse(linkedHashSet0.contains(1));
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waferMapRenderer0.getDefaultCreateEntities());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisible());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waferMapRenderer0.getDefaultItemLabelsVisible());
      assertTrue(waferMapRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, waferMapRenderer0.getDefaultEntityRadius());
      assertTrue(waferMapRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
      assertTrue(waferMapPlot0.isOutlineVisible());
      assertEquals("WMAP_Plot", waferMapPlot0.getPlotType());
      assertEquals(15, waferMapPlot0.getBackgroundImageAlignment());
      assertFalse(waferMapPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, waferMapPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, waferMapPlot0.getForegroundAlpha(), 0.01F);
      assertNull(waferMapPlot0.getNoDataMessage());
      assertTrue(waferMapPlot0.isNotify());
      assertFalse(waferMapPlot0.isSubplot());
      assertEquals(1.0F, waferMapPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, WaferMapRenderer.POSITION_INDEX);
      assertEquals(1, WaferMapRenderer.VALUE_INDEX);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(WaferMapPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getLegendCollection();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      Integer integer0 = new Integer((-2650));
      linkedHashSet0.add(integer0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      waferMapPlot0.handleClick((-2650), 1, plotRenderingInfo0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      System.setCurrentTimeMillis(10);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getLegendCollection();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      Integer integer0 = new Integer((-1277));
      Integer.getInteger("QHIx ;~CG><1:Vhjt", (Integer) 10);
      linkedHashSet0.add(integer0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      waferMapPlot0.handleClick((-1277), 1, plotRenderingInfo0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getLegendCollection();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'fillPaint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getLegendCollection();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(waferMapRenderer0.ZERO).when(waferMapDataset0).getMaxValue();
      doReturn(1).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      Integer integer0 = new Integer((-1277));
      linkedHashSet0.add(integer0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      waferMapPlot0.handleClick((-1277), 1, plotRenderingInfo0);
      waferMapRenderer0.setPlot(waferMapPlot0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-869), (-869));
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      waferMapRenderer0.setDefaultStroke((Stroke) basicStroke0, false);
      waferMapRenderer0.getItemFillPaint(1376, (-869));
      Color color0 = new Color(10);
      SystemColor systemColor0 = SystemColor.window;
      Color.getColor("Vh?", (Color) systemColor0);
      waferMapRenderer0.setSeriesPaint(1376, (Paint) color0, true);
      waferMapRenderer0.getDrawingSupplier();
      waferMapRenderer0.getItemOutlinePaint(47, 10);
      LinkedHashSet<MockFileInputStream> linkedHashSet0 = new LinkedHashSet<MockFileInputStream>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(waferMapDataset0).getMaxValue();
      doReturn(0).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getDrawingSupplier();
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null, (Number) null, (Number) null).when(waferMapDataset0).getMaxValue();
      doReturn((Number) null, (Number) null, (Number) null).when(waferMapDataset0).getMinValue();
      doReturn((Set) null, (Set) null, (Set) null).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      waferMapRenderer0.fireChangeEvent();
      Integer integer0 = new Integer((-1104));
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(integer0);
      Integer.getInteger("", 1);
      rendererChangeEvent0.getChart();
      waferMapPlot0.setChart((JFreeChart) null);
      waferMapPlot0.setForegroundAlpha(475.0F);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getPlot();
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getDrawingSupplier();
      waferMapRenderer0.getPlot();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(0, 0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 0);
      waferMapDataset0.setMaxChipY(0);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      Paint[] paintArray0 = new Paint[0];
      waferMapPlot0.setChart((JFreeChart) null);
      Stroke[] strokeArray0 = new Stroke[6];
      strokeArray0[0] = waferMapPlot0.DEFAULT_GRIDLINE_STROKE;
      strokeArray0[1] = waferMapPlot0.DEFAULT_OUTLINE_STROKE;
      strokeArray0[2] = waferMapPlot0.DEFAULT_OUTLINE_STROKE;
      strokeArray0[3] = waferMapRenderer0.DEFAULT_STROKE;
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_TICK_MARK_STROKE;
      strokeArray0[4] = (Stroke) basicStroke0;
      strokeArray0[5] = waferMapPlot0.DEFAULT_GRIDLINE_STROKE;
      Shape[] shapeArray0 = new Shape[0];
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier(paintArray0, paintArray0, paintArray0, strokeArray0, strokeArray0, shapeArray0);
      defaultDrawingSupplier0.getNextStroke();
      waferMapPlot0.setDrawingSupplier((DrawingSupplier) defaultDrawingSupplier0);
      waferMapPlot0.setBackgroundImage((Image) null);
      waferMapRenderer0.setDefaultOutlineStroke(waferMapPlot0.DEFAULT_CROSSHAIR_STROKE);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getPlot();
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getDrawingSupplier();
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, (Integer) null);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor((Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((Integer) null, integer0);
      waferMapRenderer0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.getPlot();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(0, 1776);
      waferMapRenderer0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-869), (-869));
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      waferMapRenderer0.setDefaultStroke((Stroke) basicStroke0, false);
      waferMapRenderer0.getItemFillPaint(1376, (-869));
      Color color0 = new Color(10);
      SystemColor systemColor0 = SystemColor.window;
      Color.getColor("Vh?", (Color) systemColor0);
      waferMapRenderer0.setSeriesPaint(1376, (Paint) color0, true);
      waferMapRenderer0.getDrawingSupplier();
      waferMapRenderer0.getItemOutlinePaint(47, 10);
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(waferMapDataset0).getMaxValue();
      doReturn((Number) null).when(waferMapDataset0).getMinValue();
      doReturn((Set) null).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      // Undeclared exception!
      try { 
        waferMapRenderer0.setPlot(waferMapPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-3838), 7);
      waferMapRenderer0.getDrawingSupplier();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 7);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      waferMapDataset0.setNotify(false);
      waferMapPlot0.setBackgroundImageAlignment((-1569));
      waferMapRenderer0.setLegendTextPaint(35, waferMapPlot0.DEFAULT_CROSSHAIR_PAINT);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getPlot();
      waferMapRenderer0.getDrawingSupplier();
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-979), 0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(614, (-308), 1);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      WaferMapPlot waferMapPlot1 = new WaferMapPlot();
      waferMapPlot0.setParent(waferMapPlot1);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getDrawingSupplier();
      waferMapRenderer0.getLegendCollection();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      waferMapRenderer0.setSeriesPaint(0, (Paint) null);
      waferMapRenderer0.getSeriesVisibleInLegend(1);
      waferMapRenderer0.setPlot((WaferMapPlot) null);
      waferMapRenderer0.setPlot((WaferMapPlot) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(1, 0, waferMapRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(1.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-1749));
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      Short short0 = new Short((short)37);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(short0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(26);
      Integer integer1 = new Integer(1);
      Integer.toUnsignedLong((-1707));
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer1);
      Integer.getInteger((String) null);
      waferMapRenderer0.getDrawingSupplier();
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(integer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(0, 0);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      // Undeclared exception!
      try { 
        waferMapRenderer0.setPlot(waferMapPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(1463, 1463);
      waferMapRenderer0.getLegendCollection();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      Double double0 = new Double(1);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-793), (-793));
      waferMapRenderer0.getLegendCollection();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-108);
      byte byte0 = (byte)8;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.getSeriesShapesVisible((byte) (-108));
      // Undeclared exception!
      try { 
        waferMapRenderer0.setSeriesCreateEntities((-1), (Boolean) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(0, 0);
      waferMapRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      ItemLabelPosition itemLabelPosition0 = areaRenderer0.getDefaultNegativeItemLabelPosition();
      itemLabelPosition0.equals(waferMapRenderer0);
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TAPER;
      areaRenderer0.lookupSeriesStroke((-1178));
      areaRenderer0.setEndType(areaRendererEndType0);
      itemLabelPosition0.equals(areaRenderer0);
      waferMapRenderer0.setSeriesPositiveItemLabelPosition(255, itemLabelPosition0, true);
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getPlot();
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(1.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      Byte.compare((byte)0, (byte)0);
      waferMapRenderer0.setPlot((WaferMapPlot) null);
      waferMapRenderer0.setPlot((WaferMapPlot) null);
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getDrawingSupplier();
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getPlot();
      waferMapRenderer0.setPlot((WaferMapPlot) null);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (byte)0;
      floatArray0[2] = (float) (byte)0;
      Color[] colorArray0 = new Color[0];
      waferMapRenderer0.getDrawingSupplier();
      waferMapRenderer0.getLegendCollection();
      waferMapRenderer0.getPlot();
      waferMapRenderer0.getLegendCollection();
      LegendItemCollection legendItemCollection1 = waferMapRenderer0.getLegendCollection();
      assertNotSame(legendItemCollection1, legendItemCollection0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-869), (-869));
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      waferMapRenderer0.setDefaultStroke((Stroke) basicStroke0, false);
      waferMapRenderer0.getItemFillPaint(1376, (-869));
      Color color0 = new Color(10);
      SystemColor systemColor0 = SystemColor.window;
      Color.getColor("Vhv&?", (Color) systemColor0);
      waferMapRenderer0.setSeriesPaint(1376, (Paint) color0, true);
      waferMapRenderer0.getDrawingSupplier();
      waferMapRenderer0.getItemOutlinePaint(47, 10);
      LinkedHashSet<MockFileInputStream> linkedHashSet0 = new LinkedHashSet<MockFileInputStream>();
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(waferMapDataset0).getMaxValue();
      doReturn(0).when(waferMapDataset0).getMinValue();
      doReturn(linkedHashSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      waferMapRenderer0.setPlot(waferMapPlot0);
      waferMapRenderer0.getDrawingSupplier();
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      Short short0 = new Short((short)37);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      LengthConstraintType lengthConstraintType1 = LengthConstraintType.NONE;
      EnumSet<LengthConstraintType> enumSet0 = EnumSet.of(lengthConstraintType0, lengthConstraintType1);
      WaferMapDataset waferMapDataset0 = mock(WaferMapDataset.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(waferMapDataset0).getMaxValue();
      doReturn(short0).when(waferMapDataset0).getMinValue();
      doReturn(enumSet0).when(waferMapDataset0).getUniqueValues();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      waferMapPlot0.setForegroundAlpha(2465.793F);
      waferMapRenderer0.setPlot(waferMapPlot0);
      assertTrue(waferMapRenderer0.getAutoPopulateSeriesShape());
  }
}
