/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:13:11 GMT 2019
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Line2D;
import java.sql.Connection;
import java.text.NumberFormat;
import java.util.Stack;
import javax.swing.JLayeredPane;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.IntervalXYToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.data.Range;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.TableXYDataset;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackedXYAreaRenderer_ESTest extends StackedXYAreaRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer((-1357));
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      double double0 = stackedXYAreaRenderer0.getPreviousHeight(defaultTableXYDataset0, 0, 1024);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_GRIDLINE_STROKE;
      stackedXYAreaRenderer0.setShapeStroke(basicStroke0);
      BasicStroke basicStroke1 = (BasicStroke)stackedXYAreaRenderer0.getShapeStroke();
      assertEquals(0, basicStroke1.getEndCap());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(1800);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      Range range0 = stackedXYAreaRenderer0.findRangeBounds(defaultTableXYDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(0, (XYToolTipGenerator) null, (XYURLGenerator) null);
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer0.getPreviousHeight((TableXYDataset) null, 91, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer((-217));
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer0.getPreviousHeight(timeTableXYDataset0, 531, (-1930));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(589);
      JLayeredPane jLayeredPane0 = new JLayeredPane();
      EmptyBorder emptyBorder0 = new EmptyBorder(750, 1, 4, 0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jLayeredPane0, (Border) emptyBorder0, 531, 2, 589, 4);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      NumberAxis numberAxis0 = new NumberAxis("");
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      CrosshairState crosshairState0 = new CrosshairState();
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer0.drawItem((Graphics2D) null, (XYItemRendererState) null, rectangle0, plotRenderingInfo0, (XYPlot) null, numberAxis0, numberAxis0, matrixSeriesCollection0, 0, 0, crosshairState0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(2016);
      Object object0 = stackedXYAreaRenderer0.clone();
      boolean boolean0 = stackedXYAreaRenderer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(2016);
      boolean boolean0 = stackedXYAreaRenderer0.equals(stackedXYAreaRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      Object object0 = new Object();
      boolean boolean0 = stackedXYAreaRenderer0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(0);
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset((Connection) null);
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer0.getPreviousHeight(jDBCXYDataset0, 500, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(2);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      double double0 = stackedXYAreaRenderer0.getPreviousHeight(defaultTableXYDataset0, (-231), (-231));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      IntervalXYToolTipGenerator intervalXYToolTipGenerator0 = new IntervalXYToolTipGenerator("", numberFormat0, mockSimpleDateFormat0);
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(2599, intervalXYToolTipGenerator0, (XYURLGenerator) null);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      // Undeclared exception!
      try { 
        stackedXYAreaRenderer0.findRangeBounds(defaultXYDataset0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.DefaultXYDataset cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(0);
      Range range0 = stackedXYAreaRenderer0.findRangeBounds((XYDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer.StackedXYAreaRendererState stackedXYAreaRenderer_StackedXYAreaRendererState0 = new StackedXYAreaRenderer.StackedXYAreaRendererState(plotRenderingInfo0);
      Polygon polygon0 = stackedXYAreaRenderer_StackedXYAreaRendererState0.getSeriesArea();
      assertNull(polygon0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer.StackedXYAreaRendererState stackedXYAreaRenderer_StackedXYAreaRendererState0 = new StackedXYAreaRenderer.StackedXYAreaRendererState(plotRenderingInfo0);
      Stack stack0 = stackedXYAreaRenderer_StackedXYAreaRendererState0.getCurrentSeriesPoints();
      assertTrue(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer.StackedXYAreaRendererState stackedXYAreaRenderer_StackedXYAreaRendererState0 = new StackedXYAreaRenderer.StackedXYAreaRendererState(plotRenderingInfo0);
      stackedXYAreaRenderer_StackedXYAreaRendererState0.setLastSeriesPoints((Stack) null);
      assertFalse(stackedXYAreaRenderer_StackedXYAreaRendererState0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer.StackedXYAreaRendererState stackedXYAreaRenderer_StackedXYAreaRendererState0 = new StackedXYAreaRenderer.StackedXYAreaRendererState(plotRenderingInfo0);
      Stack stack0 = stackedXYAreaRenderer_StackedXYAreaRendererState0.getLastSeriesPoints();
      assertEquals("[]", stack0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer.StackedXYAreaRendererState stackedXYAreaRenderer_StackedXYAreaRendererState0 = new StackedXYAreaRenderer.StackedXYAreaRendererState(plotRenderingInfo0);
      stackedXYAreaRenderer_StackedXYAreaRendererState0.setCurrentSeriesPoints((Stack) null);
      assertFalse(stackedXYAreaRenderer_StackedXYAreaRendererState0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer.StackedXYAreaRendererState stackedXYAreaRenderer_StackedXYAreaRendererState0 = new StackedXYAreaRenderer.StackedXYAreaRendererState(plotRenderingInfo0);
      Line2D.Double line2D_Double0 = (Line2D.Double)stackedXYAreaRenderer_StackedXYAreaRendererState0.getLine();
      assertEquals(0.0, line2D_Double0.x1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer.StackedXYAreaRendererState stackedXYAreaRenderer_StackedXYAreaRendererState0 = new StackedXYAreaRenderer.StackedXYAreaRendererState(plotRenderingInfo0);
      Polygon polygon0 = new Polygon();
      stackedXYAreaRenderer_StackedXYAreaRendererState0.setSeriesArea(polygon0);
      assertEquals(0, stackedXYAreaRenderer_StackedXYAreaRendererState0.getLastItemIndex());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      SystemColor systemColor0 = SystemColor.controlShadow;
      stackedXYAreaRenderer0.setShapePaint(systemColor0);
      Paint paint0 = stackedXYAreaRenderer0.getShapePaint();
      assertEquals(1, paint0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      Stroke stroke0 = stackedXYAreaRenderer0.getShapeStroke();
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      Paint paint0 = stackedXYAreaRenderer0.getShapePaint();
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(0);
      int int0 = stackedXYAreaRenderer0.getPassCount();
      assertEquals(2, int0);
  }
}
