/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:09:53 GMT 2019
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.ui.LengthAdjustmentType;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYBoxAndWhiskerRenderer_ESTest extends XYBoxAndWhiskerRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer1 = new XYBoxAndWhiskerRenderer();
      boolean boolean0 = xYBoxAndWhiskerRenderer0.equals(xYBoxAndWhiskerRenderer1);
      assertTrue(xYBoxAndWhiskerRenderer1.getFillBox());
      assertFalse(xYBoxAndWhiskerRenderer1.equals((Object)xYBoxAndWhiskerRenderer0));
      assertFalse(boolean0);
      assertEquals((-1.0), xYBoxAndWhiskerRenderer1.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 90);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYBoxAndWhiskerRenderer0.drawHighFarOut(0.1, graphics2D0, 90, 0.1);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      xYBoxAndWhiskerRenderer0.setBoxWidth((-1272));
      assertEquals((-1272.0), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(xYDatasetTableModel0, defaultTableColumnModel0);
      Point point0 = jTable0.getLocation();
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.drawMultipleEllipse(point0, (-139.086216417), 3.0, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(3.0);
      double double0 = xYBoxAndWhiskerRenderer0.getBoxWidth();
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      assertEquals(3.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      double double0 = xYBoxAndWhiskerRenderer0.getBoxWidth();
      assertEquals((-1.0), double0, 0.01);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-5);
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.setArtifactPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.drawLowFarOut((-3314.600561138288), (Graphics2D) null, 0.0, (-2987.54268));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.drawHighFarOut(75.0, (Graphics2D) null, (-2991.5979), (-2991.5979));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(360.23992093);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.drawEllipse(point2D_Float0, 360.23992093, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      Color color0 = (Color)xYBoxAndWhiskerRenderer0.getBoxPaint();
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      assertEquals(255, color0.getGreen());
      assertEquals((-1.0), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer1 = new XYBoxAndWhiskerRenderer(0.0);
      boolean boolean0 = xYBoxAndWhiskerRenderer0.equals(xYBoxAndWhiskerRenderer1);
      assertEquals(0.0, xYBoxAndWhiskerRenderer1.getBoxWidth(), 0.01);
      assertFalse(xYBoxAndWhiskerRenderer1.equals((Object)xYBoxAndWhiskerRenderer0));
      assertFalse(boolean0);
      assertTrue(xYBoxAndWhiskerRenderer1.getFillBox());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Rectangle2D rectangle2D1 = rectangleInsets0.createAdjustedRectangle(rectangle2D0, lengthAdjustmentType0, lengthAdjustmentType0);
      xYBoxAndWhiskerRenderer0.setDefaultLegendShape(rectangle2D1);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer1 = new XYBoxAndWhiskerRenderer(0.0);
      boolean boolean0 = xYBoxAndWhiskerRenderer0.equals(xYBoxAndWhiskerRenderer1);
      assertFalse(boolean0);
      assertEquals(0.0, xYBoxAndWhiskerRenderer1.getBoxWidth(), 0.01);
      assertTrue(xYBoxAndWhiskerRenderer1.getFillBox());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer1 = (XYBoxAndWhiskerRenderer)xYBoxAndWhiskerRenderer0.clone();
      boolean boolean0 = xYBoxAndWhiskerRenderer0.equals(xYBoxAndWhiskerRenderer1);
      assertTrue(boolean0);
      assertTrue(xYBoxAndWhiskerRenderer1.getFillBox());
      assertEquals(0.0, xYBoxAndWhiskerRenderer1.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      boolean boolean0 = xYBoxAndWhiskerRenderer0.equals(xYBoxAndWhiskerRenderer0);
      assertTrue(boolean0);
      assertEquals(0.0, xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer((-801.2991336474147));
      boolean boolean0 = xYBoxAndWhiskerRenderer0.equals((Object) null);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      assertFalse(boolean0);
      assertEquals((-801.2991336474147), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYItemRendererState xYItemRendererState0 = xYBoxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainXYPlot0, categoryTableXYDataset0, (PlotRenderingInfo) null);
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("\"ggbgz7`TVj%*+O", stringArray0);
      CrosshairState crosshairState0 = new CrosshairState();
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D_Double0, (PlotRenderingInfo) null, combinedDomainXYPlot0, symbolAxis0, symbolAxis0, categoryTableXYDataset0, 0, 2694, crosshairState0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.CategoryTableXYDataset cannot be cast to org.jfree.data.statistics.BoxAndWhiskerXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("formatter", xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 754.913214, 464.049, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(bufferedImage0, false);
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(defaultMutableTreeNode0, false);
      JTree jTree0 = new JTree(defaultTreeModel0);
      Rectangle rectangle0 = jTree0.getRowBounds(0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = defaultXYItemRenderer0.initialise(graphics2D0, rectangle0, combinedDomainXYPlot0, categoryTableXYDataset0, plotRenderingInfo0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("formatter");
      CrosshairState crosshairState0 = new CrosshairState();
      // Undeclared exception!
      try { 
        xYBoxAndWhiskerRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle0, plotRenderingInfo0, combinedDomainXYPlot0, logarithmicAxis0, (ValueAxis) null, categoryTableXYDataset0, (-1), (-2142865890), crosshairState0, 2146682347);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.CategoryTableXYDataset cannot be cast to org.jfree.data.statistics.BoxAndWhiskerXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      xYBoxAndWhiskerRenderer0.setBoxWidth(0.0);
      assertEquals(0.0, xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer((-801.2991336474147));
      assertEquals((-801.2991336474147), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
      
      xYBoxAndWhiskerRenderer0.setBoxWidth((-801.2991336474147));
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Point point0 = new Point(500, 192);
      xYBoxAndWhiskerRenderer0.drawEllipse(point0, 1071.729955981, graphics2D0);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      assertEquals((-1.0), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      JTextPane jTextPane0 = new JTextPane();
      Color color0 = jTextPane0.getCaretColor();
      xYBoxAndWhiskerRenderer0.setArtifactPaint(color0);
      xYBoxAndWhiskerRenderer0.getArtifactPaint();
      assertEquals(0.0, xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYBoxAndWhiskerRenderer0.drawLowFarOut(1.0, graphics2D0, 0.1, (-153.0));
      assertEquals((-1.0), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer((-801.2991336474147));
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      
      xYBoxAndWhiskerRenderer0.setFillBox(false);
      boolean boolean0 = xYBoxAndWhiskerRenderer0.getFillBox();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer((-801.2991336474147));
      boolean boolean0 = xYBoxAndWhiskerRenderer0.getFillBox();
      assertEquals((-801.2991336474147), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      double double0 = xYBoxAndWhiskerRenderer0.getBoxWidth();
      assertEquals(0.0, double0, 0.01);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYBoxAndWhiskerRenderer0.drawHighFarOut(0, graphics2D0, 401.497200822, 475.8594915617983);
      assertEquals((-1.0), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer((-801.2991336474147));
      xYBoxAndWhiskerRenderer0.setBoxPaint((Paint) null);
      Color color0 = (Color)xYBoxAndWhiskerRenderer0.lookupBoxPaint((-966), 1669);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      assertNotNull(color0);
      assertEquals((-801.2991336474147), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
      assertEquals(255, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      xYBoxAndWhiskerRenderer0.findRangeBounds(defaultTableXYDataset0);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      assertEquals((-1.0), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      Color color0 = (Color)xYBoxAndWhiskerRenderer0.lookupBoxPaint((-153), 1905);
      assertEquals((-1.0), xYBoxAndWhiskerRenderer0.getBoxWidth(), 0.01);
      assertTrue(xYBoxAndWhiskerRenderer0.getFillBox());
      assertEquals(255, color0.getGreen());
  }
}
