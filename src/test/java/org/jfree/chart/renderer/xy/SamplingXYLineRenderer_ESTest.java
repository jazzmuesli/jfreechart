/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:52:40 GMT 2019
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.SamplingXYLineRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SamplingXYLineRenderer_ESTest extends SamplingXYLineRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = samplingXYLineRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      xYItemRendererState0.startSeriesPass((XYDataset) null, (-847), 10, (-2797), 1, 1);
      assertEquals(10, xYItemRendererState0.getFirstItemIndex());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      samplingXYLineRenderer0.setLegendShape(2839, (Shape) null);
      Object object0 = samplingXYLineRenderer0.clone();
      // Undeclared exception!
      samplingXYLineRenderer0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Object object0 = samplingXYLineRenderer0.clone();
      boolean boolean0 = samplingXYLineRenderer0.equals(object0);
      assertNotSame(object0, samplingXYLineRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SamplingXYLineRenderer.State samplingXYLineRenderer_State0 = new SamplingXYLineRenderer.State((PlotRenderingInfo) null);
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      boolean boolean0 = samplingXYLineRenderer0.equals(samplingXYLineRenderer_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      boolean boolean0 = samplingXYLineRenderer0.equals(samplingXYLineRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Object object0 = samplingXYLineRenderer0.clone();
      assertTrue(object0.equals((Object)samplingXYLineRenderer0));
      
      samplingXYLineRenderer0.setDefaultEntityRadius(10);
      boolean boolean0 = samplingXYLineRenderer0.equals(object0);
      assertFalse(boolean0);
      assertFalse(object0.equals((Object)samplingXYLineRenderer0));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = samplingXYLineRenderer0.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, xYDataset0, (PlotRenderingInfo) null);
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        samplingXYLineRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, (Rectangle2D) null, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 1, (-1842), crosshairState0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.SamplingXYLineRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      int int0 = samplingXYLineRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = samplingXYLineRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYItemRendererState0.startSeriesPass(xYDataset1, 0, 0, 0, 10, 0);
      assertEquals(0, xYItemRendererState0.getFirstItemIndex());
      assertEquals(0, xYItemRendererState0.getLastItemIndex());
  }
}
