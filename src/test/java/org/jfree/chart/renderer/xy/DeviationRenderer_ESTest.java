/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:42:03 GMT 2019
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.labels.XYSeriesLabelGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.AbstractXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.data.Range;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DeviationRenderer_ESTest extends DeviationRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      
      Line2D.Double line2D_Double0 = (Line2D.Double)deviationRenderer0.getLegendLine();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(line2D_Double0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      deviationRenderer0.setLegendLine(line2D_Double0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      
      Comparable<XYIntervalSeriesCollection> comparable0 = (Comparable<XYIntervalSeriesCollection>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(500).when(xYDataset0).getSeriesCount();
      doReturn(7.0, (-7.0), (-7.0), 0.0, comparable0).when(xYDataset0).getSeriesKey(anyInt());
      doReturn(500, 500, 500, 2926, 500).when(xYDataset0).indexOf(any(java.lang.Comparable.class));
      doReturn(2, (-2278), 797, (-887), (-887)).when(xYDataset0).getItemCount(anyInt());
      doReturn(243.28, 56.170902, (double)2926, (-1.0), (double)2926).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn((double)(-2278), (double)(-2278), 207.918749249278, (double)2926, (double)2).when(xYDataset0).getYValue(anyInt() , anyInt());
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)deviationRenderer0.lookupLegendShape(2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(rectangle2D_Double0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(range0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(5204.0, range0.getLength(), 0.01);
      assertEquals((-2278.0), range0.getLowerBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(324.0, range0.getCentralValue(), 0.01);
      assertEquals(2926.0, range0.getUpperBound(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(xYPlot0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      
      deviationRenderer0.setAlpha(0.0F);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      boolean boolean1 = deviationRenderer0.isItemPass(10);
      assertFalse(boolean1 == boolean0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      Range range1 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      deviationRenderer0.setSeriesShapesFilled(1738, false);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      int int0 = deviationRenderer0.getPassCount();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(3, int0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      float float0 = deviationRenderer0.getAlpha();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0F, float0, 0.01F);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      boolean boolean2 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      
      Line2D.Double line2D_Double0 = (Line2D.Double)deviationRenderer0.getLegendLine();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(line2D_Double0);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      deviationRenderer0.setLegendLine(line2D_Double0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      
      Comparable<XYIntervalSeriesCollection> comparable0 = (Comparable<XYIntervalSeriesCollection>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(500).when(xYDataset0).getSeriesCount();
      doReturn(7.0, (-7.0), (-7.0), 0.0, comparable0).when(xYDataset0).getSeriesKey(anyInt());
      doReturn(500, 500, 500, 2926, 500).when(xYDataset0).indexOf(any(java.lang.Comparable.class));
      doReturn(2, (-2278), 797, (-887), (-887)).when(xYDataset0).getItemCount(anyInt());
      doReturn((double)797, 0.0, (double)(-2278), (-1.0), 826.101129).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(7.0, 100.0, 0.0, 0.0, (-4257.19)).when(xYDataset0).getYValue(anyInt() , anyInt());
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)deviationRenderer0.lookupLegendShape(2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(rectangle2D_Double0);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(range0);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(4357.19, range0.getLength(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals((-2078.595), range0.getCentralValue(), 0.01);
      assertEquals(100.0, range0.getUpperBound(), 0.01);
      assertEquals((-4257.19), range0.getLowerBound(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(xYPlot0);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      
      deviationRenderer0.setAlpha(0.0F);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      boolean boolean1 = deviationRenderer0.isItemPass(10);
      assertFalse(boolean1 == boolean0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      Range range1 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      deviationRenderer0.setSeriesShapesFilled(1738, false);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      int int0 = deviationRenderer0.getPassCount();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(3, int0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      float float0 = deviationRenderer0.getAlpha();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0F, float0, 0.01F);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      boolean boolean2 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      
      float float0 = deviationRenderer0.getAlpha();
      assertEquals(0.5F, float0, 0.01F);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(true, false);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotNull(deviationRenderer1);
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      
      boolean boolean0 = deviationRenderer1.equals(deviationRenderer0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      
      XYPlot xYPlot0 = deviationRenderer1.getPlot();
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNull(xYPlot0);
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State1 = (DeviationRenderer.State)deviationRenderer1.initialise(graphics2D1, (Rectangle2D) null, (XYPlot) null, xYDataset1, plotRenderingInfo1);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer_State1.equals((Object)deviationRenderer_State0));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer_State1, deviationRenderer_State0);
      assertNotNull(deviationRenderer_State1);
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertEquals(0, deviationRenderer_State1.getFirstItemIndex());
      assertFalse(deviationRenderer_State1.getElementHinting());
      assertEquals(0, deviationRenderer_State1.getLastItemIndex());
      assertFalse(deviationRenderer_State1.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State1.isLastPointGood());
      
      boolean boolean1 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      
      deviationRenderer1.setDrawSeriesLineAsPath(false);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(xYDataset2).getSeriesCount();
      doReturn(1.0F, 10, 10).when(xYDataset2).getSeriesKey(anyInt());
      doReturn(10, (-253), 10).when(xYDataset2).indexOf(any(java.lang.Comparable.class));
      doReturn(3, 1087, (-253)).when(xYDataset2).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset2).getXValue(anyInt() , anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset2).getYValue(anyInt() , anyInt());
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset2);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(range0);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getUpperBound(), 0.01);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.0, range0.getLength(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      
      DeviationRenderer deviationRenderer2 = (DeviationRenderer)deviationRenderer0.clone();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(deviationRenderer2.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer2.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer2, deviationRenderer1);
      assertNotSame(deviationRenderer2, deviationRenderer0);
      assertNotNull(deviationRenderer2);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer2.getDefaultShapesFilled());
      assertTrue(deviationRenderer2.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer2.getAlpha(), 0.01F);
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer2.getDrawOutlines());
      assertEquals(2.0, deviationRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer2.getDefaultSeriesVisible());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer2.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer2.getDefaultShapesVisible());
      assertFalse(deviationRenderer2.getUseFillPaint());
      assertEquals(3, deviationRenderer2.getPassCount());
      assertTrue(deviationRenderer2.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer2.getUseOutlinePaint());
      assertEquals(3, deviationRenderer2.getDefaultEntityRadius());
      assertTrue(deviationRenderer2.getDefaultLinesVisible());
      assertTrue(deviationRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer2.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesPaint());
      
      boolean boolean2 = deviationRenderer0.equals(deviationRenderer2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer2));
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(deviationRenderer2.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer2.equals((Object)deviationRenderer0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer2, deviationRenderer1);
      assertNotSame(deviationRenderer2, deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer2.getDefaultShapesFilled());
      assertTrue(deviationRenderer2.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer2.getAlpha(), 0.01F);
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer2.getDrawOutlines());
      assertEquals(2.0, deviationRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer2.getDefaultSeriesVisible());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer2.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer2.getDefaultShapesVisible());
      assertFalse(deviationRenderer2.getUseFillPaint());
      assertEquals(3, deviationRenderer2.getPassCount());
      assertTrue(deviationRenderer2.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer2.getUseOutlinePaint());
      assertEquals(3, deviationRenderer2.getDefaultEntityRadius());
      assertTrue(deviationRenderer2.getDefaultLinesVisible());
      assertTrue(deviationRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer2.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      float float0 = deviationRenderer0.getAlpha();
      assertEquals(0.5F, float0, 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-3353)).when(xYDataset0).getSeriesCount();
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset0);
      assertNull(range0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      
      deviationRenderer_State0.setLastPointGood(true);
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertTrue(deviationRenderer_State0.isLastPointGood());
      
      GeneralPath generalPath0 = deviationRenderer_State0.seriesPath;
      assertNotNull(generalPath0);
      assertEquals(1, generalPath0.getWindingRule());
      
      AbstractXYItemRenderer.moveTo(generalPath0, 270.0, 0.0);
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertTrue(deviationRenderer_State0.isLastPointGood());
      assertEquals(1, generalPath0.getWindingRule());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer0);
      assertTrue(boolean0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      int int0 = deviationRenderer0.getPassCount();
      assertEquals(3, int0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      int int1 = deviationRenderer0.getPassCount();
      assertTrue(int1 == int0);
      assertEquals(3, int1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(true, true);
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotNull(deviationRenderer1);
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      
      XYPlot xYPlot0 = deviationRenderer1.getPlot();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNull(xYPlot0);
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo1).getOwner();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(xYDataset1).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset1).getYValue(anyInt() , anyInt());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Comparable<DefaultTableXYDataset> comparable0 = (Comparable<DefaultTableXYDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.beginElementGroup(graphics2D1, comparable0, 39);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 2, 0, crosshairState0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      DeviationRenderer deviationRenderer1 = new DeviationRenderer();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotNull(deviationRenderer1);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      
      XYPlot xYPlot0 = deviationRenderer1.getPlot();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNull(xYPlot0);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(2146036459).when(xYDataset0).getSeriesCount();
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      // Undeclared exception!
      deviationRenderer1.findRangeBounds(xYDataset0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset0);
      assertNull(range0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertNull(xYPlot0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset1, plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = deviationRenderer0.hasListener((EventListener) null);
      assertFalse(boolean0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 10, 500, crosshairState0, 59);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      
      Range range1 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertNull(range1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      boolean boolean1 = deviationRenderer0.isItemPass((-2464));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      boolean boolean2 = deviationRenderer0.isItemPass(10);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      int int0 = deviationRenderer0.getPassCount();
      assertEquals(3, int0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      
      boolean boolean3 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      
      boolean boolean4 = deviationRenderer0.isItemPass(2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      boolean boolean5 = deviationRenderer0.isLinePass(0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      boolean boolean6 = deviationRenderer0.equals((Object) null);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean6 == boolean3);
      assertFalse(boolean6 == boolean4);
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean0);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      boolean boolean7 = deviationRenderer0.isItemPass(10);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean7 == boolean2);
      assertTrue(boolean7 == boolean1);
      assertFalse(boolean7 == boolean3);
      assertTrue(boolean7 == boolean6);
      assertTrue(boolean7 == boolean0);
      assertTrue(boolean7 == boolean5);
      assertFalse(boolean7 == boolean4);
      assertFalse(boolean7);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      Range range2 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range2);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      boolean boolean8 = deviationRenderer0.isLinePass(59);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean8 == boolean3);
      assertTrue(boolean8 == boolean7);
      assertTrue(boolean8 == boolean2);
      assertTrue(boolean8 == boolean5);
      assertTrue(boolean8 == boolean6);
      assertTrue(boolean8 == boolean1);
      assertFalse(boolean8 == boolean4);
      assertTrue(boolean8 == boolean0);
      assertFalse(boolean8);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo2 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State1 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D1, rectangle2D2, (XYPlot) null, (XYDataset) null, plotRenderingInfo2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(deviationRenderer_State1.equals((Object)deviationRenderer_State0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer_State1, deviationRenderer_State0);
      assertNotNull(deviationRenderer_State1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(0, deviationRenderer_State1.getFirstItemIndex());
      assertFalse(deviationRenderer_State1.getElementHinting());
      assertFalse(deviationRenderer_State1.isLastPointGood());
      assertFalse(deviationRenderer_State1.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State1.getLastItemIndex());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      
      Line2D.Double line2D_Double0 = (Line2D.Double)deviationRenderer0.getLegendLine();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(line2D_Double0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      deviationRenderer0.setLegendLine(line2D_Double0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(xYPlot0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      
      deviationRenderer0.setAlpha(0.0F);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      boolean boolean1 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      Range range1 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      deviationRenderer0.setSeriesShapesFilled(1738, false);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      int int0 = deviationRenderer0.getPassCount();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(3, int0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      float float0 = deviationRenderer0.getAlpha();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0F, float0, 0.01F);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      boolean boolean2 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      int int1 = (-2089);
      boolean boolean3 = deviationRenderer0.isItemPass((-2089));
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      boolean boolean4 = deviationRenderer0.equals((Object) null);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      float float1 = deviationRenderer0.getAlpha();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      boolean boolean5 = deviationRenderer0.isItemPass(3);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      boolean boolean6 = deviationRenderer0.isLinePass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean4);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6 == boolean0);
      assertFalse(boolean6);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha(666.987F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(false, true);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotNull(deviationRenderer1);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)deviationRenderer1.getDefaultShape();
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(rectangle2D_Double0);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      
      deviationRenderer0.setLegendLine(rectangle2D_Double0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      
      boolean boolean0 = deviationRenderer0.getItemShapeFilled(537, 537);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      
      DeviationRenderer deviationRenderer2 = (DeviationRenderer)deviationRenderer0.clone();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer2.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer2.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer2, deviationRenderer0);
      assertNotSame(deviationRenderer2, deviationRenderer1);
      assertNotNull(deviationRenderer2);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer2.getDefaultLinesVisible());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer2.getUseFillPaint());
      assertTrue(deviationRenderer2.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer2.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer2.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer2.getDefaultEntityRadius());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer2.getUseOutlinePaint());
      assertTrue(deviationRenderer2.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer2.getDefaultShapesVisible());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer2.getAlpha(), 0.01F);
      assertTrue(deviationRenderer2.getDrawOutlines());
      assertTrue(deviationRenderer2.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer2.getPassCount());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer2.getDefaultShapesFilled());
      
      boolean boolean1 = deviationRenderer0.equals(deviationRenderer2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer2));
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer2.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer2.equals((Object)deviationRenderer1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer2, deviationRenderer0);
      assertNotSame(deviationRenderer2, deviationRenderer1);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer2.getDefaultLinesVisible());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer2.getUseFillPaint());
      assertTrue(deviationRenderer2.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer2.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer2.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer2.getDefaultEntityRadius());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer2.getUseOutlinePaint());
      assertTrue(deviationRenderer2.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer2.getDefaultShapesVisible());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer2.getAlpha(), 0.01F);
      assertTrue(deviationRenderer2.getDrawOutlines());
      assertTrue(deviationRenderer2.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer2.getPassCount());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer2.getDefaultShapesFilled());
      
      deviationRenderer1.setAlpha(0.0F);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer1.getPlot();
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertNull(xYPlot0);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer1.initialise(graphics2D1, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertNotNull(deviationRenderer_State0);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer1.drawItem(graphics2D0, deviationRenderer_State0, (Rectangle2D) null, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 10, 0, crosshairState0, 500);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      
      boolean boolean2 = deviationRenderer1.equals(deviationRenderer2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer2));
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(deviationRenderer2.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer2.equals((Object)deviationRenderer1));
      assertFalse(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertNotSame(deviationRenderer2, deviationRenderer0);
      assertNotSame(deviationRenderer2, deviationRenderer1);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer2.getDefaultLinesVisible());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer2.getUseFillPaint());
      assertTrue(deviationRenderer2.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer2.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer2.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer2.getDefaultEntityRadius());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer2.getUseOutlinePaint());
      assertTrue(deviationRenderer2.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer2.getDefaultShapesVisible());
      assertTrue(deviationRenderer2.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer2.getAlpha(), 0.01F);
      assertTrue(deviationRenderer2.getDrawOutlines());
      assertTrue(deviationRenderer2.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer2.getPassCount());
      assertFalse(deviationRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer2.getDefaultShapesFilled());
      
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset2).getSeriesCount();
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer2));
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range0);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      
      deviationRenderer1.setDrawSeriesLineAsPath(true);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset3 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState1 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer1.drawItem(graphics2D2, deviationRenderer_State0, (Rectangle2D) null, (PlotRenderingInfo) null, (XYPlot) null, valueAxis1, valueAxis1, xYDataset3, 39, 10, crosshairState1, 39);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      
      deviationRenderer1.setDrawSeriesLineAsPath(true);
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(deviationRenderer1.equals((Object)deviationRenderer2));
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotSame(deviationRenderer1, deviationRenderer2);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      assertNotNull(deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setAlpha(1.0F);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(1.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertNull(xYPlot0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(1.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(1.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertFalse(deviationRenderer_State0.isLastPointGood());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      int int0 = 3;
      XYToolTipGenerator xYToolTipGenerator0 = deviationRenderer0.getToolTipGenerator(3, 3);
      assertNull(xYToolTipGenerator0);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setSeriesToolTipGenerator(3, (XYToolTipGenerator) null);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      int int1 = (-2117);
      XYToolTipGenerator xYToolTipGenerator1 = deviationRenderer0.getDefaultToolTipGenerator();
      assertNull(xYToolTipGenerator1);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setSeriesToolTipGenerator((-2117), (XYToolTipGenerator) null);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      int int2 = 1;
      boolean boolean0 = deviationRenderer0.isLinePass(1);
      assertTrue(boolean0);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = null;
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.fillDomainGridBand(graphics2D0, (XYPlot) null, valueAxis0, rectangle2D0, 2.0F, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.AbstractXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      deviationRenderer0.setAutoPopulateSeriesShape(true);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(true, true);
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotNull(deviationRenderer1);
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)deviationRenderer1.getDefaultShape();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(rectangle2D_Double0);
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      
      deviationRenderer0.setLegendShape(3, rectangle2D_Double0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      
      boolean boolean0 = deviationRenderer0.isLinePass(0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      deviationRenderer0.setAlpha(0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer_State0);
      assertFalse(boolean0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      assertNotNull(deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      Range range0 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertNull(range0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, true);
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      
      int int0 = deviationRenderer0.getPassCount();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(3, int0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      
      int int1 = deviationRenderer0.getPassCount();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(int1 == int0);
      assertEquals(3, int1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      
      int int0 = 252;
      Font font0 = deviationRenderer0.getDefaultItemLabelFont();
      assertNotNull(font0);
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(font0.isBold());
      assertTrue(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isTransformed());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertEquals(0, font0.getStyle());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.isItalic());
      
      deviationRenderer0.setSeriesItemLabelFont(252, font0, false);
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(font0.isBold());
      assertTrue(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isTransformed());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertEquals(0, font0.getStyle());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.isItalic());
      
      boolean boolean0 = deviationRenderer0.isItemPass(1801);
      assertFalse(boolean0);
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha((-136.0F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertNull(xYPlot0);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise((Graphics2D) null, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem((Graphics2D) null, deviationRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 0, 1, crosshairState0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      assertNotNull(deviationRenderer0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha(883.019F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      
      boolean boolean0 = deviationRenderer0.isItemPass(575);
      assertFalse(boolean0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      
      int int0 = deviationRenderer0.getPassCount();
      assertEquals(3, int0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setAutoPopulateSeriesShape(false);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo1).getOwner();
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertNull(xYPlot0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = null;
      EntityCollection entityCollection0 = deviationRenderer_State0.getEntityCollection();
      assertNull(entityCollection0);
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D0, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 0, 10, crosshairState0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)deviationRenderer0.lookupLegendShape(1023);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertNotNull(rectangle2D_Double0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      
      deviationRenderer0.setLegendLine(rectangle2D_Double0);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      
      Color color0 = (Color)deviationRenderer0.lookupSeriesFillPaint(2);
      assertNotNull(color0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(255, color0.getRed());
      assertEquals((-1), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getBlue());
      
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      
      boolean boolean0 = deviationRenderer0.isLinePass(0);
      assertFalse(boolean0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      
      float float0 = deviationRenderer0.getAlpha();
      assertEquals(0.5F, float0, 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      
      boolean boolean1 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      
      boolean boolean2 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      
      boolean boolean3 = deviationRenderer0.isLinePass(0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(xYPlot0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D1, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 1023, 2, crosshairState0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataset$MockitoMock$809235151 cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      assertNotNull(deviationRenderer0);
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(false, false);
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotNull(deviationRenderer1);
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertFalse(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getDefaultLinesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertFalse(deviationRenderer1.getDefaultShapesVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      boolean boolean0 = deviationRenderer0.isItemPass((-1107));
      assertFalse(boolean0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.getElementHinting());
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = null;
      Color color0 = (Color)deviationRenderer0.lookupSeriesPaint(5);
      assertNotNull(color0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getBlue());
      assertEquals((-16776961), color0.getRGB());
      
      deviationRenderer0.setDefaultLegendTextPaint(color0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getBlue());
      assertEquals((-16776961), color0.getRGB());
      
      XYPlot xYPlot0 = null;
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      deviationRenderer_State0.setLastPointGood(true);
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertTrue(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.getElementHinting());
      
      EntityCollection entityCollection0 = deviationRenderer_State0.getEntityCollection();
      assertNull(entityCollection0);
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertTrue(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.getElementHinting());
      
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      int int0 = 1;
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D0, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, 500, 500, crosshairState0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      assertNotNull(deviationRenderer_State0);
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      
      Line2D.Double line2D_Double0 = (Line2D.Double)deviationRenderer_State0.workingLine;
      assertEquals(0.0, line2D_Double0.x1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(0.0, line2D_Double0.x2, 0.01);
      assertNotNull(line2D_Double0);
      
      deviationRenderer_State0.workingLine = (Line2D) line2D_Double0;
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0.0, deviationRenderer_State0.workingLine.getX1(), 0.01);
      assertEquals(0.0, deviationRenderer_State0.workingLine.getY2(), 0.01);
      assertEquals(0.0, deviationRenderer_State0.workingLine.getX2(), 0.01);
      assertEquals(0.0, deviationRenderer_State0.workingLine.getY1(), 0.01);
      
      deviationRenderer_State0.setElementHinting(true);
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertTrue(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer_State0);
      assertFalse(boolean0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertTrue(deviationRenderer_State0.getElementHinting());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertTrue(deviationRenderer_State0.getProcessVisibleItemsOnly());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State1 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo1);
      assertFalse(deviationRenderer_State1.equals((Object)deviationRenderer_State0));
      assertNotSame(deviationRenderer_State1, deviationRenderer_State0);
      assertNotNull(deviationRenderer_State1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer_State1.getElementHinting());
      assertEquals(0, deviationRenderer_State1.getFirstItemIndex());
      assertEquals(0, deviationRenderer_State1.getLastItemIndex());
      assertFalse(deviationRenderer_State1.isLastPointGood());
      assertFalse(deviationRenderer_State1.getProcessVisibleItemsOnly());
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo2 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State2 = new DeviationRenderer.State(plotRenderingInfo2);
      assertFalse(deviationRenderer_State2.equals((Object)deviationRenderer_State0));
      assertFalse(deviationRenderer_State2.equals((Object)deviationRenderer_State1));
      assertNotNull(deviationRenderer_State2);
      assertFalse(deviationRenderer_State2.isLastPointGood());
      assertTrue(deviationRenderer_State2.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State2.getFirstItemIndex());
      assertFalse(deviationRenderer_State2.getElementHinting());
      assertEquals(0, deviationRenderer_State2.getLastItemIndex());
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo3 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawItem(graphics2D1, deviationRenderer_State2, rectangle2D1, plotRenderingInfo3, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 0, 0, crosshairState0, (-587));
      assertFalse(deviationRenderer_State2.equals((Object)deviationRenderer_State0));
      assertFalse(deviationRenderer_State2.equals((Object)deviationRenderer_State1));
      assertNotSame(deviationRenderer_State2, deviationRenderer_State0);
      assertNotSame(deviationRenderer_State2, deviationRenderer_State1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertFalse(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertFalse(deviationRenderer_State2.isLastPointGood());
      assertTrue(deviationRenderer_State2.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State2.getFirstItemIndex());
      assertFalse(deviationRenderer_State2.getElementHinting());
      assertEquals(0, deviationRenderer_State2.getLastItemIndex());
      
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo4 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState1 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D2, deviationRenderer_State1, rectangle2D2, plotRenderingInfo4, (XYPlot) null, valueAxis1, valueAxis1, xYDataset2, 0, (-587), crosshairState1, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataset$MockitoMock$809235151 cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      
      Line2D.Double line2D_Double0 = (Line2D.Double)deviationRenderer0.getLegendLine();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(line2D_Double0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      deviationRenderer0.setLegendLine(line2D_Double0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer1.getUseFillPaint());
      
      Comparable<XYIntervalSeriesCollection> comparable0 = (Comparable<XYIntervalSeriesCollection>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(500).when(xYDataset0).getSeriesCount();
      doReturn(7.0, (-7.0), (-7.0), 0.0, comparable0).when(xYDataset0).getSeriesKey(anyInt());
      doReturn(500, 500, 500, 2926, 500).when(xYDataset0).indexOf(any(java.lang.Comparable.class));
      doReturn(2, (-2278), 797, (-887), (-887)).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)deviationRenderer0.lookupLegendShape(2);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(range0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.0, range0.getLength(), 0.01);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
      assertFalse(range0.isNaNRange());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(xYPlot0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      assertFalse(deviationRenderer_State0.getElementHinting());
      
      deviationRenderer0.setAlpha(0.0F);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      boolean boolean1 = deviationRenderer0.isItemPass(10);
      assertFalse(boolean1 == boolean0);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      Range range1 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      deviationRenderer0.setSeriesShapesFilled(1738, false);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      int int0 = deviationRenderer0.getPassCount();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(3, int0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      float float0 = deviationRenderer0.getAlpha();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0F, float0, 0.01F);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      boolean boolean2 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      
      int int1 = (-2089);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D1, deviationRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis1, (XYDataset) null, 10, (-725), crosshairState0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      DeviationRenderer deviationRenderer1 = (DeviationRenderer)deviationRenderer0.clone();
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertNotNull(deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      
      Line2D.Double line2D_Double0 = (Line2D.Double)deviationRenderer0.getLegendLine();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(line2D_Double0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setLegendLine(line2D_Double0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer1);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(deviationRenderer1.equals((Object)deviationRenderer0));
      assertTrue(boolean0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotSame(deviationRenderer1, deviationRenderer0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0.5F, deviationRenderer1.getAlpha(), 0.01F);
      assertTrue(deviationRenderer1.getDrawOutlines());
      assertTrue(deviationRenderer1.getDefaultCreateEntities());
      assertTrue(deviationRenderer1.getDefaultShapesFilled());
      assertFalse(deviationRenderer1.getUseOutlinePaint());
      assertEquals(3, deviationRenderer1.getDefaultEntityRadius());
      assertTrue(deviationRenderer1.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer1.getDefaultLinesVisible());
      assertTrue(deviationRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer1.getDefaultShapesVisible());
      assertEquals(3, deviationRenderer1.getPassCount());
      assertFalse(deviationRenderer1.getUseFillPaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer1.getDefaultSeriesVisible());
      assertFalse(deviationRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(deviationRenderer1.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer1.getAutoPopulateSeriesShape());
      assertEquals(2.0, deviationRenderer1.getItemLabelAnchorOffset(), 0.01);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(2919).when(xYDataset0).getSeriesCount();
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      doReturn(0, 0, 0, 0, 0).when(xYDataset0).indexOf(any(java.lang.Comparable.class));
      doReturn(0, 0, 0, 0, 0).when(xYDataset0).getItemCount(anyInt());
      Range range0 = deviationRenderer0.findRangeBounds(xYDataset0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = deviationRenderer0.getPlot();
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(xYPlot0);
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      DeviationRenderer.State deviationRenderer_State0 = (DeviationRenderer.State)deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      assertTrue(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNotNull(deviationRenderer_State0);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(deviationRenderer_State0.getElementHinting());
      assertFalse(deviationRenderer_State0.isLastPointGood());
      assertEquals(0, deviationRenderer_State0.getFirstItemIndex());
      assertFalse(deviationRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, deviationRenderer_State0.getLastItemIndex());
      
      deviationRenderer0.setAlpha(0.0F);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      boolean boolean1 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      Range range1 = deviationRenderer0.findRangeBounds((XYDataset) null);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertNull(range1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      deviationRenderer0.setSeriesShapesFilled(1738, false);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      int int0 = deviationRenderer0.getPassCount();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(3, int0);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      float float0 = deviationRenderer0.getAlpha();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(0.0F, float0, 0.01F);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      boolean boolean2 = deviationRenderer0.isItemPass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      int int1 = (-2089);
      boolean boolean3 = deviationRenderer0.isItemPass((-2089));
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      boolean boolean4 = deviationRenderer0.equals((Object) null);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      float float1 = deviationRenderer0.getAlpha();
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      boolean boolean5 = deviationRenderer0.isItemPass(3);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean0);
      assertFalse(boolean5);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      boolean boolean6 = deviationRenderer0.isLinePass(10);
      assertFalse(deviationRenderer0.equals((Object)deviationRenderer1));
      assertFalse(boolean6 == boolean0);
      assertTrue(boolean6 == boolean4);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6);
      assertNotSame(deviationRenderer0, deviationRenderer1);
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha(666.987F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      assertNotNull(deviationRenderer0);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      int int0 = (-70);
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      int int1 = 0;
      deviationRenderer0.setSeriesItemLabelFont((-70), (Font) null, false);
      assertEquals(3, deviationRenderer0.getPassCount());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultShapesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesShape());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, deviationRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(deviationRenderer0.getDefaultItemLabelsVisible());
      assertFalse(deviationRenderer0.getUseFillPaint());
      assertFalse(deviationRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, deviationRenderer0.getDefaultEntityRadius());
      assertFalse(deviationRenderer0.getUseOutlinePaint());
      assertTrue(deviationRenderer0.getDefaultLinesVisible());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(deviationRenderer0.getDefaultSeriesVisible());
      assertTrue(deviationRenderer0.getDrawOutlines());
      assertTrue(deviationRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(deviationRenderer0.getDefaultCreateEntities());
      assertTrue(deviationRenderer0.getDefaultShapesFilled());
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(deviationRenderer0.getAutoPopulateSeriesStroke());
      
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        deviationRenderer0.updateCrosshairValues(crosshairState0, 2048.9702206785746, 315.9427721097, 0, (-1.0), 466.514736919, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.AbstractXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = deviationRenderer0.equals(deviationRenderer0);
      assertTrue(boolean0);
      
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(3070).when(xYDataset0).getSeriesCount();
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      doReturn(0, 0, 0, 0, 0).when(xYDataset0).indexOf(any(java.lang.Comparable.class));
      doReturn(0, 0, 0, 0, 0).when(xYDataset0).getItemCount(anyInt());
      deviationRenderer0.findRangeBounds(xYDataset0);
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      deviationRenderer0.setDefaultLegendShape(deviationRenderer0.DEFAULT_SHAPE);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo1);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
      assertTrue(deviationRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYItemRendererState0.getProcessVisibleItemsOnly());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawDomainMarker(graphics2D1, (XYPlot) null, valueAxis1, marker0, rectangle2D0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.fillRangeGridBand(graphics2D0, (XYPlot) null, valueAxis0, rectangle2D1, 1.0E-8, 361.99);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.AbstractXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      deviationRenderer0.isItemPass((-687));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      GeneralPath generalPath0 = deviationRenderer_State0.seriesPath;
      AbstractXYItemRenderer.moveTo(generalPath0, (double) deviationRenderer0.ZERO, (-326));
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha((-326));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      deviationRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      deviationRenderer0.setAlpha(1.0F);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.initialise(graphics2D1, rectangle2D1, (XYPlot) null, xYDataset1, plotRenderingInfo1);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo2 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo2).getOwner();
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D2, xYItemRendererState0, rectangle2D2, plotRenderingInfo2, (XYPlot) null, (ValueAxis) null, (ValueAxis) null, xYDataset2, 10, (-1810), crosshairState0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      deviationRenderer0.setDefaultLinesVisible(true);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      GeneralPath generalPath0 = deviationRenderer_State0.seriesPath;
      AbstractXYItemRenderer.moveTo(generalPath0, 0.0, (double) deviationRenderer0.ZERO);
      deviationRenderer0.setDefaultShapesVisible(false);
      deviationRenderer0.lookupLegendTextPaint(0);
      Shape shape0 = deviationRenderer0.getDefaultShape();
      deviationRenderer0.setLegendShape(5, shape0);
      deviationRenderer0.isLinePass(8);
      deviationRenderer0.isLinePass(0);
      deviationRenderer0.getPassCount();
      deviationRenderer0.isLinePass(3);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.initialise((Graphics2D) null, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo1);
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      PlotRenderingInfo plotRenderingInfo2 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem((Graphics2D) null, deviationRenderer_State0, (Rectangle2D) null, plotRenderingInfo2, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 500, 0, crosshairState0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }
}
