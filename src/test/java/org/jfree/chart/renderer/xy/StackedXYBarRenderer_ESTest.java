/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:13:37 GMT 2019
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.text.NumberFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.IntervalXYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.HighLowRenderer;
import org.jfree.chart.renderer.xy.SamplingXYLineRenderer;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.data.Range;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackedXYBarRenderer_ESTest extends StackedXYBarRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
      
      stackedXYBarRenderer0.setRenderAsPercentages(true);
      boolean boolean0 = stackedXYBarRenderer0.getRenderAsPercentages();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      MatrixSeries matrixSeries0 = new MatrixSeries("", 2, 2);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      // Undeclared exception!
      try { 
        stackedXYBarRenderer0.findRangeBounds(matrixSeriesCollection0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.MatrixSeriesCollection cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 482, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Hour hour0 = new Hour();
      Minute minute0 = new Minute(769, hour0);
      PeriodAxis periodAxis0 = new PeriodAxis("%X*}-i!$&.f", minute0, minute0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = samplingXYLineRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeXYPlot0, defaultTableXYDataset0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedXYBarRenderer0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, plotRenderingInfo0, combinedRangeXYPlot0, periodAxis0, periodAxis0, defaultTableXYDataset0, 23, 0, (CrosshairState) null, 37);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 23, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
      
      stackedXYBarRenderer0.setRenderAsPercentages(true);
      stackedXYBarRenderer0.hashCode();
      assertTrue(stackedXYBarRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      stackedXYBarRenderer0.hashCode();
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      stackedXYBarRenderer0.setRenderAsPercentages(true);
      StackedXYBarRenderer stackedXYBarRenderer1 = new StackedXYBarRenderer(0.0);
      boolean boolean0 = stackedXYBarRenderer0.equals(stackedXYBarRenderer1);
      assertTrue(stackedXYBarRenderer0.getRenderAsPercentages());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      StackedXYBarRenderer stackedXYBarRenderer1 = new StackedXYBarRenderer(0.0);
      boolean boolean0 = stackedXYBarRenderer0.equals(stackedXYBarRenderer1);
      assertFalse(stackedXYBarRenderer1.getRenderAsPercentages());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      boolean boolean0 = stackedXYBarRenderer0.equals(stackedXYBarRenderer0);
      assertTrue(boolean0);
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer((-4397.281158912401));
      MeterPlot meterPlot0 = new MeterPlot();
      boolean boolean0 = stackedXYBarRenderer0.equals(meterPlot0);
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis numberAxis0 = new NumberAxis("Nearest");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(matrixSeriesCollection0, numberAxis0, defaultPolarItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, 0.0, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(500, 10, (-339.2F), 1190);
      Rectangle2D rectangle2D0 = numberAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Float0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = highLowRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainXYPlot0, matrixSeriesCollection0, plotRenderingInfo0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      CrosshairState crosshairState0 = new CrosshairState();
      // Undeclared exception!
      try { 
        stackedXYBarRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D0, plotRenderingInfo0, combinedRangeXYPlot0, numberAxis0, numberAxis0, matrixSeriesCollection0, 1, 6394, crosshairState0, 6394);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // dataset (type org.jfree.data.xy.MatrixSeriesCollection) has wrong type: it is no IntervalXYDataset and it is no TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer((-4397.281158912401));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      IntervalXYToolTipGenerator intervalXYToolTipGenerator0 = new IntervalXYToolTipGenerator("", numberFormat0, numberFormat0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(3, intervalXYToolTipGenerator0);
      XYItemRendererState xYItemRendererState0 = cyclicXYItemRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedDomainXYPlot0, timeSeriesCollection0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedXYBarRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D_Float0, plotRenderingInfo0, combinedDomainXYPlot0, (ValueAxis) null, (ValueAxis) null, (XYDataset) null, (-1), 1, categoryCrosshairState0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3, 0.0, "fqWp\"rs_OfG$f;I|[u");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CrosshairState crosshairState0 = new CrosshairState();
      // Undeclared exception!
      try { 
        stackedXYBarRenderer0.drawItem((Graphics2D) null, (XYItemRendererState) null, rectangle0, plotRenderingInfo0, combinedDomainXYPlot0, cyclicNumberAxis0, cyclicNumberAxis0, defaultTableXYDataset0, (-1114), 10, crosshairState0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
      
      stackedXYBarRenderer0.setRenderAsPercentages(true);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      stackedXYBarRenderer0.findRangeBounds(defaultTableXYDataset0);
      assertTrue(stackedXYBarRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      Range range0 = stackedXYBarRenderer0.findRangeBounds(defaultTableXYDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      stackedXYBarRenderer0.findRangeBounds((XYDataset) null);
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      int int0 = stackedXYBarRenderer0.getPassCount();
      assertEquals(3, int0);
      assertFalse(stackedXYBarRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer((-4397.281158912401));
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("zFormat", meterPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 3.0F, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = stackedXYBarRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedDomainXYPlot0, timeSeriesCollection0, plotRenderingInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        stackedXYBarRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D_Float0, plotRenderingInfo0, combinedDomainXYPlot0, cyclicNumberAxis0, cyclicNumberAxis0, timeSeriesCollection0, 270, 3, categoryCrosshairState0, 17);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // dataset (type org.jfree.data.time.TimeSeriesCollection) has wrong type: it is no TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      boolean boolean0 = stackedXYBarRenderer0.getRenderAsPercentages();
      assertFalse(boolean0);
  }
}
