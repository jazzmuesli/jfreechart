/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:40:12 GMT 2019
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import java.time.format.DateTimeFormatter;
import java.util.Collection;
import java.util.Locale;
import java.util.SimpleTimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.StandardXYSeriesLabelGenerator;
import org.jfree.chart.labels.XYItemLabelGenerator;
import org.jfree.chart.labels.XYSeriesLabelGenerator;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.ui.Layer;
import org.jfree.data.Range;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYErrorRenderer_ESTest extends XYErrorRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      boolean boolean0 = false;
      xYErrorRenderer0.setUseFillPaint(false);
      xYErrorRenderer0.setDrawYError(false);
      xYErrorRenderer0.getErrorStroke();
      xYErrorRenderer0.getLegendShape(3553);
      xYErrorRenderer0.getErrorStroke();
      double double0 = 2156.834897915283;
      xYErrorRenderer0.setCapLength(2156.834897915283);
      xYErrorRenderer0.getDefaultLegendTextPaint();
      xYErrorRenderer0.setErrorPaint((Paint) null);
      XYErrorRenderer xYErrorRenderer1 = (XYErrorRenderer)xYErrorRenderer0.clone();
      xYErrorRenderer0.getSeriesVisible(2502);
      xYErrorRenderer1.setSeriesLinesVisible(3553, (Boolean) null);
      xYErrorRenderer0.equals(xYErrorRenderer1);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(3553).when(xYDataset0).getSeriesCount();
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      // Undeclared exception!
      xYErrorRenderer0.findRangeBounds(xYDataset0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.equals(xYErrorRenderer0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      DatasetGroup datasetGroup0 = categoryTableXYDataset0.getGroup();
      yIntervalSeriesCollection0.setGroup(datasetGroup0);
      xYErrorRenderer0.findDomainBounds(yIntervalSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      Stroke stroke0 = xYErrorRenderer0.lookupSeriesStroke((-3109));
      xYErrorRenderer0.setAutoPopulateSeriesStroke(false);
      xYErrorRenderer0.setCapLength((-3409.5767001444506));
      xYErrorRenderer0.equals(stroke0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(categoryTableXYDataset0, false);
      stackedAreaRenderer0.notifyListeners(rendererChangeEvent0);
      Font font0 = stackedAreaRenderer0.getItemLabelFont((-3109), (-3109));
      xYErrorRenderer0.setDefaultItemLabelFont(font0, false);
      xYErrorRenderer0.setCapLength(0.0);
      xYErrorRenderer0.getCapLength();
      xYErrorRenderer0.getCapLength();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      xYErrorRenderer0.findRangeBounds(histogramDataset0);
      xYErrorRenderer0.findRangeBounds(categoryTableXYDataset0);
      xYErrorRenderer0.setDrawXError(true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1953), "");
      Locale locale0 = new Locale("", "3M(hjtU{DL<3a");
      DateAxis dateAxis0 = new DateAxis("", simpleTimeZone0, locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      simpleTimeZone0.setID("pam5g");
      dateAxis0.setAutoRange(false);
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_DATE_TIME;
      Locale locale1 = dateTimeFormatter0.getLocale();
      locale0.getDisplayLanguage(locale1);
      dateAxis0.zoomRange(1912.597, 2231.404446);
      simpleTimeZone0.inDaylightTime(dateAxis0.DEFAULT_ANCHOR_DATE);
      Stroke stroke0 = combinedRangeCategoryPlot0.getDomainCrosshairStroke();
      xYErrorRenderer0.setErrorStroke(stroke0);
      xYErrorRenderer0.getErrorStroke();
      xYErrorRenderer0.setErrorPaint(dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getItemLabelGenerator(3, 0);
      xYErrorRenderer0.setSeriesItemLabelGenerator(0, (XYItemLabelGenerator) null);
      xYErrorRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      xYErrorRenderer0.getSeriesLinesVisible(0);
      xYErrorRenderer0.setCapLength(30.0);
      xYErrorRenderer0.getDrawXError();
      xYErrorRenderer0.getDrawYError();
      xYErrorRenderer0.getCapLength();
      xYErrorRenderer0.getCapLength();
      xYErrorRenderer0.getDrawXError();
      Stroke stroke0 = xYErrorRenderer0.lookupSeriesStroke(0);
      xYErrorRenderer0.setCapLength((-433.3981477528));
      xYErrorRenderer0.setErrorStroke(stroke0);
      Object object0 = xYErrorRenderer0.clone();
      xYErrorRenderer0.equals(object0);
      XYErrorRenderer xYErrorRenderer1 = new XYErrorRenderer();
      xYErrorRenderer1.setSeriesLinesVisible(3, (Boolean) null);
      xYErrorRenderer0.equals(xYErrorRenderer1);
      xYErrorRenderer0.getDrawXError();
      Object object1 = xYErrorRenderer1.clone();
      xYErrorRenderer1.equals(object1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      XYBarDataset xYBarDataset0 = new XYBarDataset(xYSeriesCollection0, 1916.5);
      xYErrorRenderer0.equals(xYBarDataset0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorPaint();
      BasicStroke basicStroke0 = (BasicStroke)XYPlot.DEFAULT_CROSSHAIR_STROKE;
      xYErrorRenderer0.setErrorStroke(basicStroke0);
      xYErrorRenderer0.setDrawYError(false);
      xYErrorRenderer0.getDrawXError();
      xYErrorRenderer0.getDrawYError();
      xYErrorRenderer0.setCapLength((-1865.5107848384));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYErrorRenderer xYErrorRenderer1 = new XYErrorRenderer();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYErrorRenderer1.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYErrorRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 500, 500, (CrosshairState) null, (-2));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNotNull(xYErrorRenderer0);
      
      xYErrorRenderer0.setDefaultLinesVisible(false);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      
      Stroke stroke0 = xYErrorRenderer0.getErrorStroke();
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNull(stroke0);
      
      xYErrorRenderer0.setDefaultShapesFilled(false);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      
      XYErrorRenderer xYErrorRenderer1 = (XYErrorRenderer)xYErrorRenderer0.clone();
      assertTrue(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(4.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer1.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertNotNull(xYErrorRenderer1);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      assertNotSame(xYErrorRenderer1, xYErrorRenderer0);
      
      boolean boolean0 = xYErrorRenderer0.equals(xYErrorRenderer1);
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertTrue(boolean0);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(4.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer1.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      assertNotSame(xYErrorRenderer1, xYErrorRenderer0);
      
      Range range0 = xYErrorRenderer0.findDomainBounds((XYDataset) null);
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNull(range0);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      Stroke stroke1 = xYErrorRenderer0.getErrorStroke();
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNull(stroke1);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      assertTrue(boxAndWhiskerRenderer0.getDefaultCreateEntities());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(boxAndWhiskerRenderer0.isMeanVisible());
      assertTrue(boxAndWhiskerRenderer0.getFillBox());
      assertTrue(boxAndWhiskerRenderer0.getDefaultSeriesVisible());
      assertFalse(boxAndWhiskerRenderer0.getUseOutlinePaintForWhiskers());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, boxAndWhiskerRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesShape());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(boxAndWhiskerRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(boxAndWhiskerRenderer0.isMedianVisible());
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
      assertFalse(boxAndWhiskerRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1.0, boxAndWhiskerRenderer0.getWhiskerWidth(), 0.01);
      assertEquals(0.2, boxAndWhiskerRenderer0.getItemMargin(), 0.01);
      assertEquals(0, boxAndWhiskerRenderer0.getRowCount());
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, boxAndWhiskerRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(boxAndWhiskerRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, boxAndWhiskerRenderer0.getPassCount());
      assertEquals(3, boxAndWhiskerRenderer0.getDefaultEntityRadius());
      assertNotNull(boxAndWhiskerRenderer0);
      
      Color color0 = (Color)boxAndWhiskerRenderer0.getArtifactPaint();
      assertTrue(boxAndWhiskerRenderer0.getDefaultCreateEntities());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(boxAndWhiskerRenderer0.isMeanVisible());
      assertTrue(boxAndWhiskerRenderer0.getFillBox());
      assertTrue(boxAndWhiskerRenderer0.getDefaultSeriesVisible());
      assertFalse(boxAndWhiskerRenderer0.getUseOutlinePaintForWhiskers());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, boxAndWhiskerRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesShape());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(boxAndWhiskerRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(boxAndWhiskerRenderer0.isMedianVisible());
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
      assertFalse(boxAndWhiskerRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1.0, boxAndWhiskerRenderer0.getWhiskerWidth(), 0.01);
      assertEquals(0.2, boxAndWhiskerRenderer0.getItemMargin(), 0.01);
      assertEquals(0, boxAndWhiskerRenderer0.getRowCount());
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, boxAndWhiskerRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(boxAndWhiskerRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, boxAndWhiskerRenderer0.getPassCount());
      assertEquals(3, boxAndWhiskerRenderer0.getDefaultEntityRadius());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      xYErrorRenderer0.setErrorPaint(color0);
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(boxAndWhiskerRenderer0.getDefaultCreateEntities());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(boxAndWhiskerRenderer0.isMeanVisible());
      assertTrue(boxAndWhiskerRenderer0.getFillBox());
      assertTrue(boxAndWhiskerRenderer0.getDefaultSeriesVisible());
      assertFalse(boxAndWhiskerRenderer0.getUseOutlinePaintForWhiskers());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, boxAndWhiskerRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesShape());
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(boxAndWhiskerRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(boxAndWhiskerRenderer0.isMedianVisible());
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
      assertFalse(boxAndWhiskerRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1.0, boxAndWhiskerRenderer0.getWhiskerWidth(), 0.01);
      assertEquals(0.2, boxAndWhiskerRenderer0.getItemMargin(), 0.01);
      assertEquals(0, boxAndWhiskerRenderer0.getRowCount());
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, boxAndWhiskerRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(boxAndWhiskerRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, boxAndWhiskerRenderer0.getPassCount());
      assertEquals(3, boxAndWhiskerRenderer0.getDefaultEntityRadius());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      Stroke stroke2 = xYErrorRenderer0.getErrorStroke();
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNull(stroke2);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      double double0 = xYErrorRenderer0.getCapLength();
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertEquals(4.0, double0, 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      xYErrorRenderer0.setDrawYError(false);
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      Color color1 = (Color)xYErrorRenderer0.getErrorPaint();
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, color1.getBlue());
      assertEquals(255, color1.getAlpha());
      assertEquals(0, color1.getGreen());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getRed());
      assertNotNull(color1);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      assertSame(color1, color0);
      
      Stroke stroke3 = xYErrorRenderer0.getErrorStroke();
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertNull(stroke3);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertNotNull(xYErrorRenderer0);
      
      Paint paint0 = xYErrorRenderer0.getSeriesItemLabelPaint(0);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertNull(paint0);
      
      xYErrorRenderer0.setDefaultLegendTextPaint((Paint) null);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      
      XYErrorRenderer xYErrorRenderer1 = new XYErrorRenderer();
      assertTrue(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer1.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertNotNull(xYErrorRenderer1);
      
      boolean boolean0 = xYErrorRenderer0.hasListener(xYErrorRenderer1);
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertFalse(boolean0);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer1.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      assertNotSame(xYErrorRenderer1, xYErrorRenderer0);
      
      xYErrorRenderer0.setErrorPaint((Paint) null);
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      boolean boolean1 = xYErrorRenderer0.getDrawYError();
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      Range range0 = xYErrorRenderer1.findDomainBounds(xYDataset0);
      assertTrue(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer1.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertNull(range0);
      assertNotSame(xYErrorRenderer1, xYErrorRenderer0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYErrorRenderer xYErrorRenderer2 = new XYErrorRenderer();
      assertTrue(xYErrorRenderer2.equals((Object)xYErrorRenderer0));
      assertTrue(xYErrorRenderer2.equals((Object)xYErrorRenderer1));
      assertEquals(2.0, xYErrorRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer2.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer2.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer2.getAutoPopulateSeriesPaint());
      assertEquals(2, xYErrorRenderer2.getPassCount());
      assertTrue(xYErrorRenderer2.getDrawXError());
      assertTrue(xYErrorRenderer2.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer2.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer2.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer2.getUseOutlinePaint());
      assertTrue(xYErrorRenderer2.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer2.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer2.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer2.getUseFillPaint());
      assertFalse(xYErrorRenderer2.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer2.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer2.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer2.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer2.getDrawYError());
      assertTrue(xYErrorRenderer2.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer2.getDrawOutlines());
      assertNotNull(xYErrorRenderer2);
      
      XYPlot xYPlot0 = xYErrorRenderer2.getPlot();
      assertTrue(xYErrorRenderer2.equals((Object)xYErrorRenderer0));
      assertTrue(xYErrorRenderer2.equals((Object)xYErrorRenderer1));
      assertEquals(2.0, xYErrorRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer2.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer2.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer2.getAutoPopulateSeriesPaint());
      assertEquals(2, xYErrorRenderer2.getPassCount());
      assertTrue(xYErrorRenderer2.getDrawXError());
      assertTrue(xYErrorRenderer2.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer2.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer2.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer2.getUseOutlinePaint());
      assertTrue(xYErrorRenderer2.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer2.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer2.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer2.getUseFillPaint());
      assertFalse(xYErrorRenderer2.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer2.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer2.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer2.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer2.getDrawYError());
      assertTrue(xYErrorRenderer2.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer2.getDrawOutlines());
      assertNull(xYPlot0);
      assertNotSame(xYErrorRenderer2, xYErrorRenderer1);
      assertNotSame(xYErrorRenderer2, xYErrorRenderer0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = (XYLineAndShapeRenderer.State)xYErrorRenderer0.initialise(graphics2D1, rectangle2D0, (XYPlot) null, xYDataset1, plotRenderingInfo0);
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertTrue(xYErrorRenderer0.equals((Object)xYErrorRenderer2));
      assertEquals(0, xYLineAndShapeRenderer_State0.getLastItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.isLastPointGood());
      assertTrue(xYLineAndShapeRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, xYLineAndShapeRenderer_State0.getFirstItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.getElementHinting());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertNotNull(xYLineAndShapeRenderer_State0);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer2);
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo1).getOwner();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(xYDataset2).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset2).getYValue(anyInt() , anyInt());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYErrorRenderer1.drawItem(graphics2D0, xYLineAndShapeRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset2, 1, 4243, crosshairState0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertNotNull(xYErrorRenderer0);
      
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator();
      assertNotNull(standardXYSeriesLabelGenerator0);
      
      xYErrorRenderer0.setLegendItemURLGenerator(standardXYSeriesLabelGenerator0);
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      assertTrue(defaultIntervalXYDataset0.getNotify());
      assertEquals(0, defaultIntervalXYDataset0.getSeriesCount());
      assertNotNull(defaultIntervalXYDataset0);
      
      boolean boolean0 = xYErrorRenderer0.equals(defaultIntervalXYDataset0);
      assertFalse(boolean0);
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(defaultIntervalXYDataset0.getNotify());
      assertEquals(0, defaultIntervalXYDataset0.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertNotNull(xYErrorRenderer0);
      
      Boolean boolean0 = xYErrorRenderer0.getSeriesVisibleInLegend(39);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertNull(boolean0);
      
      BasicStroke basicStroke0 = (BasicStroke)xYErrorRenderer0.lookupSeriesStroke(0);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      
      xYErrorRenderer0.setSeriesShapesFilled(0, (Boolean) null);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      
      Paint paint0 = xYErrorRenderer0.getErrorPaint();
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertNull(paint0);
      
      boolean boolean1 = xYErrorRenderer0.getDrawXError();
      assertTrue(boolean1);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      
      xYErrorRenderer0.setErrorPaint((Paint) null);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = xYErrorRenderer0.getPlot();
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertNull(xYPlot0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = (XYLineAndShapeRenderer.State)xYErrorRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYLineAndShapeRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, xYLineAndShapeRenderer_State0.getFirstItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.getElementHinting());
      assertEquals(0, xYLineAndShapeRenderer_State0.getLastItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.isLastPointGood());
      assertNotNull(xYLineAndShapeRenderer_State0);
      
      xYErrorRenderer0.setSeriesLinesVisible(0, false);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYErrorRenderer0.drawItem(graphics2D0, xYLineAndShapeRenderer_State0, (Rectangle2D) null, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis1, xYDataset1, 1379, 0, crosshairState0, 500);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYLineAndShapeRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, xYLineAndShapeRenderer_State0.getFirstItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.getElementHinting());
      assertEquals(0, xYLineAndShapeRenderer_State0.getLastItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.isLastPointGood());
      
      boolean boolean2 = xYErrorRenderer0.getDrawYError();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      
      boolean boolean3 = xYErrorRenderer0.equals((Object) null);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertNotNull(xYErrorRenderer0);
      
      XYAnnotation xYAnnotation0 = mock(XYAnnotation.class, new ViolatedAssumptionAnswer());
      Layer layer0 = Layer.BACKGROUND;
      Boolean boolean0 = xYErrorRenderer0.getSeriesLinesVisible(1520);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertNull(boolean0);
      
      xYErrorRenderer0.addAnnotation(xYAnnotation0, layer0);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      
      Stroke stroke0 = xYErrorRenderer0.getErrorStroke();
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertNull(stroke0);
      
      Paint paint0 = xYErrorRenderer0.getErrorPaint();
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertNotNull(xYErrorRenderer0);
      
      Range range0 = xYErrorRenderer0.findDomainBounds((XYDataset) null);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertNull(range0);
      
      boolean boolean0 = xYErrorRenderer0.getDrawYError();
      assertTrue(boolean0);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertNotNull(xYErrorRenderer0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = xYErrorRenderer0.getPlot();
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertNull(xYPlot0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = (XYLineAndShapeRenderer.State)xYErrorRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(0, xYLineAndShapeRenderer_State0.getLastItemIndex());
      assertTrue(xYLineAndShapeRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, xYLineAndShapeRenderer_State0.getFirstItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.isLastPointGood());
      assertFalse(xYLineAndShapeRenderer_State0.getElementHinting());
      assertNotNull(xYLineAndShapeRenderer_State0);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYErrorRenderer0.drawItem(graphics2D0, xYLineAndShapeRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis1, (XYDataset) null, 10, 0, (CrosshairState) null, 10);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertEquals(0, xYLineAndShapeRenderer_State0.getLastItemIndex());
      assertTrue(xYLineAndShapeRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, xYLineAndShapeRenderer_State0.getFirstItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.isLastPointGood());
      assertFalse(xYLineAndShapeRenderer_State0.getElementHinting());
      
      Range range0 = xYErrorRenderer0.findDomainBounds((XYDataset) null);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertNull(range0);
      
      xYErrorRenderer0.setCapLength(1356.3568008);
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertEquals(1356.3568008, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertNotNull(xYErrorRenderer0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = xYErrorRenderer0.getPlot();
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertNull(xYPlot0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYErrorRenderer0.drawSecondaryPass(graphics2D0, (XYPlot) null, xYDataset0, (-904), 10, 431, (ValueAxis) null, rectangle2D0, (ValueAxis) null, crosshairState0, entityCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertNotNull(xYErrorRenderer0);
      
      XYErrorRenderer xYErrorRenderer1 = new XYErrorRenderer();
      assertTrue(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer1.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(4.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertNotNull(xYErrorRenderer1);
      
      xYErrorRenderer1.setCapLength((double) xYErrorRenderer0.ZERO);
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertFalse(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer1.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertEquals(0.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      assertNotSame(xYErrorRenderer1, xYErrorRenderer0);
      
      xYErrorRenderer0.setItemLabelAnchorOffset((double) xYErrorRenderer1.ZERO);
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertFalse(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(0.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer1.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertEquals(0.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      assertNotSame(xYErrorRenderer1, xYErrorRenderer0);
      
      boolean boolean0 = xYErrorRenderer0.equals(xYErrorRenderer1);
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertFalse(xYErrorRenderer1.equals((Object)xYErrorRenderer0));
      assertFalse(boolean0);
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(0.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYErrorRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer1.getDefaultShapesFilled());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYErrorRenderer1.getDefaultCreateEntities());
      assertTrue(xYErrorRenderer1.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer1.getDrawYError());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer1.getDrawOutlines());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYErrorRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, xYErrorRenderer1.getDefaultEntityRadius());
      assertEquals(0.0, xYErrorRenderer1.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer1.getUseFillPaint());
      assertFalse(xYErrorRenderer1.getDefaultLinesVisible());
      assertEquals(2, xYErrorRenderer1.getPassCount());
      assertTrue(xYErrorRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYErrorRenderer1.getUseOutlinePaint());
      assertTrue(xYErrorRenderer1.getDrawXError());
      assertFalse(xYErrorRenderer1.getDrawSeriesLineAsPath());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      assertNotSame(xYErrorRenderer1, xYErrorRenderer0);
      
      xYErrorRenderer0.setDrawYError(false);
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertEquals(0.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertNotSame(xYErrorRenderer0, xYErrorRenderer1);
      
      JDBCXYDataset jDBCXYDataset0 = null;
      try {
        jDBCXYDataset0 = new JDBCXYDataset("Qp!6={1NfD", "", "", "");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertNotNull(xYErrorRenderer0);
      
      Collection<XYAnnotation> collection0 = xYErrorRenderer0.getAnnotations();
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertNotNull(collection0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      Range range0 = xYErrorRenderer0.findRangeBounds(xYDataset0);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertNull(range0);
      
      Paint paint0 = xYErrorRenderer0.getErrorPaint();
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertNull(paint0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = xYErrorRenderer0.getPlot();
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertNull(xYPlot0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = (XYLineAndShapeRenderer.State)xYErrorRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset1, plotRenderingInfo0);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertEquals(0, xYLineAndShapeRenderer_State0.getFirstItemIndex());
      assertTrue(xYLineAndShapeRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, xYLineAndShapeRenderer_State0.getLastItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.getElementHinting());
      assertFalse(xYLineAndShapeRenderer_State0.isLastPointGood());
      assertNotNull(xYLineAndShapeRenderer_State0);
      
      xYErrorRenderer0.setDrawYError(true);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYErrorRenderer0.drawItem(graphics2D1, xYLineAndShapeRenderer_State0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset2, 0, 4, crosshairState0, 0);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYErrorRenderer0.getDrawXError());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      assertEquals(0, xYLineAndShapeRenderer_State0.getFirstItemIndex());
      assertTrue(xYLineAndShapeRenderer_State0.getProcessVisibleItemsOnly());
      assertEquals(0, xYLineAndShapeRenderer_State0.getLastItemIndex());
      assertFalse(xYLineAndShapeRenderer_State0.getElementHinting());
      assertFalse(xYLineAndShapeRenderer_State0.isLastPointGood());
      
      xYErrorRenderer0.setDrawXError(false);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      
      xYErrorRenderer0.setErrorStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      
      xYErrorRenderer0.setDrawYError(true);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
      
      xYErrorRenderer0.setErrorPaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      assertFalse(xYErrorRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYErrorRenderer0.getDefaultShapesFilled());
      assertTrue(xYErrorRenderer0.getDrawYError());
      assertTrue(xYErrorRenderer0.getDrawOutlines());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisible());
      assertTrue(xYErrorRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYErrorRenderer0.getDefaultEntityRadius());
      assertTrue(xYErrorRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, xYErrorRenderer0.getCapLength(), 0.01);
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYErrorRenderer0.getDrawXError());
      assertTrue(xYErrorRenderer0.getDefaultShapesVisible());
      assertTrue(xYErrorRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYErrorRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYErrorRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYErrorRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYErrorRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYErrorRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2, xYErrorRenderer0.getPassCount());
      assertFalse(xYErrorRenderer0.getDefaultLinesVisible());
      assertFalse(xYErrorRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.setUseFillPaint(false);
      xYErrorRenderer0.setDrawYError(false);
      xYErrorRenderer0.getErrorStroke();
      xYErrorRenderer0.getLegendShape(3553);
      xYErrorRenderer0.getErrorStroke();
      xYErrorRenderer0.setCapLength(2156.834897915283);
      xYErrorRenderer0.getDefaultLegendTextPaint();
      xYErrorRenderer0.setErrorPaint((Paint) null);
      Object object0 = xYErrorRenderer0.clone();
      xYErrorRenderer0.equals(object0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      xYErrorRenderer0.findRangeBounds(xYDataset0);
      xYErrorRenderer0.setCapLength(2156.834897915283);
      xYErrorRenderer0.setDrawYError(false);
      xYErrorRenderer0.getCapLength();
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset1).getSeriesCount();
      xYErrorRenderer0.findRangeBounds(xYDataset1);
      xYErrorRenderer0.getCapLength();
      xYErrorRenderer0.getDrawXError();
      xYErrorRenderer0.setDrawYError(false);
      xYErrorRenderer0.setErrorPaint((Paint) null);
      double double0 = xYErrorRenderer0.getCapLength();
      assertEquals(2156.834897915283, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      xYErrorRenderer0.setDrawYError(false);
      xYErrorRenderer0.findRangeBounds(xYDataset0);
      xYErrorRenderer0.getErrorPaint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYErrorRenderer xYErrorRenderer1 = new XYErrorRenderer();
      xYErrorRenderer1.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYErrorRenderer0.initialise(graphics2D1, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYErrorRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 10, 10, crosshairState0, 278);
      assertFalse(xYErrorRenderer0.getDrawYError());
      assertFalse(xYErrorRenderer0.equals((Object)xYErrorRenderer1));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      Paint paint0 = xYErrorRenderer0.getItemFillPaint((-335), 721);
      xYErrorRenderer0.setDefaultItemLabelPaint(paint0, false);
      xYErrorRenderer0.setDrawXError(false);
      xYErrorRenderer0.setDrawXError(false);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      xYErrorRenderer0.setAutoPopulateSeriesPaint(false);
      xYErrorRenderer0.findRangeBounds(xYDataset0);
      xYErrorRenderer0.getDrawXError();
      Object object0 = xYErrorRenderer0.clone();
      xYErrorRenderer0.equals(object0);
      xYErrorRenderer0.setCapLength((-3310.793123791262));
      xYErrorRenderer0.setErrorPaint(paint0);
      boolean boolean0 = xYErrorRenderer0.getDrawXError();
      assertEquals((-3310.793123791262), xYErrorRenderer0.getCapLength(), 0.01);
      assertFalse(boolean0);
  }
}
