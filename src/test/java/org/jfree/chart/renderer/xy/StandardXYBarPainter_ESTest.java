/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:47:47 GMT 2019
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYBarPainter;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.ui.RectangleEdge;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class StandardXYBarPainter_ESTest extends StandardXYBarPainter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(510.59611);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0, (-2110.03F), 0, (-2110.03F), (-1854.8683F), (-2110.03F), 0);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 0, 3108, arc2D_Float0, rectangleEdge0, false);
      assertEquals((-1.0), xYBarRenderer0.getBarAlignmentFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(1.0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(29, 29, 29, 29);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 29, 29, rectangle2D_Float0, rectangleEdge0, false);
      assertEquals((-1.0), xYBarRenderer0.getBarAlignmentFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), (-1632), (-1876), (-1876));
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, (-1632), (-1876), ellipse2D_Float0, rectangleEdge0, false);
      assertTrue(xYBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("Unrecognised anchor: ", multiplePiePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1024, 15);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(10);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(910, 412.47872013, (-1.0), 0.5F, 10, 0.0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      standardXYBarPainter0.paintBarShadow(sunGraphics2D0, stackedXYBarRenderer0, 910, 200, roundRectangle2D_Double0, rectangleEdge0, false);
      assertEquals((-8355712), sunGraphics2D0.pixel);
      assertEquals((-8355712), sunGraphics2D0.eargb);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(0.0);
      Rectangle rectangle0 = new Rectangle(14, 14);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBar((Graphics2D) null, xYBarRenderer0, 24, 0, rectangle0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      StandardXYBarPainter standardXYBarPainter1 = new StandardXYBarPainter();
      boolean boolean0 = standardXYBarPainter0.equals(standardXYBarPainter1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      boolean boolean0 = standardXYBarPainter0.equals(standardXYBarPainter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      boolean boolean0 = standardXYBarPainter0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double((double) xYBarRenderer0.ZERO, (-2350), (-2350), (-2350));
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)ellipse2D_Double0.getBounds2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, (-2350), (-2350), rectangle2D_Double0, rectangleEdge0, true);
      assertEquals((-2350.0), rectangle2D_Double0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(312.74513618);
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBarShadow((Graphics2D) null, xYBarRenderer0, (-1379), 52, arc2D_Float0, (RectangleEdge) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(0.0);
      Rectangle rectangle0 = new Rectangle(14, 14);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 14, 14, rectangle0, rectangleEdge0, false);
      assertEquals((-1.0), xYBarRenderer0.getBarAlignmentFactor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(0.0);
      Rectangle rectangle0 = new Rectangle(14, 14);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 14, 14, rectangle0, rectangleEdge0, true);
      assertTrue(xYBarRenderer0.getDefaultSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, (-69), (-69), roundRectangle2D_Double0, rectangleEdge0, true);
      assertTrue(xYBarRenderer0.getDefaultSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(0.0);
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(point0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 0, (-1), rectangle0, rectangleEdge0, true);
      assertEquals(0, rectangle0.height);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer((-90.0));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 0, (-3136), rectangle2D_Float0, rectangleEdge0);
      assertTrue(xYBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      standardXYBarPainter0.hashCode();
  }
}
