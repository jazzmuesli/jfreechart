/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:30:42 GMT 2019
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.RendererState;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class RendererState_ESTest extends RendererState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RendererState rendererState0 = new RendererState((PlotRenderingInfo) null);
      rendererState0.getInfo();
      assertFalse(rendererState0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      RendererState rendererState0 = new RendererState(plotRenderingInfo0);
      assertFalse(rendererState0.getElementHinting());
      
      rendererState0.setElementHinting(true);
      boolean boolean0 = rendererState0.getElementHinting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      RendererState rendererState0 = new RendererState(plotRenderingInfo0);
      rendererState0.getEntityCollection();
      assertFalse(rendererState0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo0).getOwner();
      RendererState rendererState0 = new RendererState(plotRenderingInfo0);
      rendererState0.getEntityCollection();
      assertFalse(rendererState0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RendererState rendererState0 = new RendererState((PlotRenderingInfo) null);
      rendererState0.getEntityCollection();
      assertFalse(rendererState0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      RendererState rendererState0 = new RendererState(plotRenderingInfo0);
      boolean boolean0 = rendererState0.getElementHinting();
      assertFalse(boolean0);
  }
}
