/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:01:40 GMT 2019
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ShortLookupTable;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartHints;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberTick;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.HighLowItemLabelGenerator;
import org.jfree.chart.labels.IntervalXYToolTipGenerator;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.MultipleXYSeriesLabelGenerator;
import org.jfree.chart.labels.StandardXYSeriesLabelGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.SymbolicXYItemLabelGenerator;
import org.jfree.chart.labels.XYSeriesLabelGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarAxisLocation;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.HighLowRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.text.TextUtils;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.TextAnchor;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.StandardXYZURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.BooleanList;
import org.jfree.chart.util.ObjectList;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.Week;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultPolarItemRenderer_ESTest extends DefaultPolarItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Line2D.Double line2D_Double0 = (Line2D.Double)defaultPolarItemRenderer0.getLegendLine();
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(7.0, line2D_Double0.x2, 0.01);
      assertEquals((-7.0), line2D_Double0.x1, 0.01);
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator((XYSeriesLabelGenerator) null);
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      defaultPolarItemRenderer0.setSeriesToolTipGenerator(554, symbolicXYItemLabelGenerator0);
      defaultPolarItemRenderer0.getToolTipGenerator(554, 554);
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(33);
      defaultPolarItemRenderer0.getFillComposite();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(33);
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(554);
      DefaultPolarItemRenderer defaultPolarItemRenderer2 = (DefaultPolarItemRenderer)defaultPolarItemRenderer0.clone();
      defaultPolarItemRenderer1.getPlot();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(10);
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.plot.FastScatterPlot", fixedMillisecond0, fixedMillisecond0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer2.drawRadialGridLines((Graphics2D) null, (PolarPlot) null, periodAxis0, vector0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Polygon polygon0 = new Polygon();
      defaultPolarItemRenderer0.setLegendLine(polygon0);
      defaultPolarItemRenderer0.getFillComposite();
      defaultPolarItemRenderer0.getLegendItemURLGenerator();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      Object[][][] objectArray0 = new Object[0][8][7];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(stack0, objectArray0);
      defaultPolarItemRenderer0.addEntity(standardEntityCollection0, polygon0, defaultWindDataset0, 2, 1, 3656.110814125721, (-1779.0));
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(meterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PolarPlot polarPlot0 = new PolarPlot();
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.drawAngularGridLines(graphics2D0, polarPlot0, stack0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("@+0:D]^", defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      defaultPolarItemRenderer0.getItemOutlineStroke(15, (-4));
      jFreeChart0.setBackgroundPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-1429), 10, 37, (-2627), 145, true, true, true, true, false, false, true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      defaultPolarItemRenderer0.setLegendLine(rectangle2D0);
      defaultPolarItemRenderer0.setSeriesFilled(37, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(37);
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator("PROPERTIES");
      defaultPolarItemRenderer0.setLegendItemURLGenerator(standardXYSeriesLabelGenerator0);
      defaultPolarItemRenderer0.getLegendItemURLGenerator();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("@+0:D]^", defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      defaultPolarItemRenderer0.getItemOutlineStroke(15, (-4));
      jFreeChart0.setBackgroundPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-1429), 10, 37, (-2627), 145, true, true, true, true, false, false, true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      defaultPolarItemRenderer0.setLegendLine(rectangle2D0);
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(883);
      defaultPolarItemRenderer0.setSeriesFilled(37, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(37);
      candlestickRenderer0.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1329, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      ValueAxis valueAxis0 = null;
      PolarPlot polarPlot0 = new PolarPlot(matrixSeriesCollection0, (ValueAxis) null, defaultPolarItemRenderer0);
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.drawRadialGridLines(graphics2D0, polarPlot0, (ValueAxis) null, (List) null, rectangle2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'radialAxis' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.chart.plot.FastScatterPlot");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getLegendLine();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator((XYSeriesLabelGenerator) null);
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      defaultPolarItemRenderer0.setSeriesToolTipGenerator(554, symbolicXYItemLabelGenerator0);
      defaultPolarItemRenderer0.getToolTipGenerator(554, 554);
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(33);
      defaultPolarItemRenderer0.getFillComposite();
      System.setCurrentTimeMillis((-1168L));
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(0);
      defaultPolarItemRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_SHADOW_PAINT;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      defaultXYItemRenderer0.getSeriesLinesVisible((-1));
      Boolean.logicalXor(false, true);
      defaultPolarItemRenderer0.lookupSeriesStroke((-1015));
      defaultPolarItemRenderer0.setDefaultFillPaint((Paint) color0);
      defaultPolarItemRenderer0.setDefaultCreateEntities(true, false);
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(false);
      defaultPolarItemRenderer0.setItemLabelAnchorOffset(4259);
      defaultPolarItemRenderer0.getItemLabelPaint(4259, 368);
      TextUtils.setDrawStringsWithFontAttributes(true);
      defaultPolarItemRenderer0.getLegendItem(4259);
      defaultPolarItemRenderer0.getFillComposite();
      boolean boolean0 = new Boolean(true);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(true);
      defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      defaultPolarItemRenderer0.setLegendLine(line2D_Double0);
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = (DefaultPolarItemRenderer)defaultPolarItemRenderer0.clone();
      defaultPolarItemRenderer0.getUseFillPaint();
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator(multipleXYSeriesLabelGenerator0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      defaultPolarItemRenderer0.equals(sunHints_Key0);
      defaultPolarItemRenderer0.isSeriesFilled((-1015));
      defaultPolarItemRenderer1.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.getLegendItemToolTipGenerator();
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getLegendItem(1883);
      defaultPolarItemRenderer0.getURLGenerator();
      defaultPolarItemRenderer0.setURLGenerator((XYURLGenerator) null);
      defaultPolarItemRenderer0.clone();
      PolarPlot polarPlot0 = new PolarPlot();
      PolarAxisLocation polarAxisLocation0 = PolarAxisLocation.SOUTH_RIGHT;
      polarPlot0.setAxisLocation(3, polarAxisLocation0);
      defaultPolarItemRenderer0.setPlot(polarPlot0);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      defaultPolarItemRenderer0.getToolTipGenerator(0, 0);
      defaultPolarItemRenderer0.getLegendItem(3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator("");
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator(standardXYSeriesLabelGenerator0);
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_SHADOW_PAINT;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      defaultXYItemRenderer0.getSeriesLinesVisible((-1));
      Boolean.logicalXor(false, true);
      defaultPolarItemRenderer0.lookupSeriesStroke((-1015));
      defaultPolarItemRenderer0.setDefaultFillPaint((Paint) color0);
      defaultPolarItemRenderer0.setDefaultCreateEntities(true, false);
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(false);
      defaultPolarItemRenderer0.setItemLabelAnchorOffset((-1));
      defaultPolarItemRenderer0.getItemLabelPaint((-1015), 368);
      TextUtils.setDrawStringsWithFontAttributes(true);
      defaultPolarItemRenderer0.getLegendItem((-1));
      defaultPolarItemRenderer0.getFillComposite();
      defaultPolarItemRenderer0.getDrawOutlineWhenFilled();
      Shape shape0 = defaultPolarItemRenderer0.getLegendLine();
      defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      defaultPolarItemRenderer0.setLegendLine(shape0);
      defaultPolarItemRenderer0.clone();
      defaultPolarItemRenderer0.getUseFillPaint();
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator(multipleXYSeriesLabelGenerator0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      defaultPolarItemRenderer0.equals(sunHints_Key0);
      defaultPolarItemRenderer0.isSeriesFilled((-1015));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      XYPlot xYPlot0 = new XYPlot();
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(883);
      defaultPolarItemRenderer0.setSeriesFilled(37, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(37);
      candlestickRenderer0.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      defaultPolarItemRenderer0.isSeriesFilled(37);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.lookupSeriesFillPaint(1);
      defaultPolarItemRenderer0.isSeriesFilled(0);
      defaultPolarItemRenderer0.getLegendLine();
      defaultPolarItemRenderer0.getURLGenerator();
      BufferedImage bufferedImage0 = new BufferedImage(437, 6, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      defaultPolarItemRenderer0.getPlot();
      Vector<BooleanList> vector0 = new Vector<BooleanList>();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 1011.9281, 45.0, (-2452.23368));
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.drawAngularGridLines(graphics2D0, (PolarPlot) null, vector0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(false);
      PolarPlot polarPlot0 = defaultPolarItemRenderer0.getPlot();
      defaultPolarItemRenderer0.setDefaultShape(polarPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      defaultPolarItemRenderer0.getToolTipGenerator(368, 368);
      defaultPolarItemRenderer0.setBaseToolTipGenerator((XYToolTipGenerator) null);
      defaultPolarItemRenderer0.getURLGenerator();
      defaultPolarItemRenderer0.getFillComposite();
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(false);
      assertFalse(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertFalse(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      
      defaultPolarItemRenderer0.getDrawOutlineWhenFilled();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(844);
      PolarPlot polarPlot0 = new PolarPlot();
      defaultPolarItemRenderer0.setPlot(polarPlot0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)84;
      byteArray0[5] = (byte)71;
      byteArray0[6] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      jFreeChart0.setNotify(false);
      jFreeChart0.getRenderingHints();
      LogAxis logAxis0 = new LogAxis();
      defaultPolarItemRenderer0.getPlot();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      defaultPolarItemRenderer0.setPlot(polarPlot0);
      defaultPolarItemRenderer0.getUseFillPaint();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(12);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 12, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      defaultPolarItemRenderer0.isSeriesFilled(381);
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.clearSeriesStrokes(false);
      defaultPolarItemRenderer1.getItemOutlineStroke((-107), 381);
      Composite composite0 = defaultPolarItemRenderer1.getFillComposite();
      defaultPolarItemRenderer0.setFillComposite(composite0);
      defaultPolarItemRenderer1.getURLGenerator();
      defaultPolarItemRenderer1.setDrawOutlineWhenFilled(false);
      defaultPolarItemRenderer0.setURLGenerator((XYURLGenerator) null);
      IntervalXYToolTipGenerator intervalXYToolTipGenerator0 = new IntervalXYToolTipGenerator();
      defaultPolarItemRenderer1.setBaseToolTipGenerator(intervalXYToolTipGenerator0);
      defaultPolarItemRenderer0.getToolTipGenerator((-107), 381);
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(false);
      defaultPolarItemRenderer1.getLegendItemToolTipGenerator();
      defaultPolarItemRenderer0.setSeriesToolTipGenerator(381, intervalXYToolTipGenerator0);
      defaultPolarItemRenderer1.getFillComposite();
      StandardChartTheme standardChartTheme0 = new StandardChartTheme("");
      defaultPolarItemRenderer0.equals(standardChartTheme0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(4859, 0);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      waferMapDataset0.setChipSpace(2177.259);
      defaultPolarItemRenderer1.getToolTipGenerator((-223), (-223));
      JFreeChart jFreeChart0 = new JFreeChart("{0}: ({1} - {2}), ({5} - {6})", waferMapPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setAutoPopulateSeriesShape(false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getSeriesFillPaint(1024);
      defaultPolarItemRenderer0.setDefaultPaint((Paint) null);
      defaultPolarItemRenderer0.getLegendTextPaint(1189);
      defaultPolarItemRenderer0.lookupSeriesFillPaint(1189);
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(true);
      defaultPolarItemRenderer0.getURLGenerator();
      defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      defaultPolarItemRenderer0.equals((Object) null);
      defaultPolarItemRenderer0.clone();
      PolarPlot polarPlot0 = new PolarPlot();
      DateAxis dateAxis0 = new DateAxis();
      Stack<NumberTick> stack0 = new Stack<NumberTick>();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      ImageIcon imageIcon0 = new ImageIcon("ii5ESTND+");
      jInternalFrame0.setFrameIcon(imageIcon0);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.drawRadialGridLines((Graphics2D) null, polarPlot0, dateAxis0, stack0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(false);
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      Shape shape0 = stackedXYAreaRenderer0.getLegendArea();
      defaultPolarItemRenderer0.setLegendLine(shape0);
      defaultPolarItemRenderer0.clone();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      Shape shape1 = defaultPolarItemRenderer1.lookupLegendShape(3);
      Object object0 = defaultPolarItemRenderer1.clone();
      defaultPolarItemRenderer0.equals(object0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "^MH8p^<a46Inb,O";
      stringArray0[1] = "radialAxis";
      stringArray0[2] = "org.jfree.chart.renderer.DefaultPolarItemRenderer";
      stringArray0[3] = "org.jfree.data.general.SeriesException";
      stringArray0[4] = "KeyedValuesItemKey[";
      stringArray0[5] = "";
      stringArray0[6] = "z";
      stringArray0[7] = "";
      Object[][][] objectArray0 = new Object[2][2][2];
      Object[][] objectArray1 = new Object[3][0];
      objectArray1[0] = (Object[]) stringArray0;
      Object[] objectArray2 = new Object[2];
      objectArray2[0] = (Object) "KeyedValuesItemKey[";
      objectArray2[1] = (Object) "org.jfree.chart.renderer.DefaultPolarItemRenderer";
      objectArray1[1] = objectArray2;
      Object[] objectArray3 = new Object[7];
      objectArray3[0] = (Object) "org.jfree.chart.renderer.DefaultPolarItemRenderer";
      objectArray3[1] = (Object) shape1;
      objectArray3[2] = (Object) "";
      objectArray3[3] = (Object) defaultPolarItemRenderer1;
      objectArray3[4] = (Object) "org.jfree.data.general.SeriesException";
      objectArray3[5] = (Object) "radialAxis";
      Object object1 = defaultPolarItemRenderer1.clone();
      objectArray3[6] = object1;
      objectArray1[2] = objectArray3;
      objectArray0[0] = objectArray1;
      Object[][] objectArray4 = new Object[8][7];
      objectArray4[0] = objectArray2;
      objectArray4[1] = (Object[]) stringArray0;
      objectArray4[2] = objectArray2;
      objectArray4[3] = objectArray3;
      objectArray4[4] = objectArray2;
      objectArray4[5] = objectArray2;
      objectArray4[6] = objectArray3;
      objectArray4[7] = objectArray3;
      objectArray0[1] = objectArray4;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(stringArray0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.clone();
      defaultPolarItemRenderer0.setDefaultShape((Shape) line2D_Double0);
      defaultPolarItemRenderer0.lookupLegendTextPaint((-539));
      defaultPolarItemRenderer0.getSeriesOutlinePaint(0);
      defaultPolarItemRenderer0.setURLGenerator((XYURLGenerator) null);
      defaultPolarItemRenderer0.getShapesVisible();
      defaultPolarItemRenderer0.setSeriesItemLabelPaint(193, (Paint) null, true);
      defaultPolarItemRenderer0.getDrawingSupplier();
      defaultPolarItemRenderer0.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.getLegendItem(365);
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeZone0);
      DateAxis dateAxis0 = new DateAxis();
      PolarPlot polarPlot0 = new PolarPlot(timeSeriesCollection0, dateAxis0, defaultPolarItemRenderer0);
      defaultPolarItemRenderer0.setPlot(polarPlot0);
      defaultPolarItemRenderer0.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      boolean boolean0 = false;
      defaultPolarItemRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setFillComposite((Composite) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'composite' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.getPlot();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      defaultPolarItemRenderer0.setURLGenerator(customXYURLGenerator0);
      defaultPolarItemRenderer0.getShapesVisible();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Object[][][] objectArray0 = new Object[4][9][0];
      Object[][] objectArray1 = new Object[2][7];
      Object[] objectArray2 = new Object[1];
      Object object0 = defaultPolarItemRenderer0.clone();
      objectArray2[0] = object0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[3];
      objectArray3[0] = object0;
      objectArray3[1] = (Object) defaultPolarItemRenderer0;
      objectArray3[2] = (Object) null;
      objectArray1[1] = objectArray3;
      objectArray0[0] = objectArray1;
      Object[][] objectArray4 = new Object[7][1];
      objectArray4[0] = objectArray2;
      objectArray4[1] = objectArray2;
      objectArray4[2] = objectArray2;
      objectArray4[3] = objectArray2;
      objectArray4[4] = objectArray3;
      Object[] objectArray5 = new Object[2];
      objectArray5[0] = object0;
      objectArray5[1] = (Object) customXYURLGenerator0;
      objectArray4[5] = objectArray5;
      objectArray4[6] = objectArray3;
      objectArray0[1] = objectArray4;
      Object[][] objectArray6 = new Object[9][5];
      Object[] objectArray7 = new Object[4];
      objectArray7[0] = (Object) defaultPolarItemRenderer0;
      objectArray7[1] = (Object) customXYURLGenerator0;
      objectArray7[2] = (Object) standardEntityCollection0;
      objectArray7[3] = (Object) defaultPolarItemRenderer0;
      objectArray6[0] = objectArray7;
      objectArray6[1] = objectArray2;
      objectArray6[2] = objectArray5;
      objectArray6[3] = objectArray3;
      objectArray6[4] = objectArray2;
      objectArray6[5] = objectArray2;
      objectArray6[6] = objectArray5;
      objectArray6[7] = objectArray3;
      objectArray6[8] = objectArray5;
      objectArray0[2] = objectArray6;
      Object[][] objectArray8 = new Object[3][0];
      objectArray8[0] = objectArray7;
      objectArray8[1] = objectArray2;
      objectArray8[2] = objectArray5;
      objectArray0[3] = objectArray8;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      defaultPolarItemRenderer0.addEntity(standardEntityCollection0, roundRectangle2D_Double0, histogramDataset0, 2719, 2719, 0.0, 0.0);
      defaultPolarItemRenderer0.getToolTipGenerator(0, 0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getDrawingSupplier();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((double) defaultPolarItemRenderer0.ZERO);
      candlestickRenderer0.getSeriesShape(2227);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.addEntity((EntityCollection) null, (Shape) null, timePeriodValuesCollection0, 1, 128, 1, (-1765.574552519734));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(true);
      defaultPolarItemRenderer0.setDefaultItemLabelsVisible(false, true);
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.getUseFillPaint();
      defaultPolarItemRenderer0.getURLGenerator();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setSeriesToolTipGenerator((-1346), (XYToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setDrawOutlines(true);
      defaultCategoryItemRenderer0.getSeriesShapesVisible(0);
      Boolean.logicalXor(true, true);
      defaultPolarItemRenderer0.setSeriesVisibleInLegend(250, (Boolean) null, false);
      defaultPolarItemRenderer0.setSeriesFilled(250, false);
      defaultPolarItemRenderer0.setURLGenerator((XYURLGenerator) null);
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.getLegendItem(0);
      defaultPolarItemRenderer0.getShapesVisible();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 0, defaultPolarItemRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT, waferMapPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2821, 0, 0, 305, 0, 3986, false, false, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2749, 2749, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1024, 2749, 6.0F, 0, 250, 10);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      PolarPlot polarPlot0 = new PolarPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDataset(0);
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.drawSeries(graphics2D0, rectangle2D0, plotRenderingInfo0, polarPlot0, (XYDataset) null, 1024);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      MockDate mockDate0 = new MockDate();
      Quarter quarter0 = new Quarter(mockDate0);
      CategoryMarker categoryMarker0 = new CategoryMarker(quarter0, defaultPolarItemRenderer0.DEFAULT_OUTLINE_PAINT, defaultPolarItemRenderer0.DEFAULT_OUTLINE_STROKE);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      categoryMarker0.addChangeListener(combinedRangeXYPlot0);
      defaultValueDataset0.removeChangeListener(thermometerPlot0);
      Font font0 = categoryMarker0.getLabelFont();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, (-1), 37, 10, 37);
      quarter0.getMiddleMillisecond((Calendar) mockGregorianCalendar0);
      font0.getBaselineFor('p');
      defaultPolarItemRenderer0.setLegendTextFont(1424, font0);
      defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      defaultPolarItemRenderer0.clone();
      defaultPolarItemRenderer0.getLegendItem(4);
      defaultPolarItemRenderer0.getShapesVisible();
      defaultPolarItemRenderer0.getLegendItemToolTipGenerator();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1, (-879.4574047811), 193.639361276408, 1);
      JFreeChart jFreeChart0 = new JFreeChart("^UIgdHo_kQ(8M:5*6(", valueAxis0.DEFAULT_AXIS_LABEL_FONT, thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      defaultPolarItemRenderer0.getPlot();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.drawSeries((Graphics2D) null, rectangle2D_Double0, plotRenderingInfo0, (PolarPlot) null, defaultTableXYDataset0, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index outside valid range.
         //
         verifyException("org.jfree.data.xy.DefaultTableXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      customXYURLGenerator0.clone();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(customXYURLGenerator0);
      defaultPolarItemRenderer0.notifyListeners(rendererChangeEvent0);
      defaultPolarItemRenderer0.getLegendItemToolTipGenerator();
      defaultPolarItemRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      boolean boolean0 = defaultPolarItemRenderer0.getShapesVisible();
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      
      TextUtils.setDrawStringsWithFontAttributes(false);
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(false);
      defaultPolarItemRenderer0.getLegendItemToolTipGenerator();
      defaultPolarItemRenderer0.getLegendItem(21);
      assertFalse(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      boolean boolean0 = defaultPolarItemRenderer0.isSeriesFilled(0);
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
      Color color0 = ringPlot0.getCenterTextColor();
      ringPlot0.setLegendItemShape(defaultPolarItemRenderer0.DEFAULT_SHAPE);
      defaultPolarItemRenderer0.setSeriesPaint(0, (Paint) color0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      defaultPolarItemRenderer0.setBaseToolTipGenerator(standardXYToolTipGenerator0);
      defaultPolarItemRenderer0.setLegendLine(ringPlot0.DEFAULT_LEGEND_ITEM_BOX);
      boolean boolean0 = true;
      defaultKeyedValuesDataset0.setNotify(true);
      double double0 = 315.0;
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.addEntity((EntityCollection) null, ringPlot0.DEFAULT_LEGEND_ITEM_BOX, (XYDataset) null, 10, 10, 315.0, (-2874.7261167));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE11;
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      defaultPolarItemRenderer0.getSeriesItemLabelPaint(840);
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      itemLabelPosition0.equals((Object) null);
      itemLabelPosition0.equals(defaultPolarItemRenderer0);
      defaultPolarItemRenderer0.setSeriesNegativeItemLabelPosition(840, itemLabelPosition0);
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setLegendLine((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'line' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(true);
      boolean boolean0 = defaultPolarItemRenderer0.getUseFillPaint();
      assertFalse(boolean0);
      
      defaultPolarItemRenderer0.getDrawingSupplier();
      defaultPolarItemRenderer0.setSeriesFilled(0, false);
      defaultPolarItemRenderer0.getLegendItem(24);
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
      defaultPolarItemRenderer0.setDefaultOutlineStroke(stroke0, false);
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      
      defaultPolarItemRenderer0.setShapesVisible(false);
      boolean boolean0 = defaultPolarItemRenderer0.getShapesVisible();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setSeriesOutlinePaint(0, (Paint) null);
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      
      defaultPolarItemRenderer0.setShapesVisible(false);
      assertFalse(defaultPolarItemRenderer0.getShapesVisible());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      Week week0 = new Week();
      week0.getStart();
      PeriodAxis periodAxis0 = new PeriodAxis("Requires start on or before end.", week0, week0);
      PolarPlot polarPlot0 = new PolarPlot(timePeriodValuesCollection0, periodAxis0, defaultPolarItemRenderer0);
      week0.getEnd();
      polarPlot0.setOutlinePaint(defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      defaultPolarItemRenderer0.setPlot(polarPlot0);
      defaultPolarItemRenderer0.setAutoPopulateSeriesShape(false);
      int int0 = (-471);
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.setSeriesFilled((-471), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getDrawingSupplier();
      BufferedImage bufferedImage0 = new BufferedImage(6, 6, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      XYSeries xYSeries0 = new XYSeries(defaultPolarItemRenderer0.ZERO, false, false);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0mU[5E$";
      stringArray0[1] = "0mU[5E$";
      SymbolAxis symbolAxis0 = new SymbolAxis("0mU[5E$", stringArray0);
      PolarPlot polarPlot0 = new PolarPlot(xYSeriesCollection0, symbolAxis0, defaultPolarItemRenderer0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-5422.81173), 2.0F, "org.jfree.chart.axis.NumberTickUnitSource");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.drawRadialGridLines(graphics2D0, polarPlot0, cyclicNumberAxis0, (List) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Shape shape0 = defaultPolarItemRenderer0.lookupLegendShape(134);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      defaultPolarItemRenderer0.addEntity(standardEntityCollection0, shape0, timePeriodValuesCollection0, 1393, 1263, 1263, 1393);
      assertEquals(1, standardEntityCollection0.getEntityCount());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.getDrawingSupplier();
      ChartHints.Key chartHints_Key0 = new ChartHints.Key((-2039));
      ObjectList objectList0 = new ObjectList();
      // Undeclared exception!
      try { 
        chartHints_Key0.isCompatibleValue((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not possible!
         //
         verifyException("org.jfree.chart.ChartHints$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getToolTipGenerator(0, 1392);
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getPlot();
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      defaultPolarItemRenderer0.setSeriesToolTipGenerator(0, standardXYZToolTipGenerator0);
      boolean boolean0 = defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      boolean boolean1 = defaultPolarItemRenderer0.equals(standardXYZToolTipGenerator0);
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertFalse(boolean1 == boolean0);
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      AlphaComposite alphaComposite0 = AlphaComposite.DstOut;
      AlphaComposite alphaComposite1 = alphaComposite0.derive(1);
      defaultPolarItemRenderer0.setFillComposite(alphaComposite1);
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      boolean boolean0 = defaultPolarItemRenderer0.equals(standardXYURLGenerator0);
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertFalse(boolean0);
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.getOpenTickPaint();
      defaultPolarItemRenderer0.setDefaultLegendTextPaint((Paint) null);
      defaultPolarItemRenderer0.getSeriesFillPaint(1686);
      boolean boolean0 = defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      boolean boolean1 = defaultPolarItemRenderer0.getDrawOutlineWhenFilled();
      assertTrue(boolean1 == boolean0);
      
      defaultPolarItemRenderer0.setUseFillPaint(false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYSeriesLabelGenerator xYSeriesLabelGenerator0 = candlestickRenderer0.getLegendItemLabelGenerator();
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator(xYSeriesLabelGenerator0);
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getLegendItemURLGenerator();
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setAutoPopulateSeriesStroke(false);
      boolean boolean0 = defaultPolarItemRenderer0.getShapesVisible();
      assertTrue(boolean0);
      
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getLegendItemToolTipGenerator();
      defaultPolarItemRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      SystemColor systemColor0 = SystemColor.controlDkShadow;
      Color.getColor("y");
      defaultPolarItemRenderer0.setDefaultItemLabelPaint((Paint) systemColor0);
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(false);
      defaultPolarItemRenderer0.clone();
      defaultPolarItemRenderer0.getFillComposite();
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      assertFalse(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getLegendLine();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator((XYSeriesLabelGenerator) null);
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      defaultPolarItemRenderer0.setSeriesToolTipGenerator(554, symbolicXYItemLabelGenerator0);
      defaultPolarItemRenderer0.getToolTipGenerator(554, 554);
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(33);
      defaultPolarItemRenderer0.getFillComposite();
      System.setCurrentTimeMillis((-1168L));
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(0);
      DefaultPolarItemRenderer defaultPolarItemRenderer2 = (DefaultPolarItemRenderer)defaultPolarItemRenderer0.clone();
      defaultPolarItemRenderer1.getPlot();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(10);
      PeriodAxis periodAxis0 = new PeriodAxis((String) null, fixedMillisecond0, fixedMillisecond0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer2.drawRadialGridLines((Graphics2D) null, (PolarPlot) null, periodAxis0, vector0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.clearSeriesStrokes(false);
      defaultPolarItemRenderer0.getSeriesVisible((-900));
      Boolean.logicalOr(true, true);
      Boolean.compare(true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      defaultPolarItemRenderer0.setSeriesVisibleInLegend(2349, (Boolean) null);
      defaultPolarItemRenderer0.setBaseToolTipGenerator((XYToolTipGenerator) null);
      defaultPolarItemRenderer0.isSeriesFilled((-161));
      defaultPolarItemRenderer0.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.getSeriesToolTipGenerator((-161));
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2349, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      Object[] objectArray0 = new Object[0];
      TreePath treePath0 = null;
      try {
        treePath0 = new TreePath(objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null and not empty.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.equals(defaultPolarItemRenderer1);
      defaultPolarItemRenderer0.equals(defaultPolarItemRenderer1);
      defaultPolarItemRenderer0.lookupSeriesShape((-5));
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(false);
      defaultPolarItemRenderer0.getLegendLine();
      defaultPolarItemRenderer0.getURLGenerator();
      short[][] shortArray0 = new short[4][0];
      short[] shortArray1 = new short[5];
      shortArray1[0] = (short)0;
      shortArray1[1] = (short)63;
      shortArray1[2] = (short)0;
      shortArray1[3] = (short)373;
      shortArray1[4] = (short) (-2520);
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[2];
      shortArray2[0] = (short)373;
      shortArray2[1] = (short) (-2520);
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[0];
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[8];
      shortArray4[0] = (short)0;
      shortArray4[1] = (short)0;
      shortArray4[2] = (short)373;
      shortArray4[3] = (short)0;
      shortArray4[4] = (short)2;
      shortArray4[5] = (short) (-2520);
      shortArray4[6] = (short)0;
      shortArray4[7] = (short)0;
      shortArray0[3] = shortArray4;
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-5), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getDrawingSupplier();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((double) defaultPolarItemRenderer0.ZERO);
      defaultPolarItemRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      candlestickRenderer0.getSeriesShape(1);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.addEntity((EntityCollection) null, (Shape) null, timePeriodValuesCollection0, 1, 128, 1, (-1765.574552519734));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.DefaultPolarItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getLegendItem(1883);
      defaultPolarItemRenderer0.getURLGenerator();
      defaultPolarItemRenderer0.setURLGenerator((XYURLGenerator) null);
      Object object0 = defaultPolarItemRenderer0.clone();
      PolarPlot polarPlot0 = new PolarPlot();
      PolarAxisLocation polarAxisLocation0 = PolarAxisLocation.SOUTH_RIGHT;
      polarPlot0.setAxisLocation(3, polarAxisLocation0);
      defaultPolarItemRenderer0.setPlot(polarPlot0);
      defaultPolarItemRenderer0.getBaseToolTipGenerator();
      defaultPolarItemRenderer0.getToolTipGenerator(0, 0);
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.equals((Object)object0));
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertNotSame(defaultPolarItemRenderer0, object0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getURLGenerator();
      defaultPolarItemRenderer0.setURLGenerator((XYURLGenerator) null);
      Object object0 = defaultPolarItemRenderer0.clone();
      PolarPlot polarPlot0 = new PolarPlot();
      PolarAxisLocation polarAxisLocation0 = PolarAxisLocation.SOUTH_RIGHT;
      polarPlot0.setAxisLocation(3, polarAxisLocation0);
      defaultPolarItemRenderer0.setPlot(polarPlot0);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      defaultPolarItemRenderer0.getToolTipGenerator(0, 0);
      defaultPolarItemRenderer0.getLegendItem(3);
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.equals((Object)object0));
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertNotSame(defaultPolarItemRenderer0, object0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("@+0:D]^", defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      defaultPolarItemRenderer0.getItemOutlineStroke(15, (-4));
      jFreeChart0.setBackgroundPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-1429), 10, 37, (-2627), 145, true, true, true, true, false, false, true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      defaultPolarItemRenderer0.setLegendLine(rectangle2D0);
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(883);
      defaultPolarItemRenderer0.setSeriesFilled(37, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(37);
      candlestickRenderer0.getLegendItemURLGenerator();
      defaultPolarItemRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      assertTrue(defaultPolarItemRenderer0.getConnectFirstAndLastPoint());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.clone();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1651, false, standardXYToolTipGenerator0);
      candlestickRenderer0.getSeriesCreateEntities(1651);
      StandardXYToolTipGenerator.getTimeSeriesInstance();
      defaultPolarItemRenderer0.setSeriesItemLabelsVisible(1651, (Boolean) null, false);
      standardEntityCollection0.clone();
      JTable jTable0 = new JTable();
      Rectangle rectangle0 = jTable0.getCellRect(0, 457, false);
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      standardEntityCollection0.equals((Object) null);
      xYIntervalSeriesCollection0.getDomainOrder();
      defaultPolarItemRenderer0.addEntity(standardEntityCollection0, rectangle0, xYIntervalSeriesCollection0, 0, 457, 0, (-774.0));
      defaultPolarItemRenderer0.getSeriesStroke(3431);
      // Undeclared exception!
      try { 
        AlphaComposite.getInstance(1154);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unknown composite rule
         //
         verifyException("java.awt.AlphaComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.clone();
      standardEntityCollection0.clear();
      standardEntityCollection0.clone();
      JTable jTable0 = new JTable();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      defaultPolarItemRenderer0.setSeriesToolTipGenerator(0, standardXYToolTipGenerator0);
      Rectangle rectangle0 = jTable0.getCellRect(0, 457, false);
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      standardEntityCollection0.equals((Object) null);
      xYIntervalSeriesCollection0.getDomainOrder();
      // Undeclared exception!
      try { 
        defaultPolarItemRenderer0.addEntity(standardEntityCollection0, rectangle0, xYIntervalSeriesCollection0, 0, 457, 0, (-774.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.XYIntervalSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "";
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList1 = new ArrayList<Locale>();
      Locale.lookup(arrayList0, arrayList1);
      // Undeclared exception!
      try { 
        NumberFormat.getPercentInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      defaultPolarItemRenderer0.getItemFillPaint(0, 3535);
      defaultPolarItemRenderer0.setLegendShape(0, roundRectangle2D_Float0);
      boolean boolean0 = defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      assertTrue(boolean0);
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      assertFalse(defaultPolarItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setConnectFirstAndLastPoint(false);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      AffineTransform affineTransform0 = new AffineTransform((-1.0F), 0.0F, 0.0F, 0.0F, (-1.0F), 0.0F);
      roundRectangle2D_Float0.getPathIterator(affineTransform0, (double) 0);
      defaultPolarItemRenderer0.getItemFillPaint(0, 3535);
      defaultPolarItemRenderer0.setUseFillPaint(true);
      defaultPolarItemRenderer0.setLegendShape(0, roundRectangle2D_Float0);
      boolean boolean0 = defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      assertTrue(defaultPolarItemRenderer0.getUseFillPaint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = (-661);
      defaultPolarItemRenderer0.getToolTipGenerator((-661), 0);
      defaultPolarItemRenderer0.getLegendItemToolTipGenerator();
      defaultPolarItemRenderer0.setShapesVisible(true);
      defaultPolarItemRenderer0.isSeriesFilled((-661));
      AlphaComposite alphaComposite0 = AlphaComposite.Dst;
      int int1 = (-594);
      // Undeclared exception!
      try { 
        alphaComposite0.derive((-594));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unknown composite rule
         //
         verifyException("java.awt.AlphaComposite", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Polygon polygon0 = new Polygon();
      defaultPolarItemRenderer0.setLegendLine(polygon0);
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(false);
      defaultPolarItemRenderer0.getFillComposite();
      defaultPolarItemRenderer0.getLegendItemURLGenerator();
      assertFalse(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_SHADOW_PAINT;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      defaultXYItemRenderer0.getSeriesLinesVisible((-1));
      Boolean.logicalXor(false, true);
      defaultPolarItemRenderer0.lookupSeriesStroke((-1015));
      defaultPolarItemRenderer0.setDefaultFillPaint((Paint) color0);
      defaultPolarItemRenderer0.setDefaultCreateEntities(true, false);
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(false);
      defaultPolarItemRenderer0.setItemLabelAnchorOffset(4259);
      defaultPolarItemRenderer0.getItemLabelPaint(4259, 368);
      TextUtils.setDrawStringsWithFontAttributes(true);
      defaultPolarItemRenderer0.getLegendItem(4259);
      defaultPolarItemRenderer0.getFillComposite();
      defaultPolarItemRenderer0.getDrawOutlineWhenFilled();
      Shape shape0 = defaultPolarItemRenderer0.getLegendLine();
      defaultPolarItemRenderer0.setDrawOutlineWhenFilled(true);
      defaultPolarItemRenderer0.getConnectFirstAndLastPoint();
      defaultPolarItemRenderer0.setLegendLine(shape0);
      defaultPolarItemRenderer0.clone();
      defaultPolarItemRenderer0.getUseFillPaint();
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      defaultPolarItemRenderer0.setLegendItemToolTipGenerator(multipleXYSeriesLabelGenerator0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      defaultPolarItemRenderer0.equals(sunHints_Key0);
      boolean boolean0 = defaultPolarItemRenderer0.isSeriesFilled((-1015));
      assertTrue(defaultPolarItemRenderer0.getDrawOutlineWhenFilled());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      Stroke stroke0 = piePlot3D0.getLabelLinkStroke();
      defaultPolarItemRenderer0.setDefaultStroke(stroke0, false);
      Shape shape0 = defaultPolarItemRenderer0.getItemShape((-1826), (-1826));
      assertTrue(defaultPolarItemRenderer0.getShapesVisible());
      
      defaultPolarItemRenderer0.setShapesVisible(false);
      defaultPolarItemRenderer0.equals(shape0);
      defaultPolarItemRenderer0.getLegendItem(2831);
      defaultPolarItemRenderer0.getShapesVisible();
      defaultPolarItemRenderer0.getURLGenerator();
      defaultPolarItemRenderer0.getSeriesToolTipGenerator(2831);
      boolean boolean0 = defaultPolarItemRenderer0.isSeriesFilled(10);
      assertFalse(defaultPolarItemRenderer0.getShapesVisible());
      assertFalse(boolean0);
  }
}
