/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:50:39 GMT 2019
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.IntervalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class IntervalBarRenderer_ESTest extends IntervalBarRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset0).getColumnCount();
      doReturn(0).when(categoryDataset0).getRowCount();
      Range range0 = intervalBarRenderer0.findRangeBounds(categoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      Comparable<DefaultIntervalCategoryDataset> comparable0 = (Comparable<DefaultIntervalCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn(comparable0).when(categoryDataset0).getRowKey(anyInt());
      doReturn(1).when(categoryDataset0).getColumnCount();
      doReturn(1).when(categoryDataset0).getRowCount();
      doReturn(intervalBarRenderer0.ZERO).when(categoryDataset0).getValue(anyInt() , anyInt());
      Range range0 = intervalBarRenderer0.findRangeBounds(categoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-2029), 1, (-728), (-2029), (-2029)).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn(3.0, intervalBarRenderer0.ZERO, intervalBarRenderer0.ZERO, intervalBarRenderer0.ZERO, 3.0).when(categoryDataset0).getRowKey(anyInt());
      doReturn(1).when(categoryDataset0).getColumnCount();
      doReturn(59).when(categoryDataset0).getRowCount();
      doReturn(0.2, 3.0, 0.2, intervalBarRenderer0.ZERO, 3.0).when(categoryDataset0).getValue(anyInt() , anyInt());
      Range range0 = intervalBarRenderer0.findRangeBounds(categoryDataset0);
      assertEquals(3.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = intervalBarRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        intervalBarRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D0, (CategoryPlot) null, (CategoryAxis) null, (ValueAxis) null, (CategoryDataset) null, 10, 1620, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        intervalBarRenderer0.drawInterval(graphics2D0, (CategoryItemRendererState) null, rectangle2D0, (CategoryPlot) null, (CategoryAxis) null, (ValueAxis) null, (IntervalCategoryDataset) null, 16, 1877);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.IntervalBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      IntervalBarRenderer intervalBarRenderer1 = new IntervalBarRenderer();
      boolean boolean0 = intervalBarRenderer0.equals(intervalBarRenderer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      boolean boolean0 = intervalBarRenderer0.equals(intervalBarRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      Stroke stroke0 = intervalBarRenderer0.lookupSeriesStroke(10);
      boolean boolean0 = intervalBarRenderer0.equals(stroke0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = intervalBarRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      intervalBarRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D0, (CategoryPlot) null, (CategoryAxis) null, (ValueAxis) null, categoryDataset0, 10, 10, 1620);
      assertEquals(0.0, intervalBarRenderer0.getUpperClip(), 0.01);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(categoryDataset0).getRowKey(anyInt());
      doReturn(1515).when(categoryDataset0).getColumnCount();
      doReturn(1839).when(categoryDataset0).getRowCount();
      doReturn((Number) null, (Number) null, (Number) null, (Number) null, (Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      // Undeclared exception!
      intervalBarRenderer0.findRangeBounds(categoryDataset0);
  }
}
