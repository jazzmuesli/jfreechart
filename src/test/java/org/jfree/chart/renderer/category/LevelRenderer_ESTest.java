/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:33:24 GMT 2019
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.ui.Layer;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.data.category.CategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class LevelRenderer_ESTest extends LevelRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-1351), 10).when(categoryDataset0).getColumnCount();
      doReturn(1944).when(categoryDataset0).getRowCount();
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.2).when(categoryAxis0).getCategoryMargin();
      doReturn(0.2).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-3.0), 1.0).when(categoryAxis0).getCategorySeriesMiddle(any(java.lang.Comparable.class) , any(java.lang.Comparable.class) , any(org.jfree.data.category.CategoryDataset.class) , anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(2931.720150790834).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-1.0)).when(categoryAxis0).getLowerMargin();
      doReturn((double)(-1351)).when(categoryAxis0).getUpperMargin();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 1);
      CategoryPlot categoryPlot1 = new CategoryPlot(categoryDataset0, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot1, 500);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2.0).when(rectangle2D0).getWidth();
      combinedDomainCategoryPlot0.getIndexOf(levelRenderer0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot2 = levelRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot2, 10, plotRenderingInfo0);
      levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis1, categoryItemRendererState0, 1, 10);
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(plotOrientation0, 0.0F, categoryDataset1, categoryAxis1, rectangle2D1, rectangleEdge0);
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(true, true, categoryDataset2, categoryAxis1, rectangle2D2, rectangleEdge1);
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D3).getWidth();
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState1 = levelRenderer0.initialise((Graphics2D) null, rectangle2D3, categoryPlot2, 0, plotRenderingInfo1);
      levelRenderer0.calculateItemWidth(categoryPlot2, rectangle2D3, 10, categoryItemRendererState1);
      Rectangle2D rectangle2D4 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.calculateItemWidth(categoryPlot2, rectangle2D4, 2601, categoryItemRendererState0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-1351), 10).when(categoryDataset0).getColumnCount();
      doReturn(1944).when(categoryDataset0).getRowCount();
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(categoryAxis0).getCategoryMargin();
      doReturn(0.2).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-3.0), 1.0).when(categoryAxis0).getCategorySeriesMiddle(any(java.lang.Comparable.class) , any(java.lang.Comparable.class) , any(org.jfree.data.category.CategoryDataset.class) , anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(2931.720150790834).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-1.0)).when(categoryAxis0).getLowerMargin();
      doReturn((double)(-1351)).when(categoryAxis0).getUpperMargin();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 1);
      CategoryPlot categoryPlot1 = new CategoryPlot(categoryDataset0, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot1, 500);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2.0).when(rectangle2D0).getWidth();
      combinedDomainCategoryPlot0.getIndexOf(levelRenderer0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot2 = levelRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot2, 512, plotRenderingInfo0);
      levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis1, categoryItemRendererState0, 1, 10);
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(plotOrientation0, 0.0F, categoryDataset1, categoryAxis1, rectangle2D1, rectangleEdge0);
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(true, true, categoryDataset2, categoryAxis1, rectangle2D2, rectangleEdge1);
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D3).getWidth();
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState1 = levelRenderer0.initialise((Graphics2D) null, rectangle2D3, categoryPlot2, 0, plotRenderingInfo1);
      levelRenderer0.calculateItemWidth(categoryPlot2, rectangle2D3, 10, categoryItemRendererState1);
      Rectangle2D rectangle2D4 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.calculateItemWidth(categoryPlot2, rectangle2D4, 2601, categoryItemRendererState0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(704).when(categoryDataset0).getColumnCount();
      doReturn((-1333)).when(categoryDataset0).getRowCount();
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.2).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-3.0), 1.0).when(categoryAxis0).getCategorySeriesMiddle(any(java.lang.Comparable.class) , any(java.lang.Comparable.class) , any(org.jfree.data.category.CategoryDataset.class) , anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(2931.720150790834).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 1);
      CategoryPlot categoryPlot1 = new CategoryPlot(categoryDataset0, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot1, 500);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2.0).when(rectangle2D0).getWidth();
      combinedDomainCategoryPlot0.getIndexOf(levelRenderer0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot2 = levelRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot2, 512, plotRenderingInfo0);
      levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis1, categoryItemRendererState0, 1, 10);
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(plotOrientation0, 0.0F, categoryDataset1, categoryAxis1, rectangle2D1, rectangleEdge0);
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(true, true, categoryDataset2, categoryAxis1, rectangle2D2, rectangleEdge1);
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D3, categoryPlot2, 0, plotRenderingInfo1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-2832), (-2832)).when(categoryDataset0).getColumnCount();
      doReturn(500).when(categoryDataset0).getRowCount();
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.2).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-3.0), 1.0).when(categoryAxis0).getCategorySeriesMiddle(any(java.lang.Comparable.class) , any(java.lang.Comparable.class) , any(org.jfree.data.category.CategoryDataset.class) , anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(2931.720150790834).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(1.0).when(categoryAxis0).getLowerMargin();
      doReturn(1.0).when(categoryAxis0).getUpperMargin();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 1);
      CategoryPlot categoryPlot1 = new CategoryPlot(categoryDataset0, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot1, 500);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2.0).when(rectangle2D0).getWidth();
      combinedDomainCategoryPlot0.getIndexOf(levelRenderer0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot2 = levelRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot2, 512, plotRenderingInfo0);
      levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis1, categoryItemRendererState0, 1, 10);
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(plotOrientation0, 0.0F, categoryDataset1, categoryAxis1, rectangle2D1, rectangleEdge0);
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(true, true, categoryDataset2, categoryAxis1, rectangle2D2, rectangleEdge1);
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)2.0F).when(rectangle2D3).getWidth();
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState1 = levelRenderer0.initialise((Graphics2D) null, rectangle2D3, categoryPlot2, 0, plotRenderingInfo1);
      levelRenderer0.calculateItemWidth(categoryPlot2, rectangle2D3, 10, categoryItemRendererState1);
      Rectangle2D rectangle2D4 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Integer integer0 = (Integer)Plot.ZERO;
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-3491), 33, 33, (-3491), 1917).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn(0.2, levelRenderer0.ZERO, levelRenderer0.ZERO, levelRenderer0.ZERO, 0.2).when(categoryDataset0).getRowKey(anyInt());
      doReturn(1).when(categoryDataset0).getColumnCount();
      doReturn(35).when(categoryDataset0).getRowCount();
      doReturn(0.2, levelRenderer0.ZERO, levelRenderer0.ZERO, 0.2, integer0).when(categoryDataset0).getValue(anyInt() , anyInt());
      levelRenderer0.findRangeBounds(categoryDataset0);
      levelRenderer0.setMaximumItemWidth(2.0);
      levelRenderer0.lookupSeriesPaint((-126));
      levelRenderer0.getItemMargin();
      levelRenderer0.setItemMargin(0.2);
      levelRenderer0.clearSeriesStrokes(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.equals(levelRenderer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(categoryDataset0).getRowKey(anyInt());
      doReturn(0).when(categoryDataset0).getColumnCount();
      doReturn(193).when(categoryDataset0).getRowCount();
      levelRenderer0.findRangeBounds(categoryDataset0);
      levelRenderer0.setMaximumItemWidth(2.0);
      levelRenderer0.lookupSeriesPaint((-126));
      levelRenderer0.getItemMargin();
      levelRenderer0.setItemMargin(0.2);
      levelRenderer0.clearSeriesStrokes(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getWidth();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset1, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot0, (-126));
      Integer integer0 = (Integer)Plot.ZERO;
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(categoryDataset2).getValue(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis1, (ValueAxis) null, categoryDataset2, 500, 0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.2, 0.0).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(1.0, (-670.0)).when(categoryAxis0).getCategorySeriesMiddle(any(java.lang.Comparable.class) , any(java.lang.Comparable.class) , any(org.jfree.data.category.CategoryDataset.class) , anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0, 0.0).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      Font font0 = levelRenderer0.getItemLabelFont(16, 0);
      levelRenderer0.setLegendTextFont(16, font0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Composite) null).when(graphics2D0).getComposite();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      combinedDomainCategoryPlot0.drawBackground(graphics2D0, rectangle2D0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (-1145));
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      levelRenderer0.getItemMiddle(comparable0, comparable0, categoryDataset0, categoryAxis1, rectangle2D1, rectangleEdge0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D1, rectangle2D2, combinedDomainCategoryPlot0, (-1145), plotRenderingInfo0);
      levelRenderer0.equals(rectangleEdge0);
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.getItemMiddle(false, 0.2, categoryDataset1, categoryAxis1, rectangle2D3, rectangleEdge0);
      levelRenderer0.getItemMargin();
      levelRenderer0.setDefaultLegendShape(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      levelRenderer0.hashCode();
      levelRenderer0.setItemMargin(2.0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D rectangle2D4 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(levelRenderer0.ZERO).when(rectangle2D4).getHeight();
      levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D4, categoryAxis1, categoryItemRendererState0, 0, 0);
      Rectangle2D rectangle2D5 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D5).getHeight();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      CategoryAxis categoryAxis2 = levelRenderer1.getDomainAxis(combinedDomainCategoryPlot0, 21);
      levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D5, categoryAxis2, categoryItemRendererState0, 0, 250);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getWidth();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer1.getDomainAxis(categoryPlot0, 10);
      levelRenderer0.getRangeAxis(categoryPlot0, (-1));
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.05).when(categoryDataset0).getValue(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, categoryPlot0, (CategoryAxis) null, (ValueAxis) null, categoryDataset0, 0, (-1), 1866);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0).when(rectangle2D0).getX();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 25);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer1.getRangeAxis(combinedDomainCategoryPlot0, (-859));
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(1.0F).when(categoryDataset0).getValue(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, categoryDataset0, 122, 122, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: 122
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setSeriesItemLabelGenerator(1993, (CategoryItemLabelGenerator) null, false);
      levelRenderer0.setMaximumItemWidth((-905.4810390792));
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn((-905.4810390792)).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-905.4810390792)).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 10);
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis1, (ValueAxis) null, levelRenderer0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-45.0)).when(rectangle2D0).getWidth();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot0, 10, plotRenderingInfo0);
      levelRenderer0.calculateBarW0(categoryPlot0, plotOrientation0, rectangle2D0, categoryAxis1, categoryItemRendererState0, 10, 0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.calculateItemWidth(combinedDomainCategoryPlot0, rectangle2D1, 0, categoryItemRendererState0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(26).when(categoryDataset0).getColumnIndex(any(java.lang.Comparable.class));
      doReturn(26).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn(26).when(categoryDataset0).getColumnCount();
      doReturn(10).when(categoryDataset0).getRowCount();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 4089);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(276.2, 2221.54, (double)0.0F, (double)1.0F, (double)0.0F).when(rectangle2D0).getWidth();
      doReturn((double)26, (double)1.0F).when(rectangle2D0).getX();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      levelRenderer0.getItemMiddle(comparable0, comparable0, categoryDataset0, categoryAxis0, rectangle2D0, rectangleEdge0);
      levelRenderer0.getMaximumItemWidth();
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(10).when(categoryDataset1).getColumnIndex(any(java.lang.Comparable.class));
      doReturn(4089).when(categoryDataset1).getRowIndex(any(java.lang.Comparable.class));
      doReturn(704).when(categoryDataset1).getColumnCount();
      doReturn((-1)).when(categoryDataset1).getRowCount();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(1.0, (-2862.533125639713), (-600.64), (double)0.0F, (-1084.217511)).when(rectangle2D1).getHeight();
      doReturn(levelRenderer0.ZERO, (-797.071712338)).when(rectangle2D1).getMinY();
      RectangleEdge rectangleEdge1 = RectangleEdge.LEFT;
      levelRenderer0.getItemMiddle(2.0F, 0.2, categoryDataset1, categoryAxis0, rectangle2D1, rectangleEdge1);
      levelRenderer0.getMaximumItemWidth();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      levelRenderer0.setDefaultEntityRadius(10);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setDomainAxisLocation(0, axisLocation0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer1.getLegendItemURLGenerator();
      levelRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (-6024));
      levelRenderer0.calculateSeriesWidth(0.0, categoryAxis0, 10, 0);
      levelRenderer0.setItemMargin((-324.7));
      levelRenderer0.getItemMargin();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0).when(rectangle2D0).getX();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, 0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis0, categoryItemRendererState0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: 0
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItem(1142, (-353));
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.setDefaultLegendTextFont(levelRenderer1.DEFAULT_VALUE_LABEL_FONT);
      levelRenderer0.equals(levelRenderer1);
      Object object0 = levelRenderer1.clone();
      levelRenderer1.equals(object0);
      levelRenderer1.getMaximumItemWidth();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(categoryDataset0).getColumnCount();
      doReturn(0).when(categoryDataset0).getRowCount();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer1.getRangeAxis(categoryPlot0, (-353));
      CategoryPlot categoryPlot1 = new CategoryPlot(categoryDataset0, (CategoryAxis) null, (ValueAxis) null, levelRenderer1);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getWidth();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot2 = levelRenderer1.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        levelRenderer1.initialise(graphics2D0, rectangle2D0, categoryPlot2, 0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      LevelRenderer levelRenderer2 = new LevelRenderer();
      int int0 = (-1790);
      levelRenderer2.getLegendItem((-1790), (-1790));
      levelRenderer2.getLegendItemURLGenerator();
      levelRenderer1.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      levelRenderer1.setItemMargin((-314.5075567));
      levelRenderer0.equals(levelRenderer1);
      levelRenderer0.setItemMargin((-314.5075567));
      levelRenderer0.getPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer2.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateItemWidth((CategoryPlot) null, rectangle2D0, (-1790), categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 225);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      levelRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      combinedDomainCategoryPlot1.getDataRange((ValueAxis) null);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, 10, plotRenderingInfo0);
      levelRenderer0.calculateItemWidth(combinedDomainCategoryPlot1, rectangle2D0, 10, categoryItemRendererState0);
      levelRenderer0.setLegendShape(4255, combinedDomainCategoryPlot1.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainCategoryPlot0.clearRangeMarkers(10);
      levelRenderer0.getItemMargin();
      Object object0 = levelRenderer0.clone();
      // Undeclared exception!
      levelRenderer0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setMaximumItemWidth(0.0);
      levelRenderer0.getMaximumItemWidth();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (-167), plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setAutoPopulateSeriesShape(false);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      levelRenderer0.getDefaultLegendTextFont();
      levelRenderer0.setLegendTextFont(0, (Font) null);
      levelRenderer0.setItemMargin((-1729.4));
      levelRenderer0.hashCode();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = null;
      int int0 = 35;
      levelRenderer0.getRangeAxis(categoryPlot0, 35);
      // Undeclared exception!
      try { 
        levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, categoryPlot0, (CategoryAxis) null, (ValueAxis) null, (CategoryDataset) null, 0, (-487), 35);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 1);
      levelRenderer0.calculateSeriesWidth(0.0, categoryAxis0, 1, 10);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LevelRenderer levelRenderer1 = new LevelRenderer();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer1.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot1, 1, (PlotRenderingInfo) null);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot1, 1);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D1, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, categoryDataset0, 1, (-255), 0);
      levelRenderer1.calculateSeriesWidth(2.0, categoryAxis0, 704, 0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer1.drawItem((Graphics2D) null, categoryItemRendererState0, (Rectangle2D) null, categoryPlot0, categoryAxis0, (ValueAxis) null, (CategoryDataset) null, (-1553), 1492, (-3785));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(categoryAxis0).getCategoryMargin();
      doReturn(0.0).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getLowerMargin();
      doReturn(0.0).when(categoryAxis0).getUpperMargin();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 0);
      CategoryPlot categoryPlot1 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot1, 10);
      levelRenderer0.calculateSeriesWidth((-1.0), categoryAxis1, 10, 146);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState((PlotRenderingInfo) null);
      levelRenderer0.calculateBarW0(categoryPlot1, plotOrientation0, rectangle2D0, categoryAxis1, categoryItemRendererState0, 10, 10);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 375);
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 3393);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, (ValueAxis) null, levelRenderer1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0).when(rectangle2D0).getX();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(categoryPlot0, plotOrientation0, rectangle2D0, categoryAxis0, categoryItemRendererState0, (-3269), 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: 10
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendShape(999);
      levelRenderer0.setItemMargin(0.0);
      levelRenderer0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Object object0 = levelRenderer0.clone();
      levelRenderer0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getDomainAxis(categoryPlot0, (-681));
      levelRenderer0.getRangeAxis(categoryPlot0, 10);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, categoryPlot0, (CategoryAxis) null, (ValueAxis) null, categoryDataset0, 0, (-681), 1834);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getDomainAxis(categoryPlot0, 10);
      ValueAxis valueAxis0 = levelRenderer0.getRangeAxis(categoryPlot0, (-558));
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      categoryPlot0.setInsets(valueAxis0.DEFAULT_TICK_LABEL_INSETS, true);
      int int0 = 127;
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, categoryPlot0, (CategoryAxis) null, (ValueAxis) null, categoryDataset0, 127, 127, 127);
      levelRenderer0.getMaximumItemWidth();
      // Undeclared exception!
      try { 
        levelRenderer0.calculateSeriesWidth(0.0F, (CategoryAxis) null, 12, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(categoryPlot0, plotOrientation0, rectangle2D0, (CategoryAxis) null, categoryItemRendererState0, 2692, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getDomainAxis(categoryPlot0, 10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      combinedDomainCategoryPlot0.removeDomainMarker(marker0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, 559, plotRenderingInfo0);
      levelRenderer0.setItemMargin(0.12);
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.getRangeMarkers(layer0);
      levelRenderer0.hashCode();
      levelRenderer0.hashCode();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.equals(levelRenderer1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getWidth();
      // Undeclared exception!
      try { 
        levelRenderer1.calculateBarW0(categoryPlot0, plotOrientation0, rectangle2D1, (CategoryAxis) null, categoryItemRendererState0, 1, 559);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getItemMargin();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 10);
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, (ValueAxis) null, levelRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot0, 472, plotRenderingInfo0);
      levelRenderer0.calculateItemWidth(combinedDomainCategoryPlot0, rectangle2D0, (-1215), categoryItemRendererState0);
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      categoryPlot0.clearRangeMarkers();
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset1).getColumnIndex(any(java.lang.Comparable.class));
      doReturn(0).when(categoryDataset1).getRowIndex(any(java.lang.Comparable.class));
      doReturn(0).when(categoryDataset1).getColumnCount();
      doReturn(0).when(categoryDataset1).getRowCount();
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 10);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getWidth();
      doReturn(0.0, 0.0).when(rectangle2D1).getX();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      levelRenderer0.getItemMiddle(comparable0, 1.0F, categoryDataset1, categoryAxis1, rectangle2D1, rectangleEdge0);
      levelRenderer0.getItemMargin();
      levelRenderer0.setMaximumItemWidth(0.0F);
      levelRenderer0.setItemMargin(0.0F);
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset2).getColumnIndex(any(java.lang.Comparable.class));
      doReturn(0).when(categoryDataset2).getRowIndex(any(java.lang.Comparable.class));
      doReturn(0).when(categoryDataset2).getColumnCount();
      doReturn(0).when(categoryDataset2).getRowCount();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(rectangle2D2).getWidth();
      doReturn(0.0, 0.0).when(rectangle2D2).getX();
      RectangleEdge rectangleEdge1 = RectangleEdge.BOTTOM;
      levelRenderer0.getItemMiddle(true, false, categoryDataset2, categoryAxis1, rectangle2D2, rectangleEdge1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, 10, plotRenderingInfo0);
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 1);
      levelRenderer0.calculateSeriesWidth(1232.61144, categoryAxis0, 1, 1213);
      levelRenderer0.getMaximumItemWidth();
      levelRenderer0.getItemMargin();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      levelRenderer0.initialise(graphics2D1, rectangle2D1, combinedDomainCategoryPlot0, 1, plotRenderingInfo1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 10);
      levelRenderer0.calculateSeriesWidth((-1373.311524), categoryAxis0, 10, 10);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getItemMargin();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = null;
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D1, rectangle2D0, combinedDomainCategoryPlot0, 0, (PlotRenderingInfo) null);
      Rectangle2D rectangle2D1 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 1283);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      int int0 = 270;
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, (Rectangle2D) null, combinedDomainCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, categoryDataset0, 65535, 270, 0);
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        levelRenderer0.getItemMiddle(true, true, categoryDataset1, (CategoryAxis) null, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getSeriesItemURLGenerator(0);
      levelRenderer0.setSeriesItemURLGenerator(0, (CategoryURLGenerator) null, false);
      levelRenderer0.getLegendItem(0, 0);
      levelRenderer0.setItemMargin(0.0);
      levelRenderer0.setItemMargin(0);
      levelRenderer0.getItemMargin();
      levelRenderer0.getMaximumItemWidth();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin((-44.3249064));
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.getDefaultToolTipGenerator();
      levelRenderer1.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null);
      levelRenderer0.setItemMargin(1660.01865);
      levelRenderer0.equals(levelRenderer1);
      levelRenderer0.getItemMargin();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesShape(1134);
      levelRenderer0.getSeriesItemLabelGenerator(1134);
      levelRenderer0.setSeriesItemLabelGenerator(1134, (CategoryItemLabelGenerator) null, true);
      levelRenderer0.hashCode();
      levelRenderer0.setItemMargin(1134);
      levelRenderer0.setMaximumItemWidth(1134);
      levelRenderer0.setItemMargin(2405.925);
      levelRenderer0.getPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      LevelRenderer levelRenderer1 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer1.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, 1134, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateItemWidth((CategoryPlot) null, rectangle2D0, 2, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(0.0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.hashCode();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      CategoryCrosshairState categoryCrosshairState0 = mock(CategoryCrosshairState.class, new ViolatedAssumptionAnswer());
      double double0 = 3265.5;
      int int0 = 0;
      double double1 = (-870.7390281537051);
      Graphics2D graphics2D0 = null;
      LevelRenderer levelRenderer2 = new LevelRenderer();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer2.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        levelRenderer2.initialise((Graphics2D) null, rectangle2D0, (CategoryPlot) null, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getItemMargin();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LevelRenderer levelRenderer1 = new LevelRenderer();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer1.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, 3147, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = levelRenderer1.getDomainAxis(combinedDomainCategoryPlot0, 0);
      levelRenderer1.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D1, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, categoryDataset0, 3147, 0, 10);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      levelRenderer1.drawItem(graphics2D1, categoryItemRendererState0, rectangle2D2, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, categoryDataset1, 10, 0, (-2014));
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, (Rectangle2D) null, categoryAxis0, categoryItemRendererState0, (-1734), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0).when(rectangle2D0).getX();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (-2221), plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis0, categoryItemRendererState0, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: 10
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, 10, plotRenderingInfo0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 0);
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      levelRenderer0.drawItem(graphics2D1, categoryItemRendererState0, rectangle2D1, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, (CategoryDataset) null, 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getDomainAxis(categoryPlot0, 10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      levelRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D0, combinedDomainCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, categoryDataset0, 1, 10, 10);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 10);
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        levelRenderer0.drawItem(graphics2D0, (CategoryItemRendererState) null, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, categoryDataset0, 500, 500, 500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 2402);
      CategoryPlot categoryPlot1 = new CategoryPlot(categoryDataset0, (CategoryAxis) null, (ValueAxis) null, levelRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot1, (-1192), plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.getDomainAxis(categoryPlot1, (-464));
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D1, categoryPlot1, (CategoryAxis) null, (ValueAxis) null, (CategoryDataset) null, (-350), (-1192), 0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      levelRenderer0.initialise(graphics2D1, rectangle2D2, categoryPlot0, 10, plotRenderingInfo1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin((-169.52544147));
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.equals(levelRenderer1);
      LevelRenderer levelRenderer2 = new LevelRenderer();
      levelRenderer2.getLegendTextPaint((-2511));
      levelRenderer2.getSeriesItemLabelGenerator((-2511));
      levelRenderer1.setDefaultItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      categoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      levelRenderer1.hashCode();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      categoryPlot0.getRendererForDataset(categoryDataset0);
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      categoryPlot0.removeRangeMarker(marker0);
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot0, (-1), (PlotRenderingInfo) null);
      levelRenderer1.lookupSeriesShape((-1));
      levelRenderer1.equals("]RPhsL;TbLs%{/N~Kl\"");
      Object object0 = levelRenderer1.clone();
      levelRenderer2.equals(object0);
      Object object1 = levelRenderer1.clone();
      levelRenderer2.equals(object1);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.calculateItemWidth(categoryPlot0, rectangle2D1, (-2511), categoryItemRendererState0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D2).getHeight();
      levelRenderer0.getDomainAxis(categoryPlot0, (-623));
      // Undeclared exception!
      try { 
        levelRenderer1.calculateBarW0(categoryPlot0, plotOrientation0, rectangle2D2, (CategoryAxis) null, categoryItemRendererState0, (-623), 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 2192);
      ValueAxis valueAxis0 = levelRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 3378);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, categoryDataset0, 3378, 500, 3378);
      combinedDomainCategoryPlot0.clearDomainMarkers(0);
      Object object0 = levelRenderer0.clone();
      levelRenderer0.equals(object0);
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      combinedDomainCategoryPlot0.getRendererForDataset(categoryDataset1);
      levelRenderer0.calculateItemWidth(combinedDomainCategoryPlot0, (Rectangle2D) null, 1, categoryItemRendererState0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      levelRenderer0.initialise(graphics2D1, (Rectangle2D) null, combinedDomainCategoryPlot0, 27, plotRenderingInfo1);
      CategoryPlot categoryPlot0 = levelRenderer0.getPlot();
      categoryPlot0.setRangeGridlinePaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      levelRenderer0.calculateItemWidth(categoryPlot0, (Rectangle2D) null, 27, categoryItemRendererState0);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo2 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      levelRenderer0.initialise(graphics2D2, (Rectangle2D) null, combinedDomainCategoryPlot0, 10, plotRenderingInfo2);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Color color0 = (Color)AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
      levelRenderer0.setLegendTextPaint(1, color0);
      levelRenderer0.setMaximumItemWidth((-2523.816386));
      levelRenderer0.getMaximumItemWidth();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getCategorySeriesMiddle(any(java.lang.Comparable.class) , any(java.lang.Comparable.class) , any(org.jfree.data.category.CategoryDataset.class) , anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getLowerMargin();
      doReturn(0.0).when(categoryAxis0).getUpperMargin();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 1);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      combinedDomainCategoryPlot0.setGap((-2589.74));
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      levelRenderer0.getItemMiddle(comparable0, comparable0, categoryDataset0, categoryAxis1, rectangle2D0, rectangleEdge0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getWidth();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis1);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise((Graphics2D) null, rectangle2D1, combinedDomainCategoryPlot1, (-7796), plotRenderingInfo0);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      combinedDomainCategoryPlot0.annotationChanged(annotationChangeEvent0);
      levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D1, categoryAxis1, categoryItemRendererState0, 10, (-7796));
      levelRenderer0.setMaximumItemWidth(10);
      levelRenderer0.calculateSeriesWidth(2.0F, categoryAxis1, 0, 0);
      levelRenderer0.hashCode();
      levelRenderer0.hashCode();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis1);
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.calculateItemWidth(combinedDomainCategoryPlot2, rectangle2D2, 0, categoryItemRendererState0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 1);
      levelRenderer0.calculateSeriesWidth(0.0, categoryAxis0, 1, 10);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot1, 1, (PlotRenderingInfo) null);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot1, 1);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D1, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, categoryDataset0, 1, (-255), 0);
      levelRenderer0.calculateSeriesWidth(2.0, categoryAxis0, 704, 0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.getPlot();
      // Undeclared exception!
      try { 
        levelRenderer0.getDomainAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer1.getRangeAxis(categoryPlot0, 10);
      // Undeclared exception!
      try { 
        categoryPlot0.getRangeAxisIndex((ValueAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'axis' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(categoryDataset0).getColumnCount();
      doReturn(0).when(categoryDataset0).getRowCount();
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.2).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn((-3.0), 1.0).when(categoryAxis0).getCategorySeriesMiddle(any(java.lang.Comparable.class) , any(java.lang.Comparable.class) , any(org.jfree.data.category.CategoryDataset.class) , anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(2931.720150790834).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getLowerMargin();
      doReturn(0.0).when(categoryAxis0).getUpperMargin();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.getRangeAxis(categoryPlot0, 1);
      CategoryPlot categoryPlot1 = new CategoryPlot(categoryDataset0, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot1, 500);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2.0).when(rectangle2D0).getWidth();
      combinedDomainCategoryPlot0.getIndexOf(levelRenderer0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot2 = levelRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot2, 512, plotRenderingInfo0);
      double double0 = levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis1, categoryItemRendererState0, 1, 10);
      assertEquals(0.2, double0, 0.01);
      
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(plotOrientation0, 0.0F, categoryDataset1, categoryAxis1, rectangle2D1, rectangleEdge0);
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = RectangleEdge.RIGHT;
      levelRenderer0.getItemMiddle(true, true, categoryDataset2, categoryAxis1, rectangle2D2, rectangleEdge1);
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D3).getWidth();
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState1 = levelRenderer0.initialise((Graphics2D) null, rectangle2D3, categoryPlot2, 0, plotRenderingInfo1);
      levelRenderer0.calculateItemWidth(categoryPlot2, rectangle2D3, 10, categoryItemRendererState1);
      assertEquals(0.0, categoryItemRendererState1.getBarWidth(), 0.01);
      
      Rectangle2D rectangle2D4 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      levelRenderer0.calculateItemWidth(categoryPlot2, rectangle2D4, 2601, categoryItemRendererState0);
      assertEquals(0.2, levelRenderer0.getItemMargin(), 0.01);
      assertEquals(1.0, levelRenderer0.getMaximumItemWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RendererChangeEvent rendererChangeEvent0 = mock(RendererChangeEvent.class, new ViolatedAssumptionAnswer());
      levelRenderer0.notifyListeners(rendererChangeEvent0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, 10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot1, 0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        levelRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, (ValueAxis) null, rectangle2D1, (-1351.8), combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.setPlot(categoryPlot0);
      levelRenderer0.hashCode();
      assertEquals(0.2, levelRenderer0.getItemMargin(), 0.01);
      
      levelRenderer0.setItemMargin(0.0);
      assertEquals(0.0, levelRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(categoryDataset0).getRowKey(anyInt());
      doReturn(1).when(categoryDataset0).getColumnCount();
      doReturn(35).when(categoryDataset0).getRowCount();
      doReturn((Number) null, (Number) null, (Number) null, (Number) null, (Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      levelRenderer0.findRangeBounds(categoryDataset0);
      levelRenderer0.setMaximumItemWidth(2.0);
      levelRenderer0.lookupSeriesPaint((-126));
      levelRenderer0.getItemMargin();
      levelRenderer0.setItemMargin(0.2);
      levelRenderer0.clearSeriesStrokes(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getWidth();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(categoryAxis0).getCategoryMiddle(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      doReturn(0.0).when(categoryAxis0).getCategoryStart(anyInt() , anyInt() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      levelRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset1, categoryAxis0, (ValueAxis) null, levelRenderer0);
      CategoryAxis categoryAxis1 = levelRenderer0.getDomainAxis(categoryPlot0, (-126));
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(2.0F).when(categoryDataset2).getValue(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        levelRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis1, (ValueAxis) null, categoryDataset2, 500, 0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }
}
