/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:31:27 GMT 2019
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RectangularShape;
import java.awt.geom.RoundRectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.data.category.CategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GradientBarPainter_ESTest extends GradientBarPainter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(0.0, 0.0, (-498.0));
      GradientBarPainter gradientBarPainter1 = new GradientBarPainter(0.0, 1.0E-100, 0.0);
      gradientBarPainter0.equals(gradientBarPainter1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter((-25.36235037), 0.2, (-790.5698500255667));
      GradientBarPainter gradientBarPainter1 = new GradientBarPainter();
      gradientBarPainter0.equals(gradientBarPainter1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, (-2487.9F), (-2487.9F), 2033.949F, 0.0F, 1005.61F);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      gradientBarPainter0.paintBar(graphics2D0, barRenderer0, (-1119), (-1087), roundRectangle2D_Float0, rectangleEdge0);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-3013.108F), Float.NEGATIVE_INFINITY, 0.0F, (-3013.108F));
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      gradientBarPainter0.paintBar(graphics2D0, barRenderer0, 0, 37, rectangle2D_Float0, rectangleEdge0);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle rectangle0 = new Rectangle(10, 10, 10, (-1227));
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle0.createUnion(rectangle2D0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        gradientBarPainter0.paintBar((Graphics2D) null, barRenderer0, 10, 10, rectangle2D1, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.GradientBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 15, (-937.5518), (double) barRenderer0.ZERO);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-1696), 15, rectangle2D_Double0, rectangleEdge0, false);
      assertTrue(barRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(1.0E-8, 1.0E-8, 0.0, 1.0E-8);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, 172, 0, rectangle2D0, rectangleEdge0, false);
      assertFalse(barRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(0.0, 0.0, 0.0);
      BarRenderer barRenderer0 = new BarRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1.0F, (-1.0F), 0.0F, 100, 0.0F, 1125.8F);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, 0, 0, roundRectangle2D_Float0, rectangleEdge0, false);
      assertEquals(0.0, barRenderer0.getUpperClip(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(point0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      barRenderer0.setShadowXOffset(0);
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-1791), 779, rectangle0, rectangleEdge0, false);
      assertTrue(barRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(9.3166275F, 2720, 2720, (-2134.2493F), (-2134.2493F), (-2134.2493F));
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, 2, 2, roundRectangle2D_Float0, rectangleEdge0, true);
      assertEquals(0.0, barRenderer0.getLowerClip(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(point0);
      barRenderer0.setShadowXOffset(0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-1), (-1), rectangle0, rectangleEdge0, false);
      assertTrue(barRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter((-623.204883), (-623.204883), (-623.204883));
      BarRenderer barRenderer0 = new BarRenderer();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      // Undeclared exception!
      try { 
        gradientBarPainter0.paintBarShadow((Graphics2D) null, barRenderer0, 0, (-1828), arc2D_Double0, rectangleEdge0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.GradientBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, (-2487.9F), (-2487.9F), 2033.949F, 0.0F, 1005.61F);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, (ValueAxis) null, barRenderer0);
      // Undeclared exception!
      try { 
        gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-2142307741), (-1087), roundRectangle2D_Float0, rectangleEdge0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter((-25.36235037), 0.2, (-790.5698500255667));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      // Undeclared exception!
      try { 
        gradientBarPainter0.paintBar(graphics2D0, barRenderer0, (-1089), 4, (RectangularShape) null, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.GradientBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, (CategoryAxis) null, (ValueAxis) null, barRenderer0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gradientBarPainter0.paintBar(graphics2D0, barRenderer0, (-7505), 10, rectangle2D_Double0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(0.0, 0.0, 2406.1899011382);
      GradientBarPainter gradientBarPainter1 = new GradientBarPainter(0.0, 0.0, 0.0);
      boolean boolean0 = gradientBarPainter0.equals(gradientBarPainter1);
      assertFalse(boolean0);
      assertFalse(gradientBarPainter1.equals((Object)gradientBarPainter0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(0.8, 2811.116864879, 2811.116864879);
      GradientBarPainter gradientBarPainter1 = new GradientBarPainter(0.8, 373.0723447113, 2811.116864879);
      boolean boolean0 = gradientBarPainter0.equals(gradientBarPainter1);
      assertFalse(boolean0);
      assertFalse(gradientBarPainter1.equals((Object)gradientBarPainter0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(518.2218271205084, 0.0, (-3413.46450583986));
      GradientBarPainter gradientBarPainter1 = new GradientBarPainter();
      boolean boolean0 = gradientBarPainter0.equals(gradientBarPainter1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      GradientBarPainter gradientBarPainter1 = new GradientBarPainter();
      boolean boolean0 = gradientBarPainter0.equals(gradientBarPainter1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      boolean boolean0 = gradientBarPainter0.equals(gradientBarPainter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Color color0 = Color.RED;
      boolean boolean0 = gradientBarPainter0.equals(color0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-747), 1802, rectangle2D_Double0, rectangleEdge0, false);
      assertTrue(barRenderer0.getIncludeBaseInRange());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      Dimension dimension0 = mock(Dimension.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(dimension0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-975), (-975), rectangle0, rectangleEdge0, true);
      assertFalse(barRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(0.0, 0.0, 0.0);
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1207.867F), 1.0F, 1.0F, 127);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-1459), (-2113), rectangle2D_Float0, rectangleEdge0, false);
      assertTrue(barRenderer0.getDefaultSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      gradientBarPainter0.paintBarShadow(graphics2D0, barRenderer0, (-66), 0, roundRectangle2D_Double0, rectangleEdge0, true);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer barRenderer0 = new BarRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      barRenderer0.setDrawBarOutline(true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      gradientBarPainter0.paintBar(graphics2D0, barRenderer0, 1066, 0, roundRectangle2D_Double0, rectangleEdge0);
      assertTrue(barRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      gradientBarPainter0.paintBar(graphics2D0, barRenderer0, 3480, 252, roundRectangle2D_Double0, (RectangleEdge) null);
      assertEquals(4.0, barRenderer0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer0 = new BarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      gradientBarPainter0.paintBar(graphics2D0, barRenderer0, 10, 10, rectangle2D_Double0, rectangleEdge0);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      gradientBarPainter0.hashCode();
  }
}
