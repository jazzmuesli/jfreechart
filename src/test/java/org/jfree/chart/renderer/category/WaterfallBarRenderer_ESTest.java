/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:23:43 GMT 2019
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Arc2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLabelLocation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickMarkPosition;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.util.SortOrder;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class WaterfallBarRenderer_ESTest extends WaterfallBarRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      BufferedImage bufferedImage0 = new BufferedImage(1, 1357, 1);
      assertNotNull(bufferedImage0);
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1357, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1357, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transformState);
      assertNotNull(sunGraphics2D0);
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1357, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1357, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      
      Point point0 = new Point(4621, 1357);
      assertEquals(4621, point0.x);
      assertEquals(1357, point0.y);
      assertNotNull(point0);
      assertEquals(4621.0, point0.getX(), 0.01);
      assertEquals(1357.0, point0.getY(), 0.01);
      
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      assertEquals(4621, point0.x);
      assertEquals(1357, point0.y);
      assertEquals(1357.0, line2D_Double0.y1, 0.01);
      assertEquals(4621.0, line2D_Double0.x2, 0.01);
      assertEquals(1357.0, line2D_Double0.y2, 0.01);
      assertEquals(4621.0, line2D_Double0.x1, 0.01);
      assertNotNull(line2D_Double0);
      assertEquals(4621.0, point0.getX(), 0.01);
      assertEquals(1357.0, point0.getY(), 0.01);
      
      Rectangle rectangle0 = line2D_Double0.getBounds();
      assertEquals(4621, point0.x);
      assertEquals(1357, point0.y);
      assertEquals(1357.0, line2D_Double0.y1, 0.01);
      assertEquals(4621.0, line2D_Double0.x2, 0.01);
      assertEquals(1357.0, line2D_Double0.y2, 0.01);
      assertEquals(4621.0, line2D_Double0.x1, 0.01);
      assertEquals(1357, rectangle0.y);
      assertEquals(4621, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertNotNull(rectangle0);
      assertEquals(4621.0, point0.getX(), 0.01);
      assertEquals(1357.0, point0.getY(), 0.01);
      assertEquals(1357.0, rectangle0.getMinY(), 0.01);
      assertEquals(1357.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1357.0, rectangle0.getY(), 0.01);
      assertEquals(1357.0, rectangle0.getMaxY(), 0.01);
      assertEquals(4621.0, rectangle0.getMinX(), 0.01);
      assertEquals(4621.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4621.0, rectangle0.getX(), 0.01);
      assertEquals(4621.0, rectangle0.getMaxX(), 0.01);
      
      DateAxis dateAxis0 = new DateAxis("");
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertNotNull(dateAxis0);
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(DateTickMarkPosition.START, dateAxis0.getTickMarkPosition());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertFalse(dateAxis0.isInverted());
      assertTrue(dateAxis0.isTickMarksVisible());
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(dateAxis0.isAxisLineVisible());
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertTrue(dateAxis0.isVisible());
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertEquals(AxisLabelLocation.MIDDLE, dateAxis0.getLabelLocation());
      assertTrue(dateAxis0.isAutoRange());
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertEquals("", dateAxis0.getLabel());
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertNotNull(combinedRangeCategoryPlot0);
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(DateTickMarkPosition.START, dateAxis0.getTickMarkPosition());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertFalse(dateAxis0.isInverted());
      assertTrue(dateAxis0.isTickMarksVisible());
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(dateAxis0.isAxisLineVisible());
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertTrue(dateAxis0.isVisible());
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertEquals(AxisLabelLocation.MIDDLE, dateAxis0.getLabelLocation());
      assertTrue(dateAxis0.isAutoRange());
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertEquals("", dateAxis0.getLabel());
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertFalse(combinedRangeCategoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(PlotOrientation.VERTICAL, combinedRangeCategoryPlot0.getOrientation());
      assertFalse(combinedRangeCategoryPlot0.isDomainPannable());
      assertFalse(combinedRangeCategoryPlot0.isSubplot());
      assertEquals(1, combinedRangeCategoryPlot0.getDomainAxisCount());
      assertFalse(combinedRangeCategoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(SortOrder.ASCENDING, combinedRangeCategoryPlot0.getColumnRenderingOrder());
      assertTrue(combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeCategoryPlot0.getRendererCount());
      assertFalse(combinedRangeCategoryPlot0.isDomainCrosshairVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01);
      assertTrue(combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
      assertEquals(CategoryAnchor.MIDDLE, combinedRangeCategoryPlot0.getDomainGridlinePosition());
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, combinedRangeCategoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, combinedRangeCategoryPlot0.getRowRenderingOrder());
      assertTrue(combinedRangeCategoryPlot0.isNotify());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeCategoryPlot0.isRangePannable());
      assertFalse(combinedRangeCategoryPlot0.fetchElementHintingFlag());
      assertFalse(combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(DatasetRenderingOrder.REVERSE, combinedRangeCategoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertFalse(combinedRangeCategoryPlot0.isDomainZoomable());
      assertFalse(combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      assertNotNull(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      
      CategoryItemRendererState categoryItemRendererState0 = waterfallBarRenderer0.initialise(sunGraphics2D0, rectangle0, combinedRangeCategoryPlot0, 6, plotRenderingInfo0);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(4621, point0.x);
      assertEquals(1357, point0.y);
      assertEquals(1357.0, line2D_Double0.y1, 0.01);
      assertEquals(4621.0, line2D_Double0.x2, 0.01);
      assertEquals(1357.0, line2D_Double0.y2, 0.01);
      assertEquals(4621.0, line2D_Double0.x1, 0.01);
      assertEquals(1357, rectangle0.y);
      assertEquals(4621, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertNotNull(categoryItemRendererState0);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1357, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1357, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(4621.0, point0.getX(), 0.01);
      assertEquals(1357.0, point0.getY(), 0.01);
      assertEquals(1357.0, rectangle0.getMinY(), 0.01);
      assertEquals(1357.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1357.0, rectangle0.getY(), 0.01);
      assertEquals(1357.0, rectangle0.getMaxY(), 0.01);
      assertEquals(4621.0, rectangle0.getMinX(), 0.01);
      assertEquals(4621.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4621.0, rectangle0.getX(), 0.01);
      assertEquals(4621.0, rectangle0.getMaxX(), 0.01);
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(DateTickMarkPosition.START, dateAxis0.getTickMarkPosition());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertFalse(dateAxis0.isInverted());
      assertTrue(dateAxis0.isTickMarksVisible());
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertTrue(dateAxis0.isAxisLineVisible());
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertTrue(dateAxis0.isVisible());
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertEquals(AxisLabelLocation.MIDDLE, dateAxis0.getLabelLocation());
      assertTrue(dateAxis0.isAutoRange());
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertEquals("", dateAxis0.getLabel());
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertFalse(combinedRangeCategoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(PlotOrientation.VERTICAL, combinedRangeCategoryPlot0.getOrientation());
      assertFalse(combinedRangeCategoryPlot0.isDomainPannable());
      assertFalse(combinedRangeCategoryPlot0.isSubplot());
      assertEquals(1, combinedRangeCategoryPlot0.getDomainAxisCount());
      assertFalse(combinedRangeCategoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(SortOrder.ASCENDING, combinedRangeCategoryPlot0.getColumnRenderingOrder());
      assertTrue(combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeCategoryPlot0.getRendererCount());
      assertFalse(combinedRangeCategoryPlot0.isDomainCrosshairVisible());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01);
      assertTrue(combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
      assertEquals(CategoryAnchor.MIDDLE, combinedRangeCategoryPlot0.getDomainGridlinePosition());
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, combinedRangeCategoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, combinedRangeCategoryPlot0.getRowRenderingOrder());
      assertTrue(combinedRangeCategoryPlot0.isNotify());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertFalse(combinedRangeCategoryPlot0.isRangePannable());
      assertFalse(combinedRangeCategoryPlot0.fetchElementHintingFlag());
      assertFalse(combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(DatasetRenderingOrder.REVERSE, combinedRangeCategoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertFalse(combinedRangeCategoryPlot0.isDomainZoomable());
      assertFalse(combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertFalse(combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.05, CategoryAxis.DEFAULT_AXIS_MARGIN, 0.01);
      assertEquals(0.2, CategoryAxis.DEFAULT_CATEGORY_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertNotNull(categoryAxis0);
      assertEquals("", categoryAxis0.getLabel());
      assertEquals(2.0F, categoryAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01);
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01);
      assertEquals(AxisLabelLocation.MIDDLE, categoryAxis0.getLabelLocation());
      assertTrue(categoryAxis0.isVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01);
      assertTrue(categoryAxis0.isTickMarksVisible());
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01);
      assertEquals(0.0F, categoryAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(categoryAxis0.isAxisLineVisible());
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertTrue(categoryAxis0.isTickLabelsVisible());
      assertFalse(categoryAxis0.isMinorTickMarksVisible());
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01);
      
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawItem(sunGraphics2D0, categoryItemRendererState0, rectangle0, combinedRangeCategoryPlot0, categoryAxis0, dateAxis0, (CategoryDataset) null, 4621, 1132, (-935));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.WaterfallBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      
      double[][] doubleArray0 = new double[4][0];
      double[] doubleArray1 = new double[8];
      doubleArray1[1] = 3.0;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertNotNull(defaultIntervalCategoryDataset0);
      assertEquals(4, doubleArray0.length);
      assertEquals(4, defaultIntervalCategoryDataset0.getRowCount());
      assertTrue(defaultIntervalCategoryDataset0.getNotify());
      assertEquals(8, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(8, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(4, defaultIntervalCategoryDataset0.getSeriesCount());
      
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[2];
      doubleArray1[1] = 0.2;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertNotNull(defaultIntervalCategoryDataset0);
      assertEquals(2, doubleArray0.length);
      assertEquals(2, defaultIntervalCategoryDataset0.getColumnCount());
      assertTrue(defaultIntervalCategoryDataset0.getNotify());
      assertEquals(2, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(2, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(2, defaultIntervalCategoryDataset0.getCategoryCount());
      
      Range range0 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(range0);
      assertEquals(2, doubleArray0.length);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, defaultIntervalCategoryDataset0.getColumnCount());
      assertTrue(defaultIntervalCategoryDataset0.getNotify());
      assertEquals(2, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(2, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(2, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(0.2, range0.getUpperBound(), 0.01);
      assertEquals(0.1, range0.getCentralValue(), 0.01);
      assertEquals(0.2, range0.getLength(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      assertNotNull(defaultTreeCellRenderer0);
      assertFalse(defaultTreeCellRenderer0.isFocusTraversalPolicyProvider());
      assertFalse(defaultTreeCellRenderer0.isFocusCycleRoot());
      assertFalse(defaultTreeCellRenderer0.getIgnoreRepaint());
      assertFalse(defaultTreeCellRenderer0.isFocusTraversalPolicySet());
      assertTrue(defaultTreeCellRenderer0.getFocusTraversalKeysEnabled());
      
      Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();
      assertNotNull(color0);
      assertFalse(defaultTreeCellRenderer0.isFocusTraversalPolicyProvider());
      assertFalse(defaultTreeCellRenderer0.isFocusCycleRoot());
      assertFalse(defaultTreeCellRenderer0.getIgnoreRepaint());
      assertFalse(defaultTreeCellRenderer0.isFocusTraversalPolicySet());
      assertTrue(defaultTreeCellRenderer0.getFocusTraversalKeysEnabled());
      assertEquals(207, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4665371), color0.getRGB());
      assertEquals(229, color0.getBlue());
      assertEquals(184, color0.getRed());
      assertEquals(255, color0.getAlpha());
      
      waterfallBarRenderer0.setPositiveBarPaint(color0);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(defaultTreeCellRenderer0.isFocusTraversalPolicyProvider());
      assertFalse(defaultTreeCellRenderer0.isFocusCycleRoot());
      assertFalse(defaultTreeCellRenderer0.getIgnoreRepaint());
      assertFalse(defaultTreeCellRenderer0.isFocusTraversalPolicySet());
      assertTrue(defaultTreeCellRenderer0.getFocusTraversalKeysEnabled());
      assertEquals(207, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4665371), color0.getRGB());
      assertEquals(229, color0.getBlue());
      assertEquals(184, color0.getRed());
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertNotNull(multiplePiePlot0);
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertFalse(multiplePiePlot0.isSubplot());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      
      Color color0 = (Color)multiplePiePlot0.getAggregatedItemsPaint();
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertNotNull(color0);
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertFalse(multiplePiePlot0.isSubplot());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, color0, color0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertFalse(multiplePiePlot0.isSubplot());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      
      double[][] doubleArray0 = new double[8][8];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertNotNull(defaultIntervalCategoryDataset0);
      assertEquals(8, doubleArray0.length);
      assertEquals(1, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(1, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(8, defaultIntervalCategoryDataset0.getRowCount());
      assertTrue(defaultIntervalCategoryDataset0.getNotify());
      assertEquals(8, defaultIntervalCategoryDataset0.getSeriesCount());
      
      Range range0 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(range0);
      assertEquals(8, doubleArray0.length);
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertFalse(multiplePiePlot0.isSubplot());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(1, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(8, defaultIntervalCategoryDataset0.getRowCount());
      assertTrue(defaultIntervalCategoryDataset0.getNotify());
      assertEquals(8, defaultIntervalCategoryDataset0.getSeriesCount());
      assertFalse(range0.isNaNRange());
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setNegativeBarPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setLastBarPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setFirstBarPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      
      String[] stringArray0 = new String[9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      assertNotNull(defaultIntervalCategoryDataset0);
      assertEquals(9, stringArray0.length);
      assertEquals(0, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(0, defaultIntervalCategoryDataset0.getSeriesCount());
      assertTrue(defaultIntervalCategoryDataset0.getNotify());
      
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      assertNotNull(color0);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      
      DateAxis dateAxis0 = new DateAxis();
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertNotNull(dateAxis0);
      assertTrue(dateAxis0.isAxisLineVisible());
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(AxisLabelLocation.MIDDLE, dateAxis0.getLabelLocation());
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertTrue(dateAxis0.isTickMarksVisible());
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertFalse(dateAxis0.isInverted());
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(dateAxis0.isVisible());
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertTrue(dateAxis0.isAutoRange());
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertNull(dateAxis0.getLabel());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertEquals(DateTickMarkPosition.START, dateAxis0.getTickMarkPosition());
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertNotNull(combinedDomainXYPlot0);
      assertTrue(dateAxis0.isAxisLineVisible());
      assertTrue(dateAxis0.isTickLabelsVisible());
      assertEquals(AxisLabelLocation.MIDDLE, dateAxis0.getLabelLocation());
      assertFalse(dateAxis0.isVerticalTickLabels());
      assertTrue(dateAxis0.isTickMarksVisible());
      assertEquals(2.0F, dateAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0, dateAxis0.getFixedAutoRange(), 0.01);
      assertFalse(dateAxis0.isInverted());
      assertEquals(2.0, dateAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(dateAxis0.isVisible());
      assertEquals(0.05, dateAxis0.getUpperMargin(), 0.01);
      assertEquals(2.0F, dateAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, dateAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, dateAxis0.getMinorTickCount());
      assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
      assertFalse(dateAxis0.isPositiveArrowVisible());
      assertFalse(dateAxis0.isMinorTickMarksVisible());
      assertTrue(dateAxis0.isAutoRange());
      assertEquals(0.05, dateAxis0.getLowerMargin(), 0.01);
      assertNull(dateAxis0.getLabel());
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
      assertTrue(dateAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, dateAxis0.getFixedDimension(), 0.01);
      assertEquals(DateTickMarkPosition.START, dateAxis0.getTickMarkPosition());
      assertFalse(dateAxis0.isNegativeArrowVisible());
      assertEquals(0.0F, dateAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, combinedDomainXYPlot0.getOrientation());
      assertEquals(0, combinedDomainXYPlot0.getRendererCount());
      assertFalse(combinedDomainXYPlot0.fetchElementHintingFlag());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(0, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, combinedDomainXYPlot0.getRangeAxisLocation());
      assertEquals(0, combinedDomainXYPlot0.getDatasetCount());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(SeriesRenderingOrder.REVERSE, combinedDomainXYPlot0.getSeriesRenderingOrder());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(DatasetRenderingOrder.REVERSE, combinedDomainXYPlot0.getDatasetRenderingOrder());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, combinedDomainXYPlot0.getDomainAxisLocation());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      
      WaterfallBarRenderer waterfallBarRenderer0 = null;
      try {
        waterfallBarRenderer0 = new WaterfallBarRenderer(color0, color0, (Paint) null, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'negativeBarPaint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      
      WaterfallBarRenderer waterfallBarRenderer1 = (WaterfallBarRenderer)waterfallBarRenderer0.clone();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertNotNull(waterfallBarRenderer1);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      
      waterfallBarRenderer1.setNegativeBarPaint(waterfallBarRenderer0.DEFAULT_PAINT);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertFalse(waterfallBarRenderer0.equals((Object)waterfallBarRenderer1));
      assertFalse(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      
      boolean boolean0 = waterfallBarRenderer0.equals(waterfallBarRenderer1);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertFalse(boolean0);
      assertFalse(waterfallBarRenderer0.equals((Object)waterfallBarRenderer1));
      assertFalse(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      
      WaterfallBarRenderer waterfallBarRenderer1 = (WaterfallBarRenderer)waterfallBarRenderer0.clone();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertNotNull(waterfallBarRenderer1);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      
      waterfallBarRenderer1.setPositiveBarPaint(waterfallBarRenderer0.DEFAULT_PAINT);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertFalse(waterfallBarRenderer0.equals((Object)waterfallBarRenderer1));
      assertFalse(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      
      boolean boolean0 = waterfallBarRenderer0.equals(waterfallBarRenderer1);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertFalse(boolean0);
      assertFalse(waterfallBarRenderer0.equals((Object)waterfallBarRenderer1));
      assertFalse(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      
      WaterfallBarRenderer waterfallBarRenderer1 = (WaterfallBarRenderer)waterfallBarRenderer0.clone();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertNotNull(waterfallBarRenderer1);
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      
      waterfallBarRenderer1.setLastBarPaint(waterfallBarRenderer0.DEFAULT_PAINT);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertFalse(waterfallBarRenderer0.equals((Object)waterfallBarRenderer1));
      assertFalse(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      
      boolean boolean0 = waterfallBarRenderer0.equals(waterfallBarRenderer1);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertFalse(boolean0);
      assertFalse(waterfallBarRenderer0.equals((Object)waterfallBarRenderer1));
      assertFalse(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      
      WaterfallBarRenderer waterfallBarRenderer1 = (WaterfallBarRenderer)waterfallBarRenderer0.clone();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertTrue(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertNotNull(waterfallBarRenderer1);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
      
      boolean boolean0 = waterfallBarRenderer0.equals(waterfallBarRenderer1);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotSame(waterfallBarRenderer0, waterfallBarRenderer1);
      assertNotSame(waterfallBarRenderer1, waterfallBarRenderer0);
      assertTrue(boolean0);
      assertTrue(waterfallBarRenderer0.equals((Object)waterfallBarRenderer1));
      assertTrue(waterfallBarRenderer1.equals((Object)waterfallBarRenderer0));
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer1.getRowCount());
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisible());
      assertTrue(waterfallBarRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(4.0, waterfallBarRenderer1.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(waterfallBarRenderer1.getShadowsVisible());
      assertEquals(1.0, waterfallBarRenderer1.getMinimumBarLength(), 0.01);
      assertEquals(1.0, waterfallBarRenderer1.getMaximumBarWidth(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2.0, waterfallBarRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0, waterfallBarRenderer1.getColumnCount());
      assertTrue(waterfallBarRenderer1.getDefaultCreateEntities());
      assertFalse(waterfallBarRenderer1.isDrawBarOutline());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, waterfallBarRenderer1.getItemMargin(), 0.01);
      assertTrue(waterfallBarRenderer1.getDefaultShadowsVisible());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(3, waterfallBarRenderer1.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer1.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer1.getDefaultItemLabelsVisible());
      assertEquals(1, waterfallBarRenderer1.getPassCount());
      assertEquals(0.0, waterfallBarRenderer1.getBase(), 0.01);
      assertEquals(4.0, waterfallBarRenderer1.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer1.getLowerClip(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotNull(statisticalBarRenderer0);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalBarRenderer0.getShadowsVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, statisticalBarRenderer0.getShadowYOffset(), 0.01);
      assertFalse(statisticalBarRenderer0.isDrawBarOutline());
      assertTrue(statisticalBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, statisticalBarRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01);
      assertTrue(statisticalBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisible());
      assertEquals(4.0, statisticalBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      
      Color color0 = (Color)statisticalBarRenderer0.getErrorIndicatorPaint();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotNull(color0);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalBarRenderer0.getShadowsVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, statisticalBarRenderer0.getShadowYOffset(), 0.01);
      assertFalse(statisticalBarRenderer0.isDrawBarOutline());
      assertTrue(statisticalBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, statisticalBarRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01);
      assertTrue(statisticalBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisible());
      assertEquals(4.0, statisticalBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getBlue());
      
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, statisticalBarRenderer0.DEFAULT_PAINT, color0, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalBarRenderer0.getShadowsVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, statisticalBarRenderer0.getShadowYOffset(), 0.01);
      assertFalse(statisticalBarRenderer0.isDrawBarOutline());
      assertTrue(statisticalBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, statisticalBarRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01);
      assertTrue(statisticalBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisible());
      assertEquals(4.0, statisticalBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getBlue());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      assertNotNull(jDBCCategoryDataset0);
      assertTrue(jDBCCategoryDataset0.getTranspose());
      assertTrue(jDBCCategoryDataset0.getNotify());
      
      boolean boolean0 = waterfallBarRenderer0.equals(jDBCCategoryDataset0);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertFalse(boolean0);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalBarRenderer0.getShadowsVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01);
      assertEquals(4.0, statisticalBarRenderer0.getShadowYOffset(), 0.01);
      assertFalse(statisticalBarRenderer0.isDrawBarOutline());
      assertTrue(statisticalBarRenderer0.getDefaultShadowsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, statisticalBarRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01);
      assertTrue(statisticalBarRenderer0.getDefaultCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertTrue(statisticalBarRenderer0.getDefaultSeriesVisible());
      assertEquals(4.0, statisticalBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getBlue());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertTrue(jDBCCategoryDataset0.getTranspose());
      assertTrue(jDBCCategoryDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertNotNull(waterfallBarRenderer0);
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
      
      boolean boolean0 = waterfallBarRenderer0.equals(waterfallBarRenderer0);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
      assertTrue(boolean0);
      assertEquals(0.2, waterfallBarRenderer0.getItemMargin(), 0.01);
      assertEquals(3, waterfallBarRenderer0.getDefaultEntityRadius());
      assertTrue(waterfallBarRenderer0.getIncludeBaseInRange());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(waterfallBarRenderer0.getDefaultItemLabelsVisible());
      assertEquals(4.0, waterfallBarRenderer0.getShadowYOffset(), 0.01);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, waterfallBarRenderer0.getUpperClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultCreateEntities());
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, waterfallBarRenderer0.getRowCount());
      assertEquals(4.0, waterfallBarRenderer0.getShadowXOffset(), 0.01);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, waterfallBarRenderer0.getColumnCount());
      assertFalse(waterfallBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, waterfallBarRenderer0.getBase(), 0.01);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, waterfallBarRenderer0.getLowerClip(), 0.01);
      assertTrue(waterfallBarRenderer0.getDefaultSeriesVisible());
      assertEquals(2.0, waterfallBarRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1, waterfallBarRenderer0.getPassCount());
      assertTrue(waterfallBarRenderer0.getDefaultShadowsVisible());
      assertTrue(waterfallBarRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getLastBarPaint();
      Object object0 = waterfallBarRenderer0.clone();
      assertTrue(object0.equals((Object)waterfallBarRenderer0));
      
      waterfallBarRenderer0.setFirstBarPaint(paint0);
      boolean boolean0 = waterfallBarRenderer0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Paint paint0 = statisticalBarRenderer0.getErrorIndicatorPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, statisticalBarRenderer0.DEFAULT_PAINT, paint0, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Rectangle2D rectangle2D0 = arc2D_Double0.getBounds2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, 10, plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(" .R");
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D0, combinedDomainCategoryPlot0, extendedCategoryAxis0, (ValueAxis) null, jDBCCategoryDataset0, 10, 59, 59);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      double[][] doubleArray0 = new double[2][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertNotNull(range0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.findRangeBounds((CategoryDataset) null);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getPositiveBarPaint();
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint[] paintArray0 = new Paint[7];
      Stroke[] strokeArray0 = new Stroke[5];
      Shape[] shapeArray0 = new Shape[2];
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier(paintArray0, paintArray0, paintArray0, strokeArray0, strokeArray0, shapeArray0);
      Paint paint0 = defaultDrawingSupplier0.getNextOutlinePaint();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setPositiveBarPaint(paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getFirstBarPaint();
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getLastBarPaint();
      waterfallBarRenderer0.setNegativeBarPaint(paint0);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getLastBarPaint();
      waterfallBarRenderer0.setLastBarPaint(paint0);
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getNegativeBarPaint();
      assertEquals(1.0, waterfallBarRenderer0.getMinimumBarLength(), 0.01);
  }
}
