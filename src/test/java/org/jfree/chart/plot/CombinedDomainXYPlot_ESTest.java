/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:02:39 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Button;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.ScrollPane;
import java.awt.Stroke;
import java.awt.color.ColorSpace;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.math.BigInteger;
import java.sql.Connection;
import java.text.AttributedCharacterIterator;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.Format;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.JApplet;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.plaf.basic.BasicListUI;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.JTextComponent;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.labels.IntervalXYToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PiePlotState;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.VectorRenderer;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.ui.Layer;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.ShadowGenerator;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.time.DateRange;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CombinedDomainXYPlot_ESTest extends CombinedDomainXYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PropertyResourceBundle propertyResourceBundle0 = (PropertyResourceBundle)CategoryPlot.localizationResources;
      propertyResourceBundle0.getBaseBundleName();
      XYPlot.localizationResources = (ResourceBundle) propertyResourceBundle0;
      combinedDomainXYPlot0.getRangeAxisLocation(10);
      combinedDomainXYPlot0.getLegendItems();
      System.setCurrentTimeMillis(10);
      // Undeclared exception!
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot0, 10);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.fetchElementHintingFlag();
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLowerBound((-30.0));
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYSplineRenderer0);
      combinedDomainXYPlot0.setRangePannable(true);
      combinedDomainXYPlot0.isRangePannable();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      chartPanel0.setDisplayToolTips(true);
      Point point0 = chartPanel0.getLocation();
      combinedDomainXYPlot0.getDomainAxisEdge();
      combinedDomainXYPlot0.panRangeAxes(2442.1153, plotRenderingInfo0, point0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
      piePlot0.getShadowGenerator();
      combinedDomainXYPlot0.setShadowGenerator((ShadowGenerator) null);
      combinedDomainXYPlot0.setGap((-1547.2));
      combinedDomainXYPlot0.getGap();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDataRange((ValueAxis) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)111;
      combinedDomainXYPlot0.fireChangeEvent();
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-16);
      byteArray0[6] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedDomainXYPlot0.getPlotType();
      combinedDomainXYPlot0.getGap();
      combinedDomainXYPlot0.getLegendItems();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      Font font1 = Font.getFont("info", font0);
      JFreeChart jFreeChart0 = new JFreeChart("info", font1, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (byte) (-12), (byte)111, (byte) (-1), (-939), (byte)117, (byte)117, false, true, true, true, true, true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      combinedDomainXYPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDataRange((ValueAxis) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)111;
      combinedDomainXYPlot0.fireChangeEvent();
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-16);
      byteArray0[6] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedDomainXYPlot0.getPlotType();
      combinedDomainXYPlot0.getGap();
      combinedDomainXYPlot0.getLegendItems();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      Font font1 = Font.getFont("info", font0);
      JFreeChart jFreeChart0 = new JFreeChart("info", font1, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (byte) (-12), (byte)111, (byte) (-1), (-939), (byte)117, (byte)117, false, false, false, true, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      combinedDomainXYPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "m:");
      Font font0 = TextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("m:", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      int[] intArray0 = new int[9];
      intArray0[0] = 143;
      intArray0[1] = 0;
      intArray0[2] = 500;
      intArray0[3] = 15;
      intArray0[4] = 10;
      intArray0[6] = (-1416);
      Hashtable<AttributedCharacterIterator.Attribute, VectorSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, VectorSeriesCollection>(924);
      intArray0[7] = 15;
      intArray0[8] = 500;
      bufferedImage0.getRGB(0, 0, 15, 0, intArray0, 10, 0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      cyclicNumberAxis0.createAttributedLabel("m:");
      CompassPlot compassPlot0 = new CompassPlot();
      jFreeChart0.setElementHinting(true);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(500, 0, 10, (-1410.1F));
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)ellipse2D_Float0.getBounds2D();
      rectangle2D_Float0.setRect(0.0F, 0.0F, (float) 0, 2.0F);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      AxisSpace axisSpace0 = cyclicNumberAxis0.reserveSpace(graphics2D0, compassPlot0, rectangle2D_Float0, rectangleEdge0, (AxisSpace) null);
      combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0);
      combinedDomainXYPlot0.getPlotType();
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateAxisSpace(sunGraphics2D0, rectangle2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be finite.
         //
         verifyException("org.jfree.chart.axis.NumberTickUnitSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLowerBound((-30.0));
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYSplineRenderer0);
      combinedDomainXYPlot0.setRangePannable(true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      combinedDomainXYPlot0.isRangePannable();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(817.22983598, "wY%>/pElNk-OG',");
      combinedDomainXYPlot0.equals(combinedDomainXYPlot0);
      combinedDomainXYPlot0.getGap();
      JFreeChart jFreeChart0 = new JFreeChart("wY%>/pElNk-OG',", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(10, 1.0F, renderingHints0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(3, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLabelAngle(0.0);
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      combinedDomainXYPlot0.remove(combinedRangeXYPlot0);
      combinedDomainXYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYSplineRenderer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLabelAngle(0.0);
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(1292.510806673345, (PlotRenderingInfo) null, (Point2D) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLabelAngle(0.0);
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      combinedDomainXYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(10, 1877);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      combinedDomainXYPlot0.setParent(waferMapPlot0);
      combinedDomainXYPlot0.setBackgroundImage((Image) null);
      combinedDomainXYPlot0.setBackgroundImageAlignment(2677);
      combinedDomainXYPlot0.isRangePannable();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-4.0F), 1.0F, 10);
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.draw((Graphics2D) null, rectangle2D_Float0, (Point2D) null, plotState0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLabelAngle(0.0);
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      combinedDomainXYPlot0.setShadowGenerator((ShadowGenerator) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "m:");
      Font font0 = TextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("m:", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      int[] intArray0 = new int[9];
      intArray0[0] = 143;
      intArray0[1] = 0;
      intArray0[2] = 500;
      intArray0[3] = 15;
      intArray0[4] = 10;
      intArray0[5] = 0;
      intArray0[6] = (-1416);
      intArray0[7] = 15;
      intArray0[8] = 500;
      bufferedImage0.getRGB(0, 0, 15, 0, intArray0, 10, 0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      cyclicNumberAxis0.createAttributedLabel("m:");
      CompassPlot compassPlot0 = new CompassPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(500, 0, 10, (-1410.1F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      AxisSpace axisSpace0 = cyclicNumberAxis0.reserveSpace(graphics2D0, compassPlot0, rectangle2D0, rectangleEdge0, (AxisSpace) null);
      combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0);
      combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      CategoryAxis categoryAxis0 = new CategoryAxis("m:");
      PolarPlot polarPlot0 = new PolarPlot();
      AxisSpace axisSpace1 = categoryAxis0.reserveSpace(graphics2D0, polarPlot0, rectangle2D0, rectangleEdge0, (AxisSpace) null);
      combinedDomainXYPlot0.setFixedRangeAxisSpaceForSubplots(axisSpace1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.setShadowGenerator((ShadowGenerator) null);
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo1);
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo1);
      combinedDomainXYPlot0.handleClick((-2612), 26, plotRenderingInfo0);
      combinedDomainXYPlot0.getSubplots();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYLineAndShapeRenderer0);
      combinedDomainXYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation1);
      combinedDomainXYPlot0.getSubplots();
      combinedDomainXYPlot0.setRangePannable(true);
      combinedDomainXYPlot0.equals(plotOrientation1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "a";
      stringArray0[1] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      symbolAxis0.resizeRange2(1.0F, 1.0F);
      combinedDomainXYPlot0.getDataRange(symbolAxis0);
      float[] floatArray0 = new float[0];
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      jFreeChart0.createBufferedImage(500, 10);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = (-2645.862482740426);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2645.862482740426));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setBackgroundPaint(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      IntervalMarker intervalMarker0 = new IntervalMarker((-4276), (-2645.862482740426));
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addRangeMarker((-4276), (Marker) intervalMarker0, layer0, true);
      xYPlot0.clearRangeMarkers();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add(xYPlot0, (-2758));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(valueAxis0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot1, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLabelAngle(0.0);
      combinedDomainXYPlot0.getDataRange(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = null;
      Point point0 = null;
      Point point1 = null;
      try {
        point1 = new Point((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainXYPlot0);
      jFreeChart0.plotChanged(plotChangeEvent0);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add(xYPlot0, 10);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      spiderWebPlot0.getSeriesOutlineStroke();
      combinedDomainXYPlot0.setOutlineStroke((Stroke) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValueAxis valueAxis0 = null;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.remove((XYPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PolarPlot polarPlot0 = new PolarPlot();
      LogAxis logAxis0 = new LogAxis();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.0F, 10, 1.0F, 1.0F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Point point0 = polarPlot0.translateToJava2D(1.0F, 604.55, logAxis0, rectangle2D0);
      combinedDomainXYPlot0.zoomRangeAxes(0.25, plotRenderingInfo0, (Point2D) point0, false);
      Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      combinedDomainXYPlot0.isRangePannable();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clone();
      combinedDomainXYPlot0.isRangePannable();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(817.22983598, "wY%>/pElNk-OG',");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.equals(combinedDomainXYPlot1);
      combinedDomainXYPlot0.getGap();
      JFreeChart jFreeChart0 = new JFreeChart("wY%>/pElNk-OG',", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(10, 1.0F, renderingHints0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(stroke0);
      combinedDomainXYPlot0.getRangeAxisLocation(802);
      combinedDomainXYPlot0.getGap();
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0, 802);
      AffineTransform.getQuadrantRotateInstance(10, 5.0, (double) 10);
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane(10, (-638));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setFixedRangeAxisSpaceForSubplots((AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0);
      polarPlot0.getDataRange(cyclicNumberAxis0);
      ModuloAxis moduloAxis0 = new ModuloAxis("INSIDE7", (Range) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = null;
      try {
        combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYPlot xYPlot0 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add((XYPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues("", "", "");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(piePlot3D0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      double double0 = 0.0;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
      EntityCollection entityCollection0 = piePlotState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getPlotInfo();
      Button button0 = null;
      try {
        button0 = new Button("org.jfree.chart.ChartPanel");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo1);
      standardEntityCollection0.getEntity(5.0, (double) 1.0F);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainXYPlot0.panRangeAxes(5.0, plotRenderingInfo0, point2D_Double0);
      plotRenderingInfo1.addSubplotInfo(plotRenderingInfo0);
      combinedDomainXYPlot0.getGap();
      standardEntityCollection0.clone();
      combinedDomainXYPlot0.getLegendItems();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      point2D_Double0.y = 50.0;
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) vectorRenderer0);
      point2D_Double0.setLocation((double) 10, 5.0);
      combinedDomainXYPlot0.panRangeAxes((-1.0), plotRenderingInfo1, point2D_Double0);
      combinedDomainXYPlot0.panRangeAxes((-1.0), plotRenderingInfo0, point2D_Double0);
      combinedDomainXYPlot0.zoomRangeAxes((double) vectorRenderer0.ZERO, 10.0, plotRenderingInfo1, (Point2D) point2D_Double0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDomainGridlineStroke(vectorRenderer0.DEFAULT_OUTLINE_STROKE);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(categoryPlot0, (Dataset) null);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getGap();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainXYPlot0);
      combinedDomainXYPlot0.plotChanged(plotChangeEvent0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(compassPlot0, defaultValueDataset0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.plotChanged(plotChangeEvent0);
      combinedDomainXYPlot0.isRangePannable();
      double double0 = (-59.818);
      PlotRenderingInfo plotRenderingInfo0 = null;
      Point2D.Double point2D_Double0 = new Point2D.Double();
      point2D_Double0.setLocation((double) 10, (-4705.58459315));
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.panRangeAxes((-59.818), (PlotRenderingInfo) null, point2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clone();
      combinedDomainXYPlot0.setRangePannable(false);
      combinedDomainXYPlot0.setGap(1201.932844803);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
      ringPlot0.getShadowGenerator();
      combinedDomainXYPlot0.setShadowGenerator((ShadowGenerator) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.remove(combinedRangeXYPlot0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getShadowGenerator();
      combinedDomainXYPlot0.setShadowGenerator((ShadowGenerator) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("OAL**E*5%=i(u");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainXYPlot0);
      combinedDomainXYPlot0.plotChanged(plotChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setBaseSymbol("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      logAxis0.setRangeAboutValue(0.0, 144.3076940865406);
      combinedDomainXYPlot0.getPlotType();
      combinedDomainXYPlot0.equals(logAxis0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis(")JY_xo|~BY");
      dateAxis0.resizeRange((-1187.7655927004));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.getGap();
      combinedDomainXYPlot0.setRangePannable(true);
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.isRangePannable();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "";
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Font font0 = Axis.DEFAULT_TICK_LABEL_FONT;
      numberAxis0.setLabelFont(font0);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1199, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent("", slidingGanttCategoryDataset0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      numberAxis0.setLowerBound(0.0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.findSubplot((PlotRenderingInfo) null, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, (Dataset) null);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
      EntityCollection entityCollection0 = piePlotState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainXYPlot0.findSubplot(plotRenderingInfo1, point2D_Double0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("Ye|tTcuncn'SAp$n");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.equals(numberAxis0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clear();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState(false);
      crosshairState0.getAnchor();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(1.0E-5, 1.0E-5, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues("", "Combined_Domain_XYPlot", "Requires 'value' > 0.0.");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      combinedDomainXYPlot0.getRendererForDataset(timePeriodValuesCollection0);
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) null);
      combinedDomainXYPlot0.clone();
      combinedDomainXYPlot0.isRangePannable();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getSubplots();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 91, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiListUI multiListUI0 = new MultiListUI();
      JList<Object> jList0 = new JList<Object>();
      // Undeclared exception!
      try { 
        multiListUI0.getCellBounds(jList0, 10, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("&%v'-;NY|BZ");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1618.18));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(176.370291, 0.0, (PlotRenderingInfo) null, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis(">xK@K'P?g+YWg");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getGap();
      combinedDomainXYPlot0.getDataRange((ValueAxis) null);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainXYPlot0);
      combinedDomainXYPlot0.notifyListeners(plotChangeEvent0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.axis.AxisState", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, (-2920), (-1898), 500, 1, 1, true, false, true, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.equals((Object) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotChangeEvent0.setChart(jFreeChart0);
      chartPanel0.setZoomInFactor(0.0);
      Point2D point2D0 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(5.0, plotRenderingInfo0, (Point2D) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.datasetChanged((DatasetChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.util.Rotation");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double((-955.078), 1.0E-8);
      combinedDomainXYPlot0.zoomRangeAxes((-1898.383), plotRenderingInfo0, (Point2D) point2D_Double0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Point2D.Double point2D_Double0 = new Point2D.Double((-1447.144), 0.0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(0.0, (PlotRenderingInfo) null, (Point2D) point2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYBarRenderer0);
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainXYPlot0.getDataRange(dateAxis0);
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYBarRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.handleClick(0, (-4390), plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("@", dateRange0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      combinedDomainXYPlot0.isRangePannable();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.handleClick(0, (-1), plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      combinedDomainXYPlot0.getDataRange(periodAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.handleClick((-1422), 500, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.removeChangeListener(combinedRangeCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getGap();
      JFreeChart jFreeChart0 = new JFreeChart("QT,C", combinedDomainXYPlot0);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add(xYPlot0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5.0, "subplot");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      XYPlot xYPlot0 = new XYPlot();
      combinedDomainXYPlot0.add(xYPlot0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.datasetChanged((DatasetChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYBoxAndWhiskerRenderer0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot0.setGap(0.04);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = 802;
      PropertyResourceBundle propertyResourceBundle0 = (PropertyResourceBundle)CategoryPlot.localizationResources;
      propertyResourceBundle0.getBaseBundleName();
      XYPlot.localizationResources = (ResourceBundle) propertyResourceBundle0;
      combinedDomainXYPlot0.getRangeAxisLocation(802);
      combinedDomainXYPlot0.getLegendItems();
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      XYPlot xYPlot0 = new XYPlot();
      int int1 = (-913);
      JFreeChart jFreeChart0 = new JFreeChart("source", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(315.0, 10);
      combinedDomainXYPlot0.zoomRangeAxes((double) 10, (-4066.660019), plotRenderingInfo0, (Point2D) point2D_Double0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add(xYPlot0, (-913));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(55.4235172866, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainXYPlot0.setRangePannable(false);
      combinedDomainXYPlot0.isRangePannable();
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYStepAreaRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point(10, 1850);
      combinedDomainXYPlot0.zoomRangeAxes((double) 500, plotRenderingInfo0, (Point2D) point0, true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      combinedDomainXYPlot0.zoomRangeAxes((double) 500, (double) 0.0F, plotRenderingInfo0, (Point2D) point0);
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(1, (OHLCDataItem[]) null);
      combinedDomainXYPlot0.equals(defaultOHLCDataset0);
      combinedDomainXYPlot0.getDataRange(cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(55.4235172866, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainXYPlot0.setRangePannable(false);
      combinedDomainXYPlot0.isRangePannable();
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYStepAreaRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point(10, 1850);
      combinedDomainXYPlot0.zoomRangeAxes((double) 10, plotRenderingInfo0, (Point2D) point0);
      combinedDomainXYPlot0.zoomRangeAxes((double) 500, plotRenderingInfo0, (Point2D) point0, true);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      combinedDomainXYPlot0.zoomRangeAxes((double) 500, (double) 0.0F, plotRenderingInfo0, (Point2D) point0);
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(1, (OHLCDataItem[]) null);
      combinedDomainXYPlot0.equals(defaultOHLCDataset0);
      combinedDomainXYPlot0.getDataRange(cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Object object0 = combinedDomainXYPlot0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(816.4488386175124, (String) null);
      combinedDomainXYPlot0.equals(object0);
      Float float0 = new Float((float) 10);
      JFreeChart jFreeChart0 = new JFreeChart("wY$J_pElNk-O&'i2", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(10, 1.0F, renderingHints0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Object object0 = combinedDomainXYPlot0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(817.22983598, "wY$J_pElNk-O&'i2");
      combinedDomainXYPlot0.equals(object0);
      Float float0 = new Float((float) 10);
      JFreeChart jFreeChart0 = new JFreeChart("wY$J_pElNk-O&'i2", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(10, 1.0F, renderingHints0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits(802);
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLowerBound((-30.0));
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYSplineRenderer0);
      combinedDomainXYPlot0.setRangePannable(true);
      combinedDomainXYPlot0.remove(combinedRangeXYPlot0);
      combinedDomainXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      thermometerPlot0.setUnits((-1));
      combinedDomainXYPlot0.setDataset(802, (XYDataset) timePeriodValuesCollection0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.getDataRange(valueAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, timePeriodValuesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.getSubplots();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setLabelAngle(0.0);
      combinedDomainXYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.remove(combinedDomainXYPlot0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedDomainXYPlot0.equals(defaultXYDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("a;E1w\"B-", valueAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 10, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3309, 500, 0.05, 5.0, chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotState plotState0 = new PlotState();
      combinedDomainXYPlot0.draw(graphics2D0, rectangle2D_Double0, (Point2D) null, plotState0, (PlotRenderingInfo) null);
      assertEquals(10, combinedRangeXYPlot0.getWeight());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.clearAnnotations();
      Object object0 = combinedDomainXYPlot0.clone();
      combinedDomainXYPlot0.getSubplots();
      assertNotSame(combinedDomainXYPlot0, object0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("|6hN:,Z");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getLegendItems();
      numberAxis0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.getGap();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      chartPanel0.setDisplayToolTips(true);
      Point point0 = chartPanel0.getLocation();
      combinedDomainXYPlot0.getDomainAxisEdge();
      combinedDomainXYPlot0.panRangeAxes(2442.1153, plotRenderingInfo0, point0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.getShadowGenerator();
      combinedDomainXYPlot0.setShadowGenerator((ShadowGenerator) null);
      combinedDomainXYPlot0.setGap(90.0);
      assertEquals(90.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      chartPanel0.setDisplayToolTips(true);
      Point point0 = chartPanel0.getLocation();
      combinedDomainXYPlot0.getDomainAxisEdge();
      combinedDomainXYPlot0.panRangeAxes(2442.1153, plotRenderingInfo0, point0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getShadowGenerator();
      combinedDomainXYPlot0.setShadowGenerator((ShadowGenerator) null);
      combinedDomainXYPlot0.setGap((-1547.2));
      assertEquals((-1547.2), combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3201.7438057285294), "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      combinedDomainXYPlot0.getIndexOf(stackedXYAreaRenderer2_0);
      cyclicNumberAxis0.addChangeListener(combinedDomainXYPlot0);
      combinedDomainXYPlot0.setWeight(339);
      combinedDomainXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      cyclicNumberAxis0.clone();
      combinedDomainXYPlot0.remove(combinedRangeXYPlot0);
      combinedDomainXYPlot0.getDomainAxisIndex(cyclicNumberAxis0);
      combinedDomainXYPlot0.getGap();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "m:");
      Font font0 = TextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("m:", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      int[] intArray0 = new int[9];
      intArray0[0] = 143;
      intArray0[1] = 0;
      intArray0[2] = 500;
      intArray0[3] = 15;
      intArray0[4] = 10;
      intArray0[5] = 0;
      intArray0[6] = (-1416);
      intArray0[7] = 15;
      intArray0[8] = 500;
      bufferedImage0.getRGB(0, 0, 15, 0, intArray0, 10, 0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      cyclicNumberAxis0.createAttributedLabel("m:");
      CompassPlot compassPlot0 = new CompassPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(500, 0, 10, (-1410.1F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      AxisSpace axisSpace0 = cyclicNumberAxis0.reserveSpace(graphics2D0, compassPlot0, rectangle2D0, rectangleEdge0, (AxisSpace) null);
      combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "m:");
      Font font0 = TextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("m:", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      int[] intArray0 = new int[9];
      intArray0[0] = 143;
      intArray0[1] = 0;
      intArray0[2] = 500;
      intArray0[3] = 15;
      intArray0[4] = 10;
      intArray0[6] = (-1416);
      Hashtable<AttributedCharacterIterator.Attribute, VectorSeriesCollection> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, VectorSeriesCollection>(924);
      Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      intArray0[7] = 15;
      intArray0[8] = 500;
      bufferedImage0.getRGB(0, 0, 15, 0, intArray0, 10, 0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      cyclicNumberAxis0.createAttributedLabel("m:");
      CompassPlot compassPlot0 = new CompassPlot();
      jFreeChart0.setElementHinting(true);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(500, 0, 10, (-1410.1F));
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)ellipse2D_Float0.getBounds2D();
      rectangle2D_Float0.setRect(0.0F, 0.0F, (float) 0, 2.0F);
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      AxisSpace axisSpace0 = cyclicNumberAxis0.reserveSpace(graphics2D0, compassPlot0, rectangle2D_Float0, rectangleEdge0, (AxisSpace) null);
      combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0);
      String string0 = combinedDomainXYPlot0.getPlotType();
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals("Combined_Domain_XYPlot", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-67L));
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.CHINA;
      Quarter quarter0 = new Quarter(mockDate0, timeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis((String) null, quarter0, quarter0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.clone();
      combinedDomainXYPlot0.getGap();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) cyclicXYItemRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.handleClick((-194), 8, plotRenderingInfo0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte) (-60);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedDomainXYPlot0.isRangePannable();
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 500;
      floatArray0[1] = (float) (byte) (-60);
      floatArray0[2] = 2.0F;
      floatArray0[3] = (float) 2;
      floatArray0[4] = (float) 4;
      floatArray0[5] = 0.0F;
      floatArray0[6] = (float) 44;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(44, 4, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 7 and should be 176
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }
}
