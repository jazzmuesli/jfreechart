/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:08:05 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Button;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Scrollbar;
import java.awt.SystemColor;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.TileObserver;
import java.util.Collection;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.TransferHandler;
import javax.swing.border.BevelBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.axis.AxisLabelLocation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PiePlotState;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.ui.Layer;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.ShadowGenerator;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CombinedDomainCategoryPlot_ESTest extends CombinedDomainCategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setCrosshairDatasetIndex(10);
      JFreeChart jFreeChart0 = new JFreeChart("oF_&", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle rectangle0 = new Rectangle(10, 0, 2835, 0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      rectangle0.contains((-1433.0), 685.9902769678, (double) 15, (double) 0.5F);
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedDomainCategoryPlot0.add(categoryPlot0);
      combinedDomainCategoryPlot0.clone();
      LogAxis logAxis0 = new LogAxis(">[h>r)TY73H$ V");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainCategoryPlot0.clone();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
      piePlotState0.getEntityCollection();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      combinedDomainCategoryPlot0.handleClick((-1), (-1), plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      System.setCurrentTimeMillis(10);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      combinedDomainCategoryPlot0.setShadowGenerator(defaultShadowGenerator0);
      combinedDomainCategoryPlot0.getSubplots();
      piePlotState0.setPieHRadius(1.0F);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      Object object0 = combinedDomainCategoryPlot2.clone();
      plotRenderingInfo0.equals(object0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot1.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      combinedDomainCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedDomainCategoryPlot0.clone();
      Point2D.Double point2D_Double0 = new Point2D.Double(5.0, 0);
      combinedDomainCategoryPlot1.draw(graphics2D0, rectangle2D0, point2D_Double0, (PlotState) null, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setGap(0.2);
      categoryAxis0.setCategoryMargin((-2746.7281355960495));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DrawingSupplier drawingSupplier0 = combinedDomainCategoryPlot0.getDrawingSupplier();
      combinedDomainCategoryPlot1.setDrawingSupplier(drawingSupplier0, false);
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, 0);
      combinedDomainCategoryPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot1.getCategoriesForAxis(categoryAxis0);
      combinedDomainCategoryPlot0.zoomRangeAxes(2708.8662768675, 5.0, plotRenderingInfo0, (Point2D) point0);
      plotRenderingInfo0.getPlotArea();
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.draw((Graphics2D) null, (Rectangle2D) null, point0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
      piePlotState0.getEntityCollection();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      combinedDomainCategoryPlot0.handleClick((-1), (-1), plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      System.setCurrentTimeMillis(10);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      combinedDomainCategoryPlot0.setShadowGenerator(defaultShadowGenerator0);
      combinedDomainCategoryPlot0.getSubplots();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot1.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      combinedDomainCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedDomainCategoryPlot1.getLegendItems();
      combinedDomainCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(557.6039259961707, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainCategoryPlot0.zoomRangeAxes((double) (byte) (-88), plotRenderingInfo0, (Point2D) point2D_Double0, true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.setRangeCrosshairValue(557.6039259961707, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2273.504275), 6.688223664316818, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.DATASET_UPDATED;
      markerChangeEvent0.setType(chartChangeEventType0);
      combinedDomainCategoryPlot0.markerChanged(markerChangeEvent0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      JFreeChart jFreeChart0 = new JFreeChart("C?rP~JkP", combinedDomainCategoryPlot0);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-977), 3187, 1157, (-977), 0, false, true, false, false, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.draw(graphics2D0, rectangle2D0, chartRenderingInfo0);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      combinedDomainCategoryPlot0.remove(categoryPlot0);
      combinedDomainCategoryPlot0.getSubplots();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("PRINT");
      subCategoryAxis0.setVisible(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      categoryPlot0.equals(combinedDomainCategoryPlot1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setGap(0.2);
      categoryAxis0.setCategoryMargin((-2746.7281355960495));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DrawingSupplier drawingSupplier0 = combinedDomainCategoryPlot0.getDrawingSupplier();
      combinedDomainCategoryPlot1.setDrawingSupplier(drawingSupplier0, false);
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, 0);
      combinedDomainCategoryPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getCategoriesForAxis(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.setRangeCrosshairValue(518.457, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0);
      CategoryAxis categoryAxis0 = new CategoryAxis("F:z(>.'k]FUA@s^\"Jt");
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.getCategoriesForAxis(categoryAxis0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.addCategoryLabelURL(true, "a}W%hoebtD/hh,");
      combinedDomainCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week();
      week0.getEnd();
      int int0 = 0;
      week0.getStart();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "a}W%hoebtD/hh,", 500, 0, 0, 500, 10, 0, 0, 24);
      Locale locale0 = Locale.UK;
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.category.CategoryStepRenderer", week0, week0, simpleTimeZone0, locale0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, 166);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
      piePlotState0.getEntityCollection();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.handleClick((-1), (-1), plotRenderingInfo1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      System.setCurrentTimeMillis(10);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      combinedDomainCategoryPlot0.setShadowGenerator(defaultShadowGenerator0);
      combinedDomainCategoryPlot0.getSubplots();
      int int0 = (-1794);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, (-1794));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2273.504275), 5.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.DATASET_UPDATED;
      markerChangeEvent0.setType(chartChangeEventType0);
      combinedDomainCategoryPlot0.markerChanged(markerChangeEvent0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      JFreeChart jFreeChart0 = new JFreeChart("C?rP~JkP", combinedDomainCategoryPlot0);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage1.addTileObserver(tileObserver0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-977), 3187, 1157, (-977), 0, false, true, false, false, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.draw(graphics2D0, rectangle2D0, chartRenderingInfo0);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      combinedDomainCategoryPlot0.remove(categoryPlot0);
      combinedDomainCategoryPlot0.getSubplots();
      Point point0 = new Point(1970, 0);
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.draw(graphics2D0, rectangle2D0, point0, plotState0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("$B*,Yle^oL\"");
      PiePlot piePlot0 = new PiePlot();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(piePlot0);
      combinedDomainCategoryPlot0.plotChanged(plotChangeEvent0);
      combinedDomainCategoryPlot0.clearRangeMarkers(10);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.getCategoriesForAxis(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AxisLabelLocation axisLabelLocation0 = AxisLabelLocation.LOW_END;
      categoryAxis0.setLabelLocation(axisLabelLocation0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(defaultListCellRenderer0, 10, (-260L), 3277, 0, (-1049), 166, true, (-2432), 0, 1);
      Point point0 = mouseWheelEvent0.getLocationOnScreen();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes((-411.22), (PlotRenderingInfo) null, (Point2D) point0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setGap(0.2);
      categoryAxis0.setCategoryMargin((-2746.7281355960495));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DrawingSupplier drawingSupplier0 = combinedDomainCategoryPlot0.getDrawingSupplier();
      combinedDomainCategoryPlot1.setDrawingSupplier(drawingSupplier0, false);
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      combinedDomainCategoryPlot1.setInsets(combinedDomainCategoryPlot0.DEFAULT_INSETS, false);
      Point point0 = gridBagLayout0.location(0, 0);
      combinedDomainCategoryPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("$B*,Yle^oL\"");
      PiePlot piePlot0 = new PiePlot();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(piePlot0);
      combinedDomainCategoryPlot0.plotChanged(plotChangeEvent0);
      combinedDomainCategoryPlot0.clearRangeMarkers(10);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, 10);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setGap(0.2);
      categoryAxis0.setCategoryMargin((-2746.7281355960495));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DrawingSupplier drawingSupplier0 = combinedDomainCategoryPlot0.getDrawingSupplier();
      combinedDomainCategoryPlot1.setDrawingSupplier(drawingSupplier0, false);
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, 0);
      combinedDomainCategoryPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("gj8v|a<gf");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryCrosshairState0.getAnchor();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes((-1946.5120728466131), plotRenderingInfo0, (Point2D) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes(0.0, (PlotRenderingInfo) null, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.remove((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setShadowGenerator((ShadowGenerator) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      Font font0 = thermometerPlot0.getValueFont();
      extendedCategoryAxis0.setTickLabelFont((Comparable) true, font0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      combinedDomainCategoryPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      extendedCategoryAxis0.setTickMarkStroke(combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.clone();
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.getGap();
      combinedDomainCategoryPlot0.getSubplots();
      double double0 = (-1068.50047229);
      PlotRenderingInfo plotRenderingInfo0 = null;
      MouseWheelEvent mouseWheelEvent0 = null;
      try {
        mouseWheelEvent0 = new MouseWheelEvent((Component) null, 3, 60L, 0, 0, 10, 10, true, (-1), 10, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryCrosshairState0.getAnchor();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes(493.579411, 0.0, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedDomainCategoryPlot0.add(categoryPlot0);
      combinedDomainCategoryPlot0.setDomainCrosshairColumnKey((Comparable) 10);
      combinedDomainCategoryPlot0.setWeight(10);
      String string0 = "4zmu!_";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1814.33772309533, "4zmu!_");
      cyclicNumberAxis0.zoomRange(1.0F, (-395.71391896));
      cyclicNumberAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeMarkers(0, layer0);
      cyclicNumberAxis0.setRangeWithMargins((-2434.215), 2820.0420165435885);
      NumberAxis.createStandardTickUnits();
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.getCategories();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Require weight >= 1.");
      subCategoryAxis0.setVisible(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getFixedRangeAxisSpace();
      combinedDomainCategoryPlot0.setFixedRangeAxisSpaceForSubplots((AxisSpace) null);
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("FO[)~\"", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 628, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      int[] intArray0 = new int[7];
      intArray0[0] = 10;
      intArray0[1] = 0;
      intArray0[2] = 628;
      intArray0[3] = 22;
      intArray0[4] = 22;
      intArray0[5] = 1100;
      intArray0[6] = 628;
      bufferedImage0.getRGB(2507, 22, 1, 0, intArray0, 1798, 0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      combinedDomainCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("ouYmc[|r");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point(234, 234);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      combinedDomainCategoryPlot0.zoomRangeAxes((double) 234, (double) 10, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.clone();
      JDBCPieDataset jDBCPieDataset0 = null;
      try {
        jDBCPieDataset0 = new JDBCPieDataset("org.jfree.chart.plot.CombinedDomainCategoryPlot", "s@b)p@~DcCU`,R+", "", "NO3&]F?p+C%|T");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.setLabelFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
      DateAxis dateAxis0 = new DateAxis("G^|;][N_.!av;");
      dateAxis0.setMinorTickCount(10);
      dateAxis0.setLabelPaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      dateAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainCategoryPlot0.getRangeAxisIndex(dateAxis0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot1.remove(combinedDomainCategoryPlot0);
      Graphics2D graphics2D0 = null;
      dateAxis0.setAutoRangeMinimumSize(4900.8922096699);
      dateAxis0.setAutoTickUnitSelection(true);
      categoryAxis0.getAttributedLabel();
      Line2D.Double line2D_Double0 = new Line2D.Double(10, 7.2E7, 0.35, (-2454.08));
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      extendedCategoryAxis0.setMaximumCategoryLabelWidthRatio(10);
      combinedDomainCategoryPlot0.equals(piePlot3D0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      statisticalBarRenderer0.setDrawBarOutline(true);
      int int0 = (-458);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) null, (-458));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      String string0 = "subplot";
      CategoryAxis categoryAxis0 = new CategoryAxis("subplot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot1);
      double double0 = (-3572.0348);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(4207);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4207, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedDomainCategoryPlot0.remove(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("$e]qIjhu3dd4");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      extendedCategoryAxis0.clearCategoryLabelToolTips();
      extendedCategoryAxis0.setVisible(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.getGap();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add(categoryPlot0, (-1049));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryCrosshairState0.setRowKey(false);
      categoryCrosshairState0.getAnchor();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.findSubplot((PlotRenderingInfo) null, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      combinedDomainCategoryPlot0.setDomainAxis((CategoryAxis) extendedCategoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.handleClick(29, (-5377), plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.handleClick(0, 0, plotRenderingInfo0);
      combinedDomainCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setGap((-1011.983));
      JFreeChart jFreeChart0 = new JFreeChart("F*#\"I%G6q>t", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 251, (-828), (-196), 15, 15, (-2285), true, true, true, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double((-974.0052672433883), 1024);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D_Double0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 816, 9, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.5F, 1129.5457F, 10, 816);
      rectangle2D_Float0.getBounds2D();
      Button button0 = null;
      try {
        button0 = new Button("v@nnPO=OP");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getCategories();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      combinedDomainCategoryPlot0.getDataRange(logarithmicAxis0);
      combinedDomainCategoryPlot0.equals(logarithmicAxis0);
      combinedDomainCategoryPlot0.getDataRange(logarithmicAxis0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainCategoryPlot0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0);
      plotChangeEvent0.setChart(jFreeChart0);
      combinedDomainCategoryPlot0.notifyListeners(plotChangeEvent0);
      LogAxis logAxis0 = new LogAxis();
      combinedDomainCategoryPlot0.getDataRange(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = null;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick(500, (-955), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("y]),");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.plotChanged(plotChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Require weight >= 1.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.GERMANY;
      DateAxis dateAxis0 = new DateAxis("Require weight >= 1.", timeZone0, locale0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      Point2D point2D0 = combinedDomainXYPlot0.getQuadrantOrigin();
      combinedDomainCategoryPlot0.zoomRangeAxes((-2926.892954712633), plotRenderingInfo0, point2D0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2360.05F, 0.0F, 989.1F, 10);
      Rectangle rectangle0 = new Rectangle(0, 10);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick(0, 751, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDataRange((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      RingPlot ringPlot0 = new RingPlot();
      combinedDomainCategoryPlot0.equals(ringPlot0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getCategoriesForAxis(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clone();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedDomainCategoryPlot0.zoomRangeAxes(584.4171708, plotRenderingInfo0, (Point2D) point2D_Float0, false);
      combinedDomainCategoryPlot0.setGap(0.0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setGap(3092.17999578);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Point point0 = chartPanel0.translateJava2DToScreen(point2D_Float0);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Point point0 = new Point(10, 3484);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoomRangeAxes(2.5, 2.5, (PlotRenderingInfo) null, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getSubplots();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getGap();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CategoryAxis categoryAxis0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setCrosshairDatasetIndex(35);
      JFreeChart jFreeChart0 = new JFreeChart("oF_&", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(35, 10, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
      piePlotState0.getEntityCollection();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      combinedDomainCategoryPlot0.handleClick((-1), (-1), plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      System.setCurrentTimeMillis(10);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      combinedDomainCategoryPlot0.setShadowGenerator(defaultShadowGenerator0);
      combinedDomainCategoryPlot0.getSubplots();
      piePlotState0.setPieHRadius(1.0F);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1, 10);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot1.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      combinedDomainCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      combinedDomainCategoryPlot0.getDataRange(logAxis0);
      logAxis0.setVisible(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.equals(chartRenderingInfo0);
      chartRenderingInfo0.clear();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.handleClick(500, 500, plotRenderingInfo0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      combinedDomainCategoryPlot0.getDataRange(logAxis0);
      logAxis0.setVisible(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0, 10);
      combinedDomainCategoryPlot0.remove(combinedRangeCategoryPlot0);
      SystemColor systemColor0 = SystemColor.controlShadow;
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator((-524), systemColor0, 10, 1581, 5.0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 1581, chartRenderingInfo0);
      // Undeclared exception!
      try { 
        defaultShadowGenerator0.createDropShadow(bufferedImage0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-548) and height (533) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.renderer.xy.XYSplineRenderer$XYSplineState");
      extendedCategoryAxis0.setMinorTickMarkOutsideLength(2078.1362F);
      extendedCategoryAxis0.setLowerMargin(45.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      extendedCategoryAxis0.setTickLabelPaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainCategoryPlot0.getSubplots();
      combinedDomainCategoryPlot0.getGap();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)41;
      extendedCategoryAxis0.getAttributedLabel();
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte) (-34);
      byteArray0[3] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedDomainCategoryPlot1.getFixedDomainAxisSpace();
      combinedDomainCategoryPlot0.setFixedRangeAxisSpaceForSubplots((AxisSpace) null);
      combinedDomainCategoryPlot0.clone();
      System.setCurrentTimeMillis((byte)41);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.getSubplots();
      combinedDomainCategoryPlot1.getCategoriesForAxis(extendedCategoryAxis0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
      ringPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot1.equals(ringPlot0);
      combinedDomainCategoryPlot2.getSubplots();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(557.6039259961707, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainCategoryPlot0.zoomRangeAxes((double) (byte) (-88), plotRenderingInfo0, (Point2D) point2D_Double0, true);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.addCategoryLabelURL(true, "a}W%hoebtD/hh,");
      combinedDomainCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Week week0 = new Week();
      Date date0 = week0.getEnd();
      week0.getStart();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "a}W%hoebtD/hh,", 53, 0, 0, 53, 10, 4, 0, 24);
      Locale locale0 = Locale.UK;
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.category.CategoryStepRenderer", week0, week0, simpleTimeZone0, locale0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, periodAxis0, (CategoryItemRenderer) null);
      combinedDomainCategoryPlot0.add(categoryPlot0, 166);
      combinedDomainCategoryPlot0.remove(categoryPlot0);
      assertEquals(166, categoryPlot0.getWeight());
      
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      standardEntityCollection0.equals(date0);
      Point point0 = new Point(10, 0);
      combinedDomainCategoryPlot0.zoomRangeAxes((double) 0, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getCategories();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo1.addSubplotInfo(plotRenderingInfo0);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo1, point0);
      combinedDomainCategoryPlot0.clone();
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 5.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.DATASET_UPDATED;
      markerChangeEvent0.setType(chartChangeEventType0);
      JFreeChart jFreeChart0 = new JFreeChart("C?rP~JkP", combinedDomainCategoryPlot0);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      defaultShadowGenerator0.createDropShadow(bufferedImage0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-977), 3187, 1157, (-977), 0, false, true, false, false, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.draw(graphics2D0, rectangle2D0, chartRenderingInfo0);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      combinedDomainCategoryPlot0.remove(categoryPlot0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("PRINT");
      subCategoryAxis0.setMinorTickMarkInsideLength(830.0875F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      boolean boolean0 = categoryPlot0.equals(combinedDomainCategoryPlot1);
      assertEquals(5.0, combinedDomainCategoryPlot1.getGap(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.clear();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.clone();
      combinedDomainCategoryPlot0.handleClick(8, 8, plotRenderingInfo0);
      LinkedList<PiePlot> linkedList0 = new LinkedList<PiePlot>();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setGap(0.2);
      categoryAxis0.setCategoryMargin((-2746.7281355960495));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DrawingSupplier drawingSupplier0 = combinedDomainCategoryPlot0.getDrawingSupplier();
      combinedDomainCategoryPlot1.setDrawingSupplier(drawingSupplier0, false);
      combinedDomainCategoryPlot0.remove(combinedDomainCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot1);
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, 0);
      combinedDomainCategoryPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot1.getCategoriesForAxis(categoryAxis0);
      combinedDomainCategoryPlot0.zoomRangeAxes(2708.8662768675, 5.0, plotRenderingInfo0, (Point2D) point0);
      boolean boolean0 = combinedDomainCategoryPlot1.equals(combinedDomainCategoryPlot0);
      assertEquals(0.2, combinedDomainCategoryPlot0.getGap(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      BevelBorder bevelBorder0 = new BevelBorder((-1049));
      ImageIcon imageIcon0 = new ImageIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("&Z< q>rlDwkC`&9QH=", imageIcon0);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jRadioButtonMenuItem0, (-3), 1826, (-3), 0);
      assertEquals(1828.0, rectangle0.getMinY(), 0.01);
  }
}
