/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:13:02 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ComponentSampleModel;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Raster;
import java.awt.image.SampleModel;
import java.awt.image.WritableRaster;
import java.awt.print.PageFormat;
import java.net.URL;
import java.sql.Connection;
import java.time.Instant;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.temporal.TemporalAdjuster;
import java.util.Date;
import java.util.Hashtable;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.DebugGraphics;
import javax.swing.ImageIcon;
import javax.swing.JEditorPane;
import javax.swing.JInternalFrame;
import javax.swing.JRadioButton;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.TransferHandler;
import javax.swing.border.SoftBevelBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.MarkerAxisBand;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.needle.ArrowNeedle;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CenterTextMode;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PiePlotState;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.ui.Layer;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.Size2D;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.ShadowGenerator;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.DateRange;
import org.jfree.data.time.Day;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CombinedRangeCategoryPlot_ESTest extends CombinedRangeCategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.equals("-v6!]?");
      combinedRangeCategoryPlot0.getCategories();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainCrosshairColumnKey((Comparable) false, false);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedRangeCategoryPlot1.setDomainAxisLocation(axisLocation0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      combinedRangeCategoryPlot0.getSubplots();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.removeDomainMarker(0, (Marker) null, layer0, false);
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 602, 10, 304, 10, 1729, 304, false, false, false, true, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(304, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be finite.
         //
         verifyException("org.jfree.chart.axis.NumberTickUnitSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis(":4:$Gz2$e;2C2");
      numberAxis0.setTickLabelsVisible(true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("o0Fzfl!]%+jI'Z3", combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      standardEntityCollection0.iterator();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 937.69326, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(0, 10, 15, 1863);
      Rectangle2D rectangle2D0 = numberAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      AxisSpace axisSpace0 = combinedRangeXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      axisSpace0.setTop(1.0E-8);
      combinedRangeCategoryPlot0.setFixedDomainAxisSpaceForSubplots(axisSpace0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      combinedRangeCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.equals("-v6!]?");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainCrosshairColumnKey((Comparable) false, false);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";Y1,{_y,U4b", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1198.0F), 10, 1, 1.0F);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(1.0F, (-1198.0F), (-2742.856242), 315.0, (-2742.856242), 1.0F);
      roundRectangle2D_Double0.getBounds2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      MockURL.getFileExample();
      JEditorPane jEditorPane0 = new JEditorPane(";Y1,{_y,U4b", ";Y1,{_y,U4b");
      combinedRangeCategoryPlot0.clone();
      combinedRangeCategoryPlot0.getLegendItems();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jEditorPane0, 47, 15, 1897, 0, 15, 366, 10, 10, false, 1763, 1897, 366, (-1850.0008371036263));
      Point point0 = mouseWheelEvent0.getPoint();
      PlotState plotState0 = new PlotState();
      combinedRangeCategoryPlot0.draw(graphics2D0, rectangle2D_Double0, point0, plotState0, (PlotRenderingInfo) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, 10);
      Line2D.Float line2D_Float0 = new Line2D.Float(2635.95F, 1.0F, 0.0F, 1.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      numberAxis0.setAxisLineVisible(false);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.draw((Graphics2D) null, rectangle2D0, (Point2D) null, (PlotState) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis((-173L));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.FRANCE;
      locale0.getDisplayLanguage();
      DateAxis dateAxis0 = new DateAxis("'iG$mwz", timeZone0, locale0);
      combinedRangeCategoryPlot0.getDataRange(dateAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainCrosshairStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0, 10);
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, false, true);
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0, jInternalFrame0);
      debugGraphics0.getClipBounds();
      AxisSpace axisSpace0 = new AxisSpace();
      AxisSpace axisSpace1 = combinedRangeCategoryPlot0.calculateRangeAxisSpace(graphics2D0, (Rectangle2D) null, axisSpace0);
      AxisSpace axisSpace2 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, (Rectangle2D) null, axisSpace1);
      combinedRangeCategoryPlot1.setFixedDomainAxisSpaceForSubplots(axisSpace2);
      // Undeclared exception!
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1, 10);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-173L));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.FRANCE;
      combinedRangeCategoryPlot0.getNoDataMessage();
      DateAxis dateAxis0 = new DateAxis("'iG$mwz", timeZone0, locale0);
      Range.expandToInclude(dateAxis0.DEFAULT_DATE_RANGE, 0.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainCrosshairStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0, 10);
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedRangeCategoryPlot1.getDataRange(dateAxis0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, false, true);
      AxisSpace axisSpace0 = new AxisSpace();
      // Undeclared exception!
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1, 10);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis(":4:$Gz2$e;2C2");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("o0Fzfl!]%+jI'Z3", combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      standardEntityCollection0.iterator();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 937.69326, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(0, 10, 15, 1863);
      Rectangle2D rectangle2D0 = numberAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      AxisSpace axisSpace0 = combinedRangeXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      axisSpace0.setTop(1.0E-8);
      combinedRangeCategoryPlot0.setFixedDomainAxisSpaceForSubplots(axisSpace0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeCategoryPlot0.draw(graphics2D0, rectangle2D0, (Point2D) null, plotState0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-173L));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.FRANCE;
      locale0.getDisplayLanguage();
      DateAxis dateAxis0 = new DateAxis("'iG$mwz", timeZone0, locale0);
      combinedRangeCategoryPlot0.getDataRange(dateAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainCrosshairStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0, 10);
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, false, true);
      AxisSpace axisSpace0 = new AxisSpace();
      // Undeclared exception!
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1, 10);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = Color.blue;
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator(1206, color0, 1574.0F, 1206, 2.0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeCategoryPlot0.setShadowGenerator(defaultShadowGenerator0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("c/yE&;glmMCn7@");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("c/yE&;glmMCn7@");
      jInternalFrame0.getNormalBounds();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, 10);
      combinedRangeCategoryPlot0.remove(combinedDomainCategoryPlot0);
      Object object0 = new Object();
      combinedRangeCategoryPlot0.equals(object0);
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
      EntityCollection entityCollection0 = piePlotState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      combinedRangeCategoryPlot0.handleClick(26, 0, plotRenderingInfo1);
      combinedRangeCategoryPlot0.getLegendItems();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      // Undeclared exception!
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("H[U(*<y4V6P~[");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BufferedImage bufferedImage0 = new BufferedImage(1, 10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area(combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle rectangle0 = area0.getBounds();
      combinedRangeCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle0);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createIntersection(rectangle2D_Float0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      subCategoryAxis0.getCategorySeriesMiddle(10, 10, 10, 0, (double) 10, rectangle2D0, rectangleEdge0);
      int int0 = 0;
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(10, 10, (-2253), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (a
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("");
      logAxis0.setVisible(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      combinedRangeCategoryPlot0.getSubplots();
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.getGap();
      logAxis0.setDownArrow(combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.getShadowGenerator();
      combinedRangeCategoryPlot0.setShadowGenerator((ShadowGenerator) null);
      combinedRangeCategoryPlot0.setNotify(true);
      combinedRangeCategoryPlot0.setGap((-848.1129));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("", dateRange0);
      moduloAxis0.setMinorTickMarkOutsideLength(3.4028235E38F);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, moduloAxis0, areaRenderer0);
      combinedRangeCategoryPlot0.add(categoryPlot0, 500);
      combinedRangeCategoryPlot0.getGap();
      combinedRangeCategoryPlot0.setGap(2.0F);
      combinedRangeCategoryPlot0.setGap(1.0F);
      combinedRangeCategoryPlot0.getSubplots();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedRangeCategoryPlot0.add(categoryPlot0, 10);
      combinedRangeCategoryPlot0.add(categoryPlot0, 2569);
      combinedRangeCategoryPlot0.getGap();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getShadowGenerator();
      combinedRangeCategoryPlot0.setShadowGenerator((ShadowGenerator) null);
      combinedRangeCategoryPlot0.setGap((-802.0));
      combinedRangeCategoryPlot0.getShadowGenerator();
      combinedRangeCategoryPlot0.setShadowGenerator((ShadowGenerator) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PiePlotState piePlotState0 = new PiePlotState((PlotRenderingInfo) null);
      piePlotState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.equals((Object) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeCategoryPlot0.handleClick(93, 52, plotRenderingInfo0);
      combinedRangeCategoryPlot0.clone();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setGap(1375.1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.handleClick((-141), (-141), plotRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(2289, (-141));
      Rectangle rectangle0 = new Rectangle(point0);
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0, 0, rectangleAnchor0);
      Rectangle2D rectangle2D1 = rectangle0.createUnion(rectangle2D0);
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      AffineTransform affineTransform0 = arrowNeedle0.getTransform();
      Point2D point2D0 = affineTransform0.inverseTransform((Point2D) point0, (Point2D) point0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.draw((Graphics2D) null, rectangle2D1, point2D0, (PlotState) null, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[7];
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryItemRendererArray0[0] = (CategoryItemRenderer) categoryStepRenderer0;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedRangeCategoryPlot0.getRenderer();
      categoryItemRendererArray0[2] = null;
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      categoryItemRendererArray0[3] = (CategoryItemRenderer) stackedAreaRenderer1;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedRangeCategoryPlot0.getRendererForDataset(taskSeriesCollection0);
      categoryItemRendererArray0[4] = null;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      categoryItemRendererArray0[5] = (CategoryItemRenderer) lineAndShapeRenderer0;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      categoryItemRendererArray0[6] = (CategoryItemRenderer) minMaxCategoryRenderer0;
      combinedRangeCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("c[?&dFf=OE-E_eZ", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 1.0F, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedRangeCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("%Pf;", combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 2177, (-1099.9069082625), (-2003.8245), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(65535);
      JRadioButton jRadioButton0 = new JRadioButton();
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jRadioButton0, (-1), 0, 2177, 10);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.draw(graphics2D0, rectangle0, point0, plotState0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), 1.0F, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedRangeCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D0);
      combinedRangeCategoryPlot0.getDataRange((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = null;
      try {
        combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(moduloAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "DD8m6OV%@7UjO7yI";
      stringArray0[1] = "DD8m6OV%@7UjO7yI";
      stringArray0[2] = "DD8m6OV%@7UjO7yI";
      stringArray0[3] = "DD8m6OV%@7UjO7yI";
      stringArray0[4] = "DD8m6OV%@7UjO7yI";
      stringArray0[5] = "DD8m6OV%@7UjO7yI";
      stringArray0[6] = "DD8m6OV%@7UjO7yI";
      stringArray0[7] = "DD8m6OV%@7UjO7yI";
      SymbolAxis symbolAxis0 = new SymbolAxis("DD8m6OV%@7UjO7yI", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.clearDomainAxes();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.plotChanged(plotChangeEvent0);
      combinedRangeCategoryPlot1.getShadowGenerator();
      combinedRangeCategoryPlot0.setShadowGenerator((ShadowGenerator) null);
      combinedRangeCategoryPlot1.remove(combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0, 44);
      combinedRangeCategoryPlot1.clone();
      combinedRangeCategoryPlot1.equals((Object) null);
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot1.getDomainAxis();
      JFreeChart jFreeChart0 = new JFreeChart("DD8m6OV%@7UjO7yI", categoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(1669, 0, 0, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("kq$p2m", stringArray0);
      symbolAxis0.equals("kq$p2m");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      NumberAxis.createIntegerTickUnits();
      int int0 = (-2199);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.handleClick((-2199), (-2199), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedRangeCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getFixedDomainAxisSpace();
      combinedRangeCategoryPlot0.setFixedDomainAxisSpaceForSubplots((AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, (-2473));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedRangeCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(918.48804918);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setOutlineVisible(true);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedRangeCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.notifyListeners((PlotChangeEvent) null);
      combinedRangeCategoryPlot0.setGap(0.0);
      combinedRangeCategoryPlot0.getSubplots();
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.getDomainAxis((-3148));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ImageIcon imageIcon0 = new ImageIcon("w,}5wRfmOVG,Kv?;l{F", "w,}5wRfmOVG,Kv?;l{F");
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem(imageIcon0);
      MouseEvent mouseEvent0 = new MouseEvent(jRadioButtonMenuItem0, 1481, 10, 0, 10, 1145, (-1477), false);
      Point point0 = mouseEvent0.getPoint();
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.remove((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "rh0i|?M/2");
      combinedRangeCategoryPlot0.setDomainCrosshairPaint(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      cyclicNumberAxis0.clone();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      MarkerAxisBand markerAxisBand0 = new MarkerAxisBand(cyclicNumberAxis0, 1.0F, 5.0, 0.05, 646.8, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT);
      cyclicNumberAxis0.setMarkerBand(markerAxisBand0);
      combinedRangeCategoryPlot1.setBackgroundImageAlpha(0.0F);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1, 400);
      // Undeclared exception!
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeCategoryPlot0, defaultValueDataset0);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeCategoryPlot0.getSubplots();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.add((CategoryPlot) null, (-237));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.equals("-v6!]?");
      combinedRangeCategoryPlot0.getCategories();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainCrosshairColumnKey((Comparable) false, false);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      combinedRangeCategoryPlot0.getSubplots();
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setGap(0.0);
      combinedRangeCategoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = Color.orange;
      Color.getColor("PieSection: ");
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator((-2513), color0, (-1.0F), 10, 1.0F);
      combinedRangeCategoryPlot0.setShadowGenerator(defaultShadowGenerator0);
      combinedRangeCategoryPlot0.getSubplots();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("maximumDate");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.clone();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.handleClick(1800, 500, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      combinedRangeCategoryPlot1.setNoDataMessagePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.add((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis("Pr;dMWzRKb&rLlONmB$");
      DrawingSupplier drawingSupplier0 = combinedRangeCategoryPlot0.getDrawingSupplier();
      combinedRangeCategoryPlot0.setDrawingSupplier(drawingSupplier0, true);
      combinedRangeCategoryPlot0.getDataRange(numberAxis0);
      combinedRangeCategoryPlot0.getGap();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0, tableOrder0);
      spiderWebPlot0.getURLGenerator();
      statisticalBarRenderer0.setDefaultItemURLGenerator((CategoryURLGenerator) null);
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.add((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'subplot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 0.0, (-4425.409117), chartRenderingInfo0);
      bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Area area0 = new Area(combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      // Undeclared exception!
      try { 
        area0.createTransformedArea((AffineTransform) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // transform must not be null
         //
         verifyException("java.awt.geom.Area", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Object object0 = combinedRangeCategoryPlot0.clone();
      combinedRangeCategoryPlot0.equals(object0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-407), (-1027), (-1.0), (-3450.15354898243), chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-407) and height (-1027) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Week week0 = new Week();
      TimeZone timeZone0 = TimeZone.getTimeZone(",9@f1t4Kvw%n_tuHM");
      Locale locale0 = Locale.ENGLISH;
      PeriodAxis periodAxis0 = new PeriodAxis(",9@f1t4Kvw%n_tuHM", week0, week0, timeZone0, locale0);
      Instant instant0 = MockInstant.ofEpochSecond((-3037L));
      Instant instant1 = MockInstant.plusMillis(instant0, (-3037L));
      Instant instant2 = MockInstant.minusNanos(instant1, 53);
      Instant instant3 = MockInstant.with(instant2, (TemporalAdjuster) instant1);
      Date date0 = Date.from(instant3);
      timeZone0.inDaylightTime(date0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot)combinedRangeCategoryPlot0.clone();
      combinedRangeCategoryPlot0.getLegendItems();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      bufferedImage0.createGraphics();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.0, (-232.1500968), 5.0, 53);
      ellipse2D_Double0.getBounds2D();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      PlotState plotState0 = new PlotState();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      combinedRangeCategoryPlot1.remove(combinedRangeCategoryPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis(":4:$Gz2$e;2C2");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("o0Fzfl!]%+jI'Z3", combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      standardEntityCollection0.iterator();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 937.69326, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(0, 10, 15, 1863);
      Rectangle2D rectangle2D0 = numberAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      AxisSpace axisSpace0 = combinedRangeXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      axisSpace0.setTop(1.0E-8);
      combinedRangeCategoryPlot0.setFixedDomainAxisSpaceForSubplots(axisSpace0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeCategoryPlot0.handleClick(1024, 0, plotRenderingInfo0);
      TransferHandler transferHandler0 = new TransferHandler("o0Fzfl!]%+jI'Z3");
      Point point0 = transferHandler0.getDragImageOffset();
      PlotState plotState0 = new PlotState();
      combinedRangeCategoryPlot0.draw(graphics2D0, rectangle2D0, point0, plotState0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.equals("-v6!]?");
      combinedRangeCategoryPlot0.getCategories();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setDomainCrosshairColumnKey((Comparable) false, false);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      combinedRangeCategoryPlot1.setDomainGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedRangeCategoryPlot0.getSubplots();
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = (CombinedRangeCategoryPlot)combinedRangeCategoryPlot1.clone();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("-v6!]?");
      combinedRangeCategoryPlot2.getDataRange(logarithmicAxis0);
      combinedRangeCategoryPlot0.remove(combinedRangeCategoryPlot1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getGap();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      standardEntityCollection0.getEntity((double) 1, (double) 1.0F);
      plotRenderingInfo0.clone();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, 0.0F);
      chartRenderingInfo0.clone();
      combinedRangeCategoryPlot0.getRendererCount();
      combinedRangeCategoryPlot0.handleClick(1, 1, plotRenderingInfo0);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot1.setRangeMinorGridlinePaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = (CombinedRangeCategoryPlot)combinedRangeCategoryPlot0.clone();
      System.setCurrentTimeMillis(10);
      combinedRangeCategoryPlot1.equals(point2D_Float0);
      combinedRangeCategoryPlot1.getLegendItems();
      combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot2, 500);
      combinedRangeCategoryPlot1.remove(combinedRangeCategoryPlot2);
      assertEquals(1, combinedRangeCategoryPlot1.getWeight());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getGap();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      standardEntityCollection0.getEntity((double) 1, (double) 1.0F);
      plotRenderingInfo0.clone();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, 0.0F);
      plotRenderingInfo0.getSubplotIndex(point2D_Float0);
      combinedRangeCategoryPlot0.handleClick(1, 1, plotRenderingInfo0);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot1.setRangeAxisLocation((-1622), axisLocation0);
      combinedRangeCategoryPlot1.setRangeMinorGridlinePaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
      assertEquals(1, combinedRangeCategoryPlot1.getWeight());
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Year year0 = new Year();
      Year year1 = new Year((-9999));
      PeriodAxis periodAxis0 = new PeriodAxis("Requireweight >= z%.", year0, year1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      logAxis0.resizeRange2((-578.0), (-578.0));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      combinedRangeCategoryPlot0.equals(logAxis0);
      combinedRangeCategoryPlot0.clone();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.plotChanged(plotChangeEvent0);
      MeterPlot meterPlot0 = new MeterPlot((ValueDataset) null);
      int int0 = 1145;
      int int1 = 0;
      int int2 = (-906);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte) (-108);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1082), 269, byteArray0, byteArray0, byteArray0, (-855));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";Y1,{_y,U4b", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1198.0F), 10, 1, 1.0F);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(1.0F, (-1198.0F), (-2742.856242), 315.0, (-2742.856242), 1.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      rectangle2D_Float0.createIntersection(rectangle2D0);
      URL uRL0 = MockURL.getFileExample();
      JEditorPane jEditorPane0 = null;
      try {
        jEditorPane0 = new JEditorPane(uRL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.reflect.InvocationTargetException
         //
         verifyException("javax.swing.JEditorPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      numberAxis0.setRangeWithMargins((-1775.152575), 0.0);
      numberAxis0.setRangeAboutValue(709.7462089978, 709.7462089978);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setRangeCrosshairStroke(numberAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeCategoryPlot0.getLegendItems();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      combinedRangeCategoryPlot0.setShadowGenerator(defaultShadowGenerator0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, (-765));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (10) and height (-765) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setGap(1375.1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.handleClick((-141), (-141), plotRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(2289, (-141));
      int[] intArray0 = new int[2];
      intArray0[0] = (-141);
      intArray0[1] = 10;
      gridBagLayout0.columnWidths = intArray0;
      Rectangle rectangle0 = new Rectangle(point0);
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0, 0, rectangleAnchor0);
      rectangle0.createUnion(rectangle2D0);
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      combinedRangeCategoryPlot0.handleClick(0, 0, plotRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Require weight >= 1.
         //
         verifyException("org.jfree.chart.plot.CombinedRangeCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
  }
}
