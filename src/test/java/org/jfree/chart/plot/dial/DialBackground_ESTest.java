/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:21:29 GMT 2019
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.SystemColor;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.dial.DialBackground;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.ui.GradientPaintTransformType;
import org.jfree.chart.ui.GradientPaintTransformer;
import org.jfree.chart.ui.StandardGradientPaintTransformer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DialBackground_ESTest extends DialBackground_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Color color0 = Color.CYAN;
      GradientPaint gradientPaint0 = new GradientPaint(0.0F, 0.0F, color0, (-3361.733F), 0.0F, color0, true);
      DialBackground dialBackground0 = new DialBackground(gradientPaint0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-3361.733F)).when(rectangle2D0).getCenterX();
      doReturn((double)(-3361.733F)).when(rectangle2D0).getCenterY();
      doReturn((-92.2424056494)).when(rectangle2D0).getHeight();
      doReturn((double)0.0F).when(rectangle2D0).getWidth();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D0, 0.0, (-3361.733F));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double0, 2939.4, 135.973317917);
      dialBackground0.draw(graphics2D0, (DialPlot) null, rectangle2D_Double0, rectangle2D_Double1);
      assertEquals((-3361.73291015625), rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      // Undeclared exception!
      try { 
        dialBackground0.setPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      // Undeclared exception!
      try { 
        dialBackground0.setGradientPaintTransformer((GradientPaintTransformer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 't' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      DialBackground dialBackground0 = new DialBackground(color0);
      DialPlot dialPlot0 = new DialPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, (-1535.602156719), 0.0);
      // Undeclared exception!
      try { 
        dialBackground0.draw((Graphics2D) null, dialPlot0, rectangle2D1, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialBackground", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DialBackground dialBackground0 = null;
      try {
        dialBackground0 = new DialBackground((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      DialPlot dialPlot0 = new DialPlot();
      DialBackground dialBackground1 = new DialBackground(dialPlot0.DEFAULT_OUTLINE_PAINT);
      boolean boolean0 = dialBackground0.equals(dialBackground1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      boolean boolean0 = dialBackground0.equals(dialBackground0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Color color0 = Color.CYAN;
      GradientPaint gradientPaint0 = new GradientPaint(0.0F, 0.0F, color0, 0.0F, 0.0F, color0, true);
      DialBackground dialBackground0 = new DialBackground(gradientPaint0);
      boolean boolean0 = dialBackground0.equals(")}z^]g");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      dialBackground0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      Object object0 = dialBackground0.clone();
      boolean boolean0 = dialBackground0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      SystemColor systemColor0 = SystemColor.controlText;
      dialBackground0.setPaint(systemColor0);
      assertTrue(dialBackground0.isVisible());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      boolean boolean0 = dialBackground0.isClippedToWindow();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = (StandardGradientPaintTransformer)dialBackground0.getGradientPaintTransformer();
      dialBackground0.setGradientPaintTransformer(standardGradientPaintTransformer0);
      assertEquals(GradientPaintTransformType.VERTICAL, standardGradientPaintTransformer0.getType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DialBackground dialBackground0 = new DialBackground();
      Color color0 = (Color)dialBackground0.getPaint();
      assertEquals((-1), color0.getRGB());
  }
}
