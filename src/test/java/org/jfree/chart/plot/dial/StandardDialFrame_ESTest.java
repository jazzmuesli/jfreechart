/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:11:27 GMT 2019
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.plot.dial.DialLayerChangeEvent;
import org.jfree.chart.plot.dial.DialLayerChangeListener;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.StandardDialFrame;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardDialFrame_ESTest extends StandardDialFrame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame1);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertTrue(boolean0);
      
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2036.0, 1.0).when(rectangle2D0).getCenterX();
      doReturn(2036.0, (-3092.874448)).when(rectangle2D0).getCenterY();
      doReturn(1.0, (double)1.0F).when(rectangle2D0).getHeight();
      doReturn(1.0, 1.0).when(rectangle2D0).getWidth();
      standardDialFrame0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-2618.481275)).when(rectangle2D1).getCenterX();
      doReturn(1.0).when(rectangle2D1).getCenterY();
      doReturn((-2664.820967505028)).when(rectangle2D1).getHeight();
      doReturn((-1.0)).when(rectangle2D1).getWidth();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-3092.874448)).when(rectangle2D2).getCenterX();
      doReturn((-3092.874448)).when(rectangle2D2).getCenterY();
      doReturn((double)10).when(rectangle2D2).getHeight();
      doReturn((double)1.0F).when(rectangle2D2).getWidth();
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D2);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(ellipse2D_Double0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals((-3093.349448), ellipse2D_Double0.getMinX(), 0.01);
      assertEquals((-3097.624448), ellipse2D_Double0.getMinY(), 0.01);
      assertEquals((-3088.124448), ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals((-3092.874448), ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals((-3092.399448), ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals((-3092.874448), ellipse2D_Double0.getCenterY(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertEquals(0.95, ellipse2D_Double0.width, 0.01);
      assertEquals((-3093.349448), ellipse2D_Double0.x, 0.01);
      assertEquals(9.5, ellipse2D_Double0.height, 0.01);
      assertEquals((-3097.624448), ellipse2D_Double0.y, 0.01);
      
      Ellipse2D.Double ellipse2D_Double1 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D1);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(ellipse2D_Double1.equals((Object)ellipse2D_Double0));
      assertNotNull(ellipse2D_Double1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1266.7899595648882, ellipse2D_Double1.getMinY(), 0.01);
      assertEquals((-1264.7899595648882), ellipse2D_Double1.getMaxY(), 0.01);
      assertEquals((-2618.481275), ellipse2D_Double1.getCenterX(), 0.01);
      assertEquals(1.0, ellipse2D_Double1.getCenterY(), 0.01);
      assertEquals((-2618.006275), ellipse2D_Double1.getMinX(), 0.01);
      assertEquals((-2618.956275), ellipse2D_Double1.getMaxX(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(ellipse2D_Double1, ellipse2D_Double0);
      assertEquals((-2531.5799191297765), ellipse2D_Double1.height, 0.01);
      assertEquals((-2618.006275), ellipse2D_Double1.x, 0.01);
      assertEquals(1266.7899595648882, ellipse2D_Double1.y, 0.01);
      assertEquals((-0.95), ellipse2D_Double1.width, 0.01);
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.addChangeListener(dialLayerChangeListener0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      StandardDialFrame standardDialFrame2 = new StandardDialFrame();
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame2);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame2.getStroke();
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertNotNull(basicStroke0);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      
      StandardDialFrame standardDialFrame3 = (StandardDialFrame)standardDialFrame0.clone();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame3.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame3);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame3.isVisible());
      assertEquals(0.95, standardDialFrame3.getRadius(), 0.01);
      assertFalse(standardDialFrame3.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame3, standardDialFrame0);
      assertNotSame(standardDialFrame3, standardDialFrame1);
      assertNotSame(standardDialFrame3, standardDialFrame2);
      
      standardDialFrame2.setStroke(basicStroke0);
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame3));
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame3);
      
      boolean boolean1 = standardDialFrame0.equals(standardDialFrame2);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame3));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(boolean1 == boolean0);
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame3));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame3);
      assertFalse(boolean1);
      
      double double0 = standardDialFrame0.getRadius();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame3));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertEquals(0.95, double0, 0.01);
      
      boolean boolean2 = standardDialFrame0.isClippedToWindow();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame3));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertFalse(boolean2);
      
      standardDialFrame2.hashCode();
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame3));
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame3);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      
      Color color0 = (Color)standardDialFrame0.getForegroundPaint();
      assertNotNull(color0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      
      standardDialFrame0.setForegroundPaint(color0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame0.getStroke();
      assertNotNull(basicStroke0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      standardDialFrame0.setStroke(basicStroke0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      boolean boolean0 = standardDialFrame0.equals(color0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertFalse(boolean0);
      
      standardDialFrame0.hashCode();
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertTrue(standardDialFrame1.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      standardDialFrame0.setForegroundPaint(color0);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      StandardDialFrame standardDialFrame2 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame2);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.removeChangeListener(dialLayerChangeListener0);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F, (double)10).when(rectangle2D0).getCenterX();
      doReturn((-1937.9473425933081), 3391.339181899).when(rectangle2D0).getCenterY();
      doReturn(1721.826993, (double)1.0F).when(rectangle2D0).getHeight();
      doReturn(1721.826993, (-1937.9473425933081)).when(rectangle2D0).getWidth();
      standardDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      double double0 = standardDialFrame0.getRadius();
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertEquals(0.95, double0, 0.01);
      
      StandardDialFrame standardDialFrame3 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame3.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame3.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame3.equals((Object)standardDialFrame2));
      assertNotNull(standardDialFrame3);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame3.isVisible());
      assertEquals(0.95, standardDialFrame3.getRadius(), 0.01);
      assertFalse(standardDialFrame3.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame3, standardDialFrame0);
      assertNotSame(standardDialFrame3, standardDialFrame2);
      assertNotSame(standardDialFrame3, standardDialFrame1);
      
      standardDialFrame0.hashCode();
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      
      standardDialFrame3.setRadius(10);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame3.isVisible());
      assertEquals(10.0, standardDialFrame3.getRadius(), 0.01);
      assertFalse(standardDialFrame3.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame3, standardDialFrame0);
      assertNotSame(standardDialFrame3, standardDialFrame2);
      assertNotSame(standardDialFrame3, standardDialFrame1);
      
      boolean boolean1 = standardDialFrame0.equals(standardDialFrame3);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame1));
      assertTrue(boolean1 == boolean0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame3.isVisible());
      assertEquals(10.0, standardDialFrame3.getRadius(), 0.01);
      assertFalse(standardDialFrame3.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame3, standardDialFrame0);
      assertNotSame(standardDialFrame3, standardDialFrame2);
      assertNotSame(standardDialFrame3, standardDialFrame1);
      assertFalse(boolean1);
      
      StandardDialFrame standardDialFrame4 = (StandardDialFrame)standardDialFrame0.clone();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame4.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame4.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame4.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame4.equals((Object)standardDialFrame1));
      assertNotNull(standardDialFrame4);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame4.getRadius(), 0.01);
      assertTrue(standardDialFrame4.isVisible());
      assertFalse(standardDialFrame4.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame4);
      assertNotSame(standardDialFrame4, standardDialFrame2);
      assertNotSame(standardDialFrame4, standardDialFrame3);
      assertNotSame(standardDialFrame4, standardDialFrame0);
      assertNotSame(standardDialFrame4, standardDialFrame1);
      
      boolean boolean2 = standardDialFrame0.equals(color0);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame4));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame4);
      assertFalse(boolean2);
      
      standardDialFrame0.setBackgroundPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame4));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame4);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(1.0).when(rectangle2D1).getCenterX();
      doReturn(3391.339181899).when(rectangle2D1).getCenterY();
      doReturn(0.95).when(rectangle2D1).getHeight();
      doReturn(1721.826993).when(rectangle2D1).getWidth();
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D1);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame4));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(ellipse2D_Double0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals(3391.339181899, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(3391.790431899, ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals(3390.887931899, ellipse2D_Double0.getMinY(), 0.01);
      assertEquals((-816.867821675), ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(818.867821675, ellipse2D_Double0.getMaxX(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame4);
      assertEquals((-816.867821675), ellipse2D_Double0.x, 0.01);
      assertEquals(0.9025, ellipse2D_Double0.height, 0.01);
      assertEquals(3390.887931899, ellipse2D_Double0.y, 0.01);
      assertEquals(1635.73564335, ellipse2D_Double0.width, 0.01);
      
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(3391.339181899).when(rectangle2D2).getCenterX();
      doReturn(1635.73564335).when(rectangle2D2).getCenterY();
      doReturn(1772.0467868494038).when(rectangle2D2).getHeight();
      doReturn((-623.7930691824)).when(rectangle2D2).getWidth();
      Ellipse2D.Double ellipse2D_Double1 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D2);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame4));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(ellipse2D_Double1.equals((Object)ellipse2D_Double0));
      assertNotNull(ellipse2D_Double1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(794.0134195965331, ellipse2D_Double1.getMinY(), 0.01);
      assertEquals(2477.457867103467, ellipse2D_Double1.getMaxY(), 0.01);
      assertEquals(1635.73564335, ellipse2D_Double1.getCenterY(), 0.01);
      assertEquals(3687.6408897606398, ellipse2D_Double1.getMinX(), 0.01);
      assertEquals(3095.03747403736, ellipse2D_Double1.getMaxX(), 0.01);
      assertEquals(3391.339181899, ellipse2D_Double1.getCenterX(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame4);
      assertNotSame(ellipse2D_Double1, ellipse2D_Double0);
      assertEquals(3687.6408897606398, ellipse2D_Double1.x, 0.01);
      assertEquals(1683.4444475069336, ellipse2D_Double1.height, 0.01);
      assertEquals((-592.60341572328), ellipse2D_Double1.width, 0.01);
      assertEquals(794.0134195965331, ellipse2D_Double1.y, 0.01);
      
      standardDialFrame0.hashCode();
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame4));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame4);
      
      boolean boolean3 = standardDialFrame0.equals(standardDialFrame3);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame4));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame4));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame1));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame3.isVisible());
      assertEquals(10.0, standardDialFrame3.getRadius(), 0.01);
      assertFalse(standardDialFrame3.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame4);
      assertNotSame(standardDialFrame3, standardDialFrame4);
      assertNotSame(standardDialFrame3, standardDialFrame0);
      assertNotSame(standardDialFrame3, standardDialFrame2);
      assertNotSame(standardDialFrame3, standardDialFrame1);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      double double0 = standardDialFrame0.getRadius();
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, double0, 0.01);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardDialFrame0.setForegroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        standardDialFrame0.getWindow((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      standardDialFrame0.setRadius(2177.150028304);
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D0);
      assertNotNull(ellipse2D_Double0);
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.0, ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.width, 0.01);
      assertEquals(0.0, ellipse2D_Double0.y, 0.01);
      assertEquals(0.0, ellipse2D_Double0.x, 0.01);
      assertEquals(0.0, ellipse2D_Double0.height, 0.01);
      
      boolean boolean0 = standardDialFrame0.hasListener((EventListener) null);
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertFalse(boolean0);
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame0.getStroke();
      assertNotNull(basicStroke0);
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      StandardDialFrame standardDialFrame1 = new StandardDialFrame();
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      
      StandardDialFrame standardDialFrame2 = (StandardDialFrame)standardDialFrame1.clone();
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame2);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertNotSame(standardDialFrame1, standardDialFrame2);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      
      boolean boolean1 = standardDialFrame0.equals(standardDialFrame2);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(boolean1 == boolean0);
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame2);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertFalse(boolean1);
      
      standardDialFrame0.setStroke(basicStroke0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      boolean boolean2 = standardDialFrame0.equals(ellipse2D_Double0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.0, ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinY(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertFalse(boolean2);
      assertEquals(0.0, ellipse2D_Double0.width, 0.01);
      assertEquals(0.0, ellipse2D_Double0.y, 0.01);
      assertEquals(0.0, ellipse2D_Double0.x, 0.01);
      assertEquals(0.0, ellipse2D_Double0.height, 0.01);
      
      standardDialFrame0.hashCode();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Color color0 = (Color)standardDialFrame0.getForegroundPaint();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(color0);
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.setVisible(false);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isVisible());
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      boolean boolean3 = standardDialFrame0.isClippedToWindow();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(standardDialFrame0.isVisible());
      assertEquals(2177.150028304, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertFalse(boolean3);
      
      // Undeclared exception!
      try { 
        standardDialFrame0.setRadius((-4.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = standardDialFrame0.equals((Object) null);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(boolean0);
      
      standardDialFrame0.addChangeListener(dialLayerChangeListener0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.notifyListeners(dialLayerChangeEvent0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame0.getStroke();
      assertNotNull(basicStroke0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      standardDialFrame0.setStroke(basicStroke0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      // Undeclared exception!
      try { 
        standardDialFrame0.setBackgroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      boolean boolean0 = standardDialFrame0.equals("");
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      
      StandardDialFrame standardDialFrame1 = new StandardDialFrame();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertTrue(standardDialFrame1.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      
      StandardDialFrame standardDialFrame2 = (StandardDialFrame)standardDialFrame1.clone();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertNotNull(standardDialFrame2);
      assertTrue(standardDialFrame1.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertNotSame(standardDialFrame1, standardDialFrame2);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame2);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame1.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame2);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        standardDialFrame1.setRadius((-1022.63353));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.removeChangeListener(dialLayerChangeListener0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      StandardDialFrame standardDialFrame1 = new StandardDialFrame();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardDialFrame1.setRadius((-123.63716337603));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      
      standardDialFrame0.hashCode();
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = null;
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        standardDialFrame0.draw(graphics2D0, (DialPlot) null, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame0.getStroke();
      assertNotNull(basicStroke0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      Color color0 = (Color)standardDialFrame0.getForegroundPaint();
      assertNotNull(color0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      
      standardDialFrame0.setForegroundPaint(color0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      
      Color color0 = (Color)standardDialFrame0.getBackgroundPaint();
      assertNotNull(color0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(128, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      
      standardDialFrame0.setBackgroundPaint(color0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(128, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.removeChangeListener(dialLayerChangeListener0);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      
      Color color1 = (Color)standardDialFrame0.getBackgroundPaint();
      assertNotNull(color1);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(1, color1.getTransparency());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getGreen());
      assertEquals(128, color1.getBlue());
      assertEquals(128, color1.getRed());
      assertSame(color1, color0);
      
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      boolean boolean0 = standardDialFrame0.isClippedToWindow();
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertFalse(boolean0);
      
      standardDialFrame0.setForegroundPaint(color1);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(1, color1.getTransparency());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getGreen());
      assertEquals(128, color1.getBlue());
      assertEquals(128, color1.getRed());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertSame(color1, color0);
      
      Color color2 = (Color)standardDialFrame0.getBackgroundPaint();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(color2);
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertEquals(128, color2.getBlue());
      assertEquals(1, color2.getTransparency());
      assertEquals((-8355712), color2.getRGB());
      assertEquals(255, color2.getAlpha());
      assertEquals(128, color2.getGreen());
      assertEquals(128, color2.getRed());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertSame(color2, color0);
      assertSame(color2, color1);
      
      standardDialFrame0.setRadius(1.0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1.0, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      standardDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1.0, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      standardDialFrame0.draw(graphics2D1, dialPlot1, rectangle2D1, rectangle2D1);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1.0, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.setForegroundPaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1.0, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame0.getStroke();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(basicStroke0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1.0, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      DialPlot dialPlot2 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D2).getWidth();
      // Undeclared exception!
      try { 
        standardDialFrame0.draw((Graphics2D) null, dialPlot2, rectangle2D2, rectangle2D2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      
      Color color0 = (Color)standardDialFrame0.getBackgroundPaint();
      assertNotNull(color0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      
      standardDialFrame0.setBackgroundPaint(color0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      
      Color color1 = (Color)standardDialFrame0.getBackgroundPaint();
      assertNotNull(color1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(128, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals(128, color1.getGreen());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getRed());
      assertSame(color1, color0);
      
      standardDialFrame0.setForegroundPaint(color0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      assertSame(color0, color1);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D0);
      assertNotNull(ellipse2D_Double0);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.height, 0.01);
      assertEquals(0.0, ellipse2D_Double0.x, 0.01);
      assertEquals(0.0, ellipse2D_Double0.y, 0.01);
      assertEquals(0.0, ellipse2D_Double0.width, 0.01);
      
      standardDialFrame0.setForegroundPaint(color1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(128, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals(128, color1.getGreen());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getRed());
      assertSame(color1, color0);
      
      Color color2 = (Color)standardDialFrame0.getBackgroundPaint();
      assertNotNull(color2);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1, color2.getTransparency());
      assertEquals((-8355712), color2.getRGB());
      assertEquals(128, color2.getGreen());
      assertEquals(128, color2.getRed());
      assertEquals(255, color2.getAlpha());
      assertEquals(128, color2.getBlue());
      assertSame(color2, color0);
      assertSame(color2, color1);
      
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      standardDialFrame0.setBackgroundPaint(color1);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(128, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals(128, color1.getGreen());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getRed());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertSame(color1, color2);
      assertSame(color1, color0);
      
      Stroke stroke0 = null;
      // Undeclared exception!
      try { 
        standardDialFrame0.setStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      StandardDialFrame standardDialFrame1 = new StandardDialFrame();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      
      Color color0 = (Color)standardDialFrame1.getBackgroundPaint();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(color0);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      standardDialFrame0.setForegroundPaint(color0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame1);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertFalse(boolean0);
      
      double double0 = standardDialFrame0.getRadius();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertEquals(0.95, double0, 0.01);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame1.getWindow(rectangle2D0);
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(ellipse2D_Double0);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(0.0, ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertEquals(0.0, ellipse2D_Double0.width, 0.01);
      assertEquals(0.0, ellipse2D_Double0.y, 0.01);
      assertEquals(0.0, ellipse2D_Double0.x, 0.01);
      assertEquals(0.0, ellipse2D_Double0.height, 0.01);
      
      standardDialFrame0.setForegroundPaint(color0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame1.getStroke();
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(basicStroke0);
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      boolean boolean1 = standardDialFrame0.isClippedToWindow();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(boolean1 == boolean0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertFalse(boolean1);
      
      standardDialFrame1.setRadius(0.95);
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D1, rectangle2D2);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      BasicStroke basicStroke1 = (BasicStroke)standardDialFrame1.getStroke();
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(basicStroke1);
      assertEquals(2.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertSame(basicStroke1, basicStroke0);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      boolean boolean2 = standardDialFrame0.isClippedToWindow();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame1);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertTrue(standardDialFrame1.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertTrue(boolean0);
      
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2036.0, 1.0).when(rectangle2D0).getCenterX();
      doReturn(2036.0, (-3092.874448)).when(rectangle2D0).getCenterY();
      doReturn(1.0, (double)1.0F).when(rectangle2D0).getHeight();
      doReturn(1.0, 1.0).when(rectangle2D0).getWidth();
      standardDialFrame0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-2606.297444467258)).when(rectangle2D1).getCenterX();
      doReturn(1.0).when(rectangle2D1).getCenterY();
      doReturn((-2664.820967505028)).when(rectangle2D1).getHeight();
      doReturn((-1.0)).when(rectangle2D1).getWidth();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-3092.874448)).when(rectangle2D2).getCenterX();
      doReturn((-3092.874448)).when(rectangle2D2).getCenterY();
      doReturn((double)10).when(rectangle2D2).getHeight();
      doReturn((double)1.0F).when(rectangle2D2).getWidth();
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D2);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(ellipse2D_Double0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals((-3092.399448), ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals((-3093.349448), ellipse2D_Double0.getMinX(), 0.01);
      assertEquals((-3097.624448), ellipse2D_Double0.getMinY(), 0.01);
      assertEquals((-3088.124448), ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals((-3092.874448), ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals((-3092.874448), ellipse2D_Double0.getCenterY(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertEquals(0.95, ellipse2D_Double0.width, 0.01);
      assertEquals(9.5, ellipse2D_Double0.height, 0.01);
      assertEquals((-3097.624448), ellipse2D_Double0.y, 0.01);
      assertEquals((-3093.349448), ellipse2D_Double0.x, 0.01);
      
      Ellipse2D.Double ellipse2D_Double1 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D1);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(ellipse2D_Double1.equals((Object)ellipse2D_Double0));
      assertNotNull(ellipse2D_Double1);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals((-1264.7899595648882), ellipse2D_Double1.getMaxY(), 0.01);
      assertEquals((-2606.297444467258), ellipse2D_Double1.getCenterX(), 0.01);
      assertEquals((-2606.772444467258), ellipse2D_Double1.getMaxX(), 0.01);
      assertEquals(1.0, ellipse2D_Double1.getCenterY(), 0.01);
      assertEquals(1266.7899595648882, ellipse2D_Double1.getMinY(), 0.01);
      assertEquals((-2605.8224444672583), ellipse2D_Double1.getMinX(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(ellipse2D_Double1, ellipse2D_Double0);
      assertEquals((-0.95), ellipse2D_Double1.width, 0.01);
      assertEquals((-2605.8224444672583), ellipse2D_Double1.x, 0.01);
      assertEquals((-2531.5799191297765), ellipse2D_Double1.height, 0.01);
      assertEquals(1266.7899595648882, ellipse2D_Double1.y, 0.01);
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.addChangeListener(dialLayerChangeListener0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      StandardDialFrame standardDialFrame2 = new StandardDialFrame();
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertNotNull(standardDialFrame2);
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame2.getStroke();
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertNotNull(basicStroke0);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      
      StandardDialFrame standardDialFrame3 = (StandardDialFrame)standardDialFrame0.clone();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame3.equals((Object)standardDialFrame0));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame3.equals((Object)standardDialFrame2));
      assertNotNull(standardDialFrame3);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame3.getRadius(), 0.01);
      assertFalse(standardDialFrame3.isClippedToWindow());
      assertTrue(standardDialFrame3.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame3, standardDialFrame0);
      assertNotSame(standardDialFrame3, standardDialFrame1);
      assertNotSame(standardDialFrame3, standardDialFrame2);
      
      standardDialFrame2.setStroke(basicStroke0);
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame3));
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame3);
      
      boolean boolean1 = standardDialFrame0.equals(standardDialFrame2);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame3));
      assertFalse(boolean1 == boolean0);
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame3);
      assertFalse(boolean1);
      
      double double0 = standardDialFrame0.getRadius();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertEquals(0.95, double0, 0.01);
      
      boolean boolean2 = standardDialFrame0.isClippedToWindow();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame2));
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame3));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame3);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame0, standardDialFrame2);
      assertFalse(boolean2);
      
      standardDialFrame2.hashCode();
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame0));
      assertTrue(standardDialFrame2.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame2.equals((Object)standardDialFrame3));
      assertTrue(standardDialFrame2.isVisible());
      assertEquals(0.95, standardDialFrame2.getRadius(), 0.01);
      assertFalse(standardDialFrame2.isClippedToWindow());
      assertNotSame(standardDialFrame2, standardDialFrame0);
      assertNotSame(standardDialFrame2, standardDialFrame1);
      assertNotSame(standardDialFrame2, standardDialFrame3);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      
      Color color0 = (Color)standardDialFrame0.getForegroundPaint();
      assertNotNull(color0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertNotNull(standardDialFrame1);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame1.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame1);
      assertTrue(standardDialFrame0.equals((Object)standardDialFrame1));
      assertTrue(standardDialFrame1.equals((Object)standardDialFrame0));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame1.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertTrue(boolean0);
      
      standardDialFrame0.setBackgroundPaint(color0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = standardDialFrame0.hasListener(eventListener0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(boolean1 == boolean0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertFalse(boolean1);
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.addChangeListener(dialLayerChangeListener0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.hashCode();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.notifyListeners(dialLayerChangeEvent0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      boolean boolean2 = standardDialFrame0.equals(standardDialFrame1);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertFalse(standardDialFrame1.equals((Object)standardDialFrame0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(standardDialFrame1.isVisible());
      assertEquals(0.95, standardDialFrame1.getRadius(), 0.01);
      assertFalse(standardDialFrame1.isClippedToWindow());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertNotSame(standardDialFrame1, standardDialFrame0);
      assertFalse(boolean2);
      
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)standardDialFrame0.getWindow(rectangle2D0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(ellipse2D_Double0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0.0, ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getMaxY(), 0.01);
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertEquals(0.0, ellipse2D_Double0.height, 0.01);
      assertEquals(0.0, ellipse2D_Double0.x, 0.01);
      assertEquals(0.0, ellipse2D_Double0.width, 0.01);
      assertEquals(0.0, ellipse2D_Double0.y, 0.01);
      
      standardDialFrame0.hashCode();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.hashCode();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      standardDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D1, rectangle2D1);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.setRadius(0.95);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      standardDialFrame0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame0.getStroke();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(basicStroke0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1, basicStroke0.getLineJoin());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      
      Color color1 = (Color)standardDialFrame0.getBackgroundPaint();
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertNotNull(color1);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(0, color1.getRed());
      assertEquals(0, color1.getBlue());
      assertEquals(0, color1.getGreen());
      assertNotSame(standardDialFrame0, standardDialFrame1);
      assertSame(color1, color0);
      
      standardDialFrame0.setStroke(basicStroke0);
      assertFalse(standardDialFrame0.equals((Object)standardDialFrame1));
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(1, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1, basicStroke0.getLineJoin());
      assertNotSame(standardDialFrame0, standardDialFrame1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertNotNull(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      
      boolean boolean0 = standardDialFrame0.equals(standardDialFrame0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertTrue(boolean0);
      
      standardDialFrame0.hashCode();
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      
      Color color0 = (Color)standardDialFrame0.getForegroundPaint();
      assertNotNull(color0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      
      standardDialFrame0.setForegroundPaint(color0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F, (double)1.0F).when(rectangle2D0).getCenterX();
      doReturn((-596.936), (double)10).when(rectangle2D0).getCenterY();
      doReturn(1464.408132, (double)1.0F).when(rectangle2D0).getHeight();
      doReturn((double)10, (-1.0)).when(rectangle2D0).getWidth();
      standardDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      
      Color color1 = (Color)standardDialFrame0.getForegroundPaint();
      assertNotNull(color1);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getBlue());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getRed());
      assertSame(color1, color0);
      
      standardDialFrame0.setBackgroundPaint(color1);
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertTrue(standardDialFrame0.isVisible());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getBlue());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getRed());
      assertSame(color1, color0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      Paint paint0 = standardDialFrame0.getForegroundPaint();
      standardDialFrame0.setForegroundPaint(paint0);
      Stroke stroke0 = standardDialFrame0.getStroke();
      standardDialFrame0.setStroke(stroke0);
      standardDialFrame0.equals(paint0);
      standardDialFrame0.hashCode();
      standardDialFrame0.setForegroundPaint(paint0);
      Object object0 = standardDialFrame0.clone();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialFrame0.removeChangeListener(dialLayerChangeListener0);
      standardDialFrame0.getRadius();
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      standardDialFrame0.hashCode();
      standardDialFrame0.equals(standardDialFrame1);
      standardDialFrame0.equals(paint0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(1.0).when(rectangle2D0).getCenterX();
      doReturn(3391.339181899).when(rectangle2D0).getCenterY();
      doReturn(0.95).when(rectangle2D0).getHeight();
      doReturn(1721.826993).when(rectangle2D0).getWidth();
      standardDialFrame0.getWindow(rectangle2D0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(3391.339181899).when(rectangle2D1).getCenterX();
      doReturn(1635.73564335).when(rectangle2D1).getCenterY();
      doReturn((-816.867821675)).when(rectangle2D1).getHeight();
      doReturn((-623.7930691824)).when(rectangle2D1).getWidth();
      standardDialFrame0.getWindow(rectangle2D1);
      standardDialFrame0.setRadius(8.0);
      standardDialFrame0.hashCode();
      standardDialFrame0.equals(standardDialFrame1);
      standardDialFrame1.getStroke();
      assertEquals(8.0, standardDialFrame0.getRadius(), 0.01);
      assertTrue(standardDialFrame1.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      StandardDialFrame standardDialFrame1 = (StandardDialFrame)standardDialFrame0.clone();
      BasicStroke basicStroke0 = (BasicStroke)standardDialFrame1.getStroke();
      standardDialFrame1.setStroke(basicStroke0);
      // Undeclared exception!
      try { 
        standardDialFrame0.setRadius(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      standardDialFrame0.getStroke();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
  }
}
