/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:14:58 GMT 2019
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.event.MouseEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.RasterFormatException;
import java.awt.image.TileObserver;
import java.text.AttributedCharacterIterator;
import java.text.CharacterIterator;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLabelLocation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CenterTextMode;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DialShape;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PieLabelLinkStyle;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.plot.dial.ArcDialFrame;
import org.jfree.chart.plot.dial.DialBackground;
import org.jfree.chart.plot.dial.DialCap;
import org.jfree.chart.plot.dial.DialFrame;
import org.jfree.chart.plot.dial.DialLayer;
import org.jfree.chart.plot.dial.DialLayerChangeEvent;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.DialPointer;
import org.jfree.chart.plot.dial.DialScale;
import org.jfree.chart.plot.dial.DialTextAnnotation;
import org.jfree.chart.plot.dial.DialValueIndicator;
import org.jfree.chart.plot.dial.StandardDialFrame;
import org.jfree.chart.plot.dial.StandardDialScale;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.ui.HorizontalAlignment;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.ui.Size2D;
import org.jfree.chart.ui.VerticalAlignment;
import org.jfree.chart.util.Rotation;
import org.jfree.chart.util.SortOrder;
import org.jfree.chart.util.TableOrder;
import org.jfree.chart.util.UnitType;
import org.jfree.data.Range;
import org.jfree.data.RangeType;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultHeatMapDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.junit.runner.RunWith;
import sun.awt.image.ToolkitImage;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DialPlot_ESTest extends DialPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart("K3>v@*", dialPlot0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getDatasetCount();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      arcDialFrame0.setStartAngle((-2220.034724489));
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-2220.034724489), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2275, (double) 10, (double) 0.5F, chartRenderingInfo0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(2275, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertNotNull(bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset(0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset1 = dialPlot0.getDataset(0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(valueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int1 = dialPlot0.hashCode();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertFalse(int1 == int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-2220.034724489), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, 1.0F, 0);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-2220.034724489), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.mapDatasetToScale(0, (-233));
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(2275, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertNotNull(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      Point2D.Double point2D_Double0 = new Point2D.Double();
      assertNotNull(point2D_Double0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      
      PlotState plotState0 = new PlotState();
      assertNotNull(plotState0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      dialPlot0.draw(sunGraphics2D0, rectangle2D_Double2, point2D_Double0, plotState0, plotRenderingInfo0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(2275, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals((-10197866), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals((-10197866), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(2, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      
      double double0 = dialPlot0.getValue(87);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPointer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setNotify(false);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isNotify());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setOutlineVisible(false);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setNoDataMessage("DialPlot");
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getEndCap());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      dialPlot0.setOutlineStroke(basicStroke0);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getEndCap());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getLineJoin());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setView((-1644.4265593), (-1644.4265593), (-1644.4265593), 456.5228);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(10);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertNotNull(dialPointer_Pointer0);
      
      dialPointer_Pointer0.setWidthRadius(1840.4208);
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      
      dialPointer_Pointer0.setRadius(456.5228);
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(456.5228, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      
      dialPointer_Pointer0.setRadius((-170.0));
      assertEquals((-170.0), dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      
      DialPointer.Pointer dialPointer_Pointer1 = (DialPointer.Pointer)dialPointer_Pointer0.clone();
      assertEquals((-170.0), dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals((-170.0), dialPointer_Pointer1.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer1.isVisible());
      assertEquals(1840.4208, dialPointer_Pointer1.getWidthRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer1.getDatasetIndex());
      assertTrue(dialPointer_Pointer1.isClippedToWindow());
      assertNotNull(dialPointer_Pointer1);
      assertTrue(dialPointer_Pointer1.equals((Object)dialPointer_Pointer0));
      assertNotSame(dialPointer_Pointer0, dialPointer_Pointer1);
      assertNotSame(dialPointer_Pointer1, dialPointer_Pointer0);
      
      dialPointer_Pointer0.setOutlinePaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals((-170.0), dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertFalse(dialPointer_Pointer0.equals((Object)dialPointer_Pointer1));
      assertNotSame(dialPointer_Pointer0, dialPointer_Pointer1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPointer_Pointer0.setRadius(10);
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(10.0, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertFalse(dialPointer_Pointer0.equals((Object)dialPointer_Pointer1));
      assertNotSame(dialPointer_Pointer0, dialPointer_Pointer1);
      
      int int0 = dialPlot0.getPointerIndex(dialPointer_Pointer0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(10.0, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals((-1), int0);
      assertFalse(dialPointer_Pointer0.equals((Object)dialPointer_Pointer1));
      assertNotSame(dialPointer_Pointer0, dialPointer_Pointer1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewWidth();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals((-1644.4265593), double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double1 = dialPlot0.getViewX();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals((-1644.4265593), double1, 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setNotify(false);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double2 = dialPlot0.getViewX();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals((-1644.4265593), double2, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScale(483);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      System.setCurrentTimeMillis((-847L));
      dialPointer_Pointer0.setFillPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(1840.4208, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(10, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(10.0, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertFalse(dialPointer_Pointer0.equals((Object)dialPointer_Pointer1));
      assertNotSame(dialPointer_Pointer0, dialPointer_Pointer1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      int int1 = dialPlot0.getDatasetCount();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      String string0 = dialPlot0.getPlotType();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-1644.4265593), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1644.4265593), dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(456.5228, dialPlot0.getViewHeight(), 0.01);
      assertEquals((-1644.4265593), dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", string0);
      assertNotNull(string0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart("K3>v@*", dialPlot0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      int int0 = dialPlot0.getDatasetCount();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2275, (double) 10, (double) 0.5F, chartRenderingInfo0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(2275, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertNotNull(bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset(0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset1 = dialPlot0.getDataset(0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(valueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int1 = dialPlot0.hashCode();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(int1 == int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, 1.0F, 0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      
      dialPlot0.mapDatasetToScale(0, (-233));
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(2275, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertNotNull(sunGraphics2D0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      
      Point2D.Double point2D_Double0 = new Point2D.Double();
      assertNotNull(point2D_Double0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      
      PlotState plotState0 = new PlotState();
      assertNotNull(plotState0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      dialPlot0.draw(sunGraphics2D0, rectangle2D_Double2, point2D_Double0, plotState0, plotRenderingInfo0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(2275, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals((-10197866), sunGraphics2D0.pixel);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(2, sunGraphics2D0.strokeState);
      assertEquals((-10197866), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      
      double double0 = dialPlot0.getValue(87);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(dialPointer0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      StandardDialScale standardDialScale0 = new StandardDialScale(10, 1.0F, 3107.2455194408494, 10, 1.0F, 10);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertNotNull(standardDialScale0);
      
      dialPlot0.setBackground(standardDialScale0);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialCap dialCap0 = new DialCap();
      assertTrue(dialCap0.isVisible());
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertNotNull(dialCap0);
      
      boolean boolean0 = standardDialScale0.equals(dialCap0);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(dialCap0.isVisible());
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertFalse(boolean0);
      
      int int0 = 193;
      dialPlot0.mapDatasetToScale(10, (-484));
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewHeight();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setBackgroundImageAlignment(193);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int1 = dialPlot0.getDatasetCount();
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double1 = dialPlot0.getViewHeight();
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      BasicStroke basicStroke0 = (BasicStroke)jFreeChart0.getBorderStroke();
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      standardDialScale0.setMinorTickStroke(basicStroke0);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      dialPlot0.addScale(0, standardDialScale0);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      StandardDialScale standardDialScale1 = (StandardDialScale)dialPlot0.getScale(0);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(standardDialScale1.isVisible());
      assertEquals(0.02, standardDialScale1.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale1.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale1.getFirstTickLabelVisible());
      assertEquals(0.7, standardDialScale1.getTickRadius(), 0.01);
      assertEquals(0.04, standardDialScale1.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale1.getLowerBound(), 0.01);
      assertEquals(1.0, standardDialScale1.getUpperBound(), 0.01);
      assertTrue(standardDialScale1.isClippedToWindow());
      assertEquals(0.1, standardDialScale1.getTickLabelOffset(), 0.01);
      assertEquals(10, standardDialScale1.getMinorTickCount());
      assertEquals(10.0, standardDialScale1.getExtent(), 0.01);
      assertTrue(standardDialScale1.getTickLabelsVisible());
      assertEquals(3107.2455194408494, standardDialScale1.getStartAngle(), 0.01);
      assertNotNull(standardDialScale1);
      assertSame(standardDialScale1, standardDialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-635));
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertNull(dialPointer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addScale(2048, standardDialScale0);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertSame(standardDialScale0, standardDialScale1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(2048);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2048, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      arcDialFrame0.setVisible(false);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      dialPlot0.setDialFrame(arcDialFrame0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertNotNull(arcDialFrame1);
      assertSame(arcDialFrame1, arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      String string0 = dialPlot0.getPlotType();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", string0);
      assertNotNull(string0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(dialPlot0.ZERO);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset0);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(546.0, (-3401.29770329141));
      assertEquals(546.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-3401.29770329141), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      dialPlot0.setDialFrame(arcDialFrame0);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(546.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-3401.29770329141), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-2294));
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPointer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      System.setCurrentTimeMillis(10);
      Rectangle rectangle0 = new Rectangle((-2294), (-2294));
      assertEquals((-2294.0), rectangle0.getHeight(), 0.01);
      assertEquals((-2294.0), rectangle0.getMaxY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals((-2294.0), rectangle0.getWidth(), 0.01);
      assertEquals((-1147.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2294.0), rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1147.0), rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals((-2294), rectangle0.width);
      assertEquals((-2294), rectangle0.height);
      
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-2294), (-2294), 10, 0.1F);
      assertEquals((-2293.89999999851), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-2293.949999999255), rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals((-2284.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals((-2294.0), rectangle2D_Float0.getMinX(), 0.01);
      assertEquals((-2289.0), rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals((-2294.0), rectangle2D_Float0.getMinY(), 0.01);
      assertNotNull(rectangle2D_Float0);
      assertEquals(0.1F, rectangle2D_Float0.height, 0.01F);
      assertEquals((-2294.0F), rectangle2D_Float0.y, 0.01F);
      assertEquals((-2294.0F), rectangle2D_Float0.x, 0.01F);
      assertEquals(10.0F, rectangle2D_Float0.width, 0.01F);
      
      rectangle0.add((Rectangle2D) rectangle2D_Float0);
      assertEquals((-2294.0), rectangle0.getX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals((-2294.0), rectangle0.getY(), 0.01);
      assertEquals((-2293.0), rectangle0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle0.getWidth(), 0.01);
      assertEquals(1.0, rectangle0.getHeight(), 0.01);
      assertEquals((-2289.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2294.0), rectangle0.getMinX(), 0.01);
      assertEquals((-2284.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-2294.0), rectangle0.getMinY(), 0.01);
      assertEquals((-2293.5), rectangle0.getCenterY(), 0.01);
      assertEquals((-2293.89999999851), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-2293.949999999255), rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals((-2284.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals((-2294.0), rectangle2D_Float0.getMinX(), 0.01);
      assertEquals((-2289.0), rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals((-2294.0), rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(1, rectangle0.height);
      assertEquals((-2294), rectangle0.x);
      assertEquals(10, rectangle0.width);
      assertEquals((-2294), rectangle0.y);
      assertEquals(0.1F, rectangle2D_Float0.height, 0.01F);
      assertEquals((-2294.0F), rectangle2D_Float0.y, 0.01F);
      assertEquals((-2294.0F), rectangle2D_Float0.x, 0.01F);
      assertEquals(10.0F, rectangle2D_Float0.width, 0.01F);
      
      Rectangle rectangle1 = (Rectangle)rectangle0.getBounds2D();
      assertEquals((-2294.0), rectangle0.getX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals((-2294.0), rectangle0.getY(), 0.01);
      assertEquals((-2293.0), rectangle0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle0.getWidth(), 0.01);
      assertEquals(1.0, rectangle0.getHeight(), 0.01);
      assertEquals((-2289.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2294.0), rectangle0.getMinX(), 0.01);
      assertEquals((-2284.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-2294.0), rectangle0.getMinY(), 0.01);
      assertEquals((-2293.5), rectangle0.getCenterY(), 0.01);
      assertEquals((-2294.0), rectangle1.getX(), 0.01);
      assertEquals((-2294.0), rectangle1.getY(), 0.01);
      assertFalse(rectangle1.isEmpty());
      assertEquals(1.0, rectangle1.getHeight(), 0.01);
      assertEquals((-2293.0), rectangle1.getMaxY(), 0.01);
      assertEquals((-2293.5), rectangle1.getCenterY(), 0.01);
      assertEquals((-2294.0), rectangle1.getMinX(), 0.01);
      assertEquals((-2284.0), rectangle1.getMaxX(), 0.01);
      assertEquals((-2294.0), rectangle1.getMinY(), 0.01);
      assertEquals((-2289.0), rectangle1.getCenterX(), 0.01);
      assertEquals(10.0, rectangle1.getWidth(), 0.01);
      assertNotNull(rectangle1);
      assertTrue(rectangle1.equals((Object)rectangle0));
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(1, rectangle0.height);
      assertEquals((-2294), rectangle0.x);
      assertEquals(10, rectangle0.width);
      assertEquals((-2294), rectangle0.y);
      assertEquals((-2294), rectangle1.x);
      assertEquals((-2294), rectangle1.y);
      assertEquals(10, rectangle1.width);
      assertEquals(1, rectangle1.height);
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle1, 1.0F, 10);
      assertEquals((-2294.0), rectangle0.getX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals((-2294.0), rectangle0.getY(), 0.01);
      assertEquals((-2293.0), rectangle0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle0.getWidth(), 0.01);
      assertEquals(1.0, rectangle0.getHeight(), 0.01);
      assertEquals((-2289.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2294.0), rectangle0.getMinX(), 0.01);
      assertEquals((-2284.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-2294.0), rectangle0.getMinY(), 0.01);
      assertEquals((-2293.5), rectangle0.getCenterY(), 0.01);
      assertEquals((-2294.0), rectangle1.getX(), 0.01);
      assertEquals((-2294.0), rectangle1.getY(), 0.01);
      assertFalse(rectangle1.isEmpty());
      assertEquals(1.0, rectangle1.getHeight(), 0.01);
      assertEquals((-2293.0), rectangle1.getMaxY(), 0.01);
      assertEquals((-2293.5), rectangle1.getCenterY(), 0.01);
      assertEquals((-2294.0), rectangle1.getMinX(), 0.01);
      assertEquals((-2284.0), rectangle1.getMaxX(), 0.01);
      assertEquals((-2294.0), rectangle1.getMinY(), 0.01);
      assertEquals((-2289.0), rectangle1.getCenterX(), 0.01);
      assertEquals(10.0, rectangle1.getWidth(), 0.01);
      assertEquals((-2288.5), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-2298.5), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-2284.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-2293.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-2289.0), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-2294.0), rectangle2D_Double0.getMinX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertTrue(rectangle0.equals((Object)rectangle1));
      assertTrue(rectangle1.equals((Object)rectangle0));
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(1, rectangle0.height);
      assertEquals((-2294), rectangle0.x);
      assertEquals(10, rectangle0.width);
      assertEquals((-2294), rectangle0.y);
      assertEquals((-2294), rectangle1.x);
      assertEquals((-2294), rectangle1.y);
      assertEquals(10, rectangle1.width);
      assertEquals(1, rectangle1.height);
      assertEquals(10.0, rectangle2D_Double0.width, 0.01);
      assertEquals(10.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-2294.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-2298.5), rectangle2D_Double0.y, 0.01);
      
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertNotNull(defaultKeyedValues2DDataset0);
      
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertFalse(multiplePiePlot0.isSubplot());
      assertTrue(multiplePiePlot0.isNotify());
      assertNotNull(multiplePiePlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertFalse(multiplePiePlot0.isSubplot());
      assertTrue(multiplePiePlot0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2456, (-1105), 32, (-1844), (-2294), (-158), false, false, true, true, false, false);
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertFalse(multiplePiePlot0.isSubplot());
      assertTrue(multiplePiePlot0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertEquals((-1844), chartPanel0.getMinimumDrawHeight());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(32, chartPanel0.getMinimumDrawWidth());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals((-2294), chartPanel0.getMaximumDrawWidth());
      assertEquals(750, chartPanel0.getInitialDelay());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertFalse(chartPanel0.isRangeZoomable());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertEquals((-158), chartPanel0.getMaximumDrawHeight());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertNotNull(chartPanel0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      
      Point2D point2D0 = chartPanel0.getAnchor();
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertFalse(multiplePiePlot0.isSubplot());
      assertTrue(multiplePiePlot0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertEquals((-1844), chartPanel0.getMinimumDrawHeight());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(32, chartPanel0.getMinimumDrawWidth());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals((-2294), chartPanel0.getMaximumDrawWidth());
      assertEquals(750, chartPanel0.getInitialDelay());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertFalse(chartPanel0.isRangeZoomable());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertEquals((-158), chartPanel0.getMaximumDrawHeight());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertNull(point2D0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      
      // Undeclared exception!
      try { 
        rectangle2D_Float0.setFrameFromCenter((Point2D) null, (Point2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setView((-719.1), 2.0, 0.0, 2.0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.getElementHinting());
      assertNotNull(jFreeChart0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 33);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(33, bufferedImage0.getTileHeight());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(33, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNotNull(bufferedImage0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      dialPlot0.hashCode();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ToolkitImage toolkitImage0 = (ToolkitImage)bufferedImage0.getScaledInstance(127, 2711, Integer.MAX_VALUE);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(33, bufferedImage0.getTileHeight());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(33, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, toolkitImage0.getAccelerationPriority(), 0.01F);
      assertNotNull(toolkitImage0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      jFreeChart0.setBackgroundImage(toolkitImage0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(33, bufferedImage0.getTileHeight());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(33, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, toolkitImage0.getAccelerationPriority(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      BufferedImage bufferedImage1 = jFreeChart0.createBufferedImage(10, 2711, (double) 1.0F, (-4984.5810345607), chartRenderingInfo0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(2711, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(2711, bufferedImage1.getHeight());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(0, bufferedImage1.getMinY());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(10, bufferedImage1.getWidth());
      assertEquals(10, bufferedImage1.getTileWidth());
      assertEquals(3, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(2, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertNotNull(bufferedImage1);
      assertFalse(bufferedImage1.equals((Object)bufferedImage0));
      assertNotSame(bufferedImage1, bufferedImage0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      BufferedImage bufferedImage2 = jFreeChart0.createBufferedImage(127, 10, (-719.1), (double) 127, chartRenderingInfo0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(10, bufferedImage2.getHeight());
      assertEquals(0, bufferedImage2.getMinTileX());
      assertEquals(10, bufferedImage2.getTileHeight());
      assertEquals(0, bufferedImage2.getMinX());
      assertEquals(1, bufferedImage2.getNumXTiles());
      assertEquals(127, bufferedImage2.getTileWidth());
      assertEquals(0, bufferedImage2.getTileGridXOffset());
      assertEquals(0, bufferedImage2.getMinY());
      assertEquals(127, bufferedImage2.getWidth());
      assertEquals(2, bufferedImage2.getType());
      assertTrue(bufferedImage2.hasTileWriters());
      assertEquals(1, bufferedImage2.getNumYTiles());
      assertEquals(0.5F, bufferedImage2.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage2.isAlphaPremultiplied());
      assertEquals(3, bufferedImage2.getTransparency());
      assertEquals(0, bufferedImage2.getTileGridYOffset());
      assertEquals(0, bufferedImage2.getMinTileY());
      assertNotNull(bufferedImage2);
      assertFalse(bufferedImage2.equals((Object)bufferedImage1));
      assertFalse(bufferedImage2.equals((Object)bufferedImage0));
      assertNotSame(bufferedImage2, bufferedImage1);
      assertNotSame(bufferedImage2, bufferedImage0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewWidth();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScale((-2624));
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage2.createGraphics();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(10, bufferedImage2.getHeight());
      assertEquals(0, bufferedImage2.getMinTileX());
      assertEquals(10, bufferedImage2.getTileHeight());
      assertEquals(0, bufferedImage2.getMinX());
      assertEquals(1, bufferedImage2.getNumXTiles());
      assertEquals(127, bufferedImage2.getTileWidth());
      assertEquals(0, bufferedImage2.getTileGridXOffset());
      assertEquals(0, bufferedImage2.getMinY());
      assertEquals(127, bufferedImage2.getWidth());
      assertEquals(2, bufferedImage2.getType());
      assertTrue(bufferedImage2.hasTileWriters());
      assertEquals(1, bufferedImage2.getNumYTiles());
      assertEquals(0.5F, bufferedImage2.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage2.isAlphaPremultiplied());
      assertEquals(3, bufferedImage2.getTransparency());
      assertEquals(0, bufferedImage2.getTileGridYOffset());
      assertEquals(0, bufferedImage2.getMinTileY());
      assertNotNull(sunGraphics2D0);
      assertFalse(bufferedImage2.equals((Object)bufferedImage1));
      assertFalse(bufferedImage2.equals((Object)bufferedImage0));
      assertNotSame(bufferedImage2, bufferedImage1);
      assertNotSame(bufferedImage2, bufferedImage0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      
      Rectangle2D rectangle2D0 = null;
      Point2D.Float point2D_Float0 = new Point2D.Float();
      assertNotNull(point2D_Float0);
      assertEquals(0.0F, point2D_Float0.x, 0.01F);
      assertEquals(0.0F, point2D_Float0.y, 0.01F);
      
      PlotState plotState0 = new PlotState();
      assertNotNull(plotState0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(1900);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1900, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int0 = 37;
      StandardDialScale standardDialScale0 = new StandardDialScale(10, 1.0F, 3107.2455194408494, 10, 1.0F, 37);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertNotNull(standardDialScale0);
      
      dialPlot0.setBackground(standardDialScale0);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setView((-931.795627), 1.0, 279.18714, (-310.303720853565));
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialCap dialCap0 = new DialCap();
      assertTrue(dialCap0.isVisible());
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertNotNull(dialCap0);
      
      boolean boolean0 = standardDialScale0.equals(dialCap0);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(dialCap0.isVisible());
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertFalse(boolean0);
      
      int int1 = 0;
      dialPlot0.mapDatasetToScale(0, (-484));
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewHeight();
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals((-310.303720853565), double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setBackgroundImageAlignment(10);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int2 = dialPlot0.getDatasetCount();
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0, int2);
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      standardDialScale0.setTickLabelOffset(0.0);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      
      double double1 = dialPlot0.getViewHeight();
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals((-310.303720853565), double1, 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertNotNull(jFreeChart0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      BasicStroke basicStroke0 = (BasicStroke)jFreeChart0.getBorderStroke();
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      standardDialScale0.setMinorTickStroke(basicStroke0);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      dialPlot0.addScale(32, standardDialScale0);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScale(453);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-635));
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.addScale(2048, standardDialScale0);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-931.795627), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-310.303720853565), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(10, dialPlot0.getBackgroundImageAlignment());
      assertEquals(279.18714, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(2048);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2048, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = dialPlot0.getChart();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(jFreeChart0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(750, chartPanel0.getInitialDelay());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isRangeZoomable());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertFalse(chartPanel0.isDomainZoomable());
      assertNotNull(chartPanel0);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      
      Color color0 = chartPanel0.getForeground();
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(750, chartPanel0.getInitialDelay());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isRangeZoomable());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(51, color0.getRed());
      assertEquals(51, color0.getBlue());
      assertEquals(51, color0.getGreen());
      assertEquals((-13421773), color0.getRGB());
      assertNotNull(color0);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      
      dialPlot0.setBackgroundPaint(color0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(750, chartPanel0.getInitialDelay());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isRangeZoomable());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(51, color0.getRed());
      assertEquals(51, color0.getBlue());
      assertEquals(51, color0.getGreen());
      assertEquals((-13421773), color0.getRGB());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      
      StandardDialScale standardDialScale0 = new StandardDialScale(10, 1.0F, 2641.588220622818, 10, 7257.58424637954, 10);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(2641.588220622818, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(7257.58424637954, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertNotNull(standardDialScale0);
      
      standardDialScale0.setTickLabelPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(2641.588220622818, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(7257.58424637954, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      standardDialScale0.setMinorTickStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(2641.588220622818, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(7257.58424637954, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setCap(standardDialScale0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(2641.588220622818, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(7257.58424637954, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setCap(standardDialScale0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(2641.588220622818, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(7257.58424637954, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertTrue(dialPointer_Pin0.isVisible());
      assertNotNull(dialPointer_Pin0);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) dialPointer_Pin0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(1727.6288553729266);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewWidth();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = dialPlot0.fetchElementHintingFlag();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertNotNull(standardDialScale0);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addScale(387, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      standardDialScale0.setMajorTickStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean1 = standardDialScale0.hasListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double1 = dialPlot0.getValue(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1727.6288553729266, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getLayerIndex(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addLayer(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double2 = dialPlot0.getViewHeight();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addScale(387, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = null;
      try {
        dialLayerChangeEvent0 = new DialLayerChangeEvent((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setView((-719.1), 2.0, 0.0, (-719.1));
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals((-719.1), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals((-719.1), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertNotNull(arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals((-719.1), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2711, (double) 1.0F, (-4984.581034561), chartRenderingInfo0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals((-719.1), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(2, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(2711, bufferedImage0.getHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(2711, bufferedImage0.getTileHeight());
      assertNotNull(bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      BufferedImage bufferedImage1 = jFreeChart0.createBufferedImage(10, 10);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals((-719.1), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(10, bufferedImage1.getTileWidth());
      assertEquals(10, bufferedImage1.getHeight());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(3, bufferedImage1.getTransparency());
      assertEquals(10, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(2, bufferedImage1.getType());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(10, bufferedImage1.getWidth());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertNotNull(bufferedImage1);
      assertFalse(bufferedImage1.equals((Object)bufferedImage0));
      assertNotSame(bufferedImage1, bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage1.createGraphics();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals((-719.1), dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(10, bufferedImage1.getTileWidth());
      assertEquals(10, bufferedImage1.getHeight());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(3, bufferedImage1.getTransparency());
      assertEquals(10, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(2, bufferedImage1.getType());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(10, bufferedImage1.getWidth());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertNotNull(sunGraphics2D0);
      assertFalse(bufferedImage1.equals((Object)bufferedImage0));
      assertNotSame(bufferedImage1, bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.renderHint);
      
      Point2D.Float point2D_Float0 = new Point2D.Float();
      assertNotNull(point2D_Float0);
      assertEquals(0.0F, point2D_Float0.x, 0.01F);
      assertEquals(0.0F, point2D_Float0.y, 0.01F);
      
      PlotState plotState0 = new PlotState();
      assertNotNull(plotState0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo1.getSubplotCount());
      assertNotNull(plotRenderingInfo1);
      assertSame(plotRenderingInfo1, plotRenderingInfo0);
      
      // Undeclared exception!
      try { 
        dialPlot0.draw(sunGraphics2D0, (Rectangle2D) null, point2D_Float0, plotState0, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      defaultValueDataset0.setNotify(true);
      assertTrue(defaultValueDataset0.getNotify());
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertNotNull(dialPointer_Pointer0);
      
      Color color0 = (Color)dialPointer_Pointer0.getOutlinePaint();
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0, color0.getBlue());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertNotNull(color0);
      
      dialPlot0.setBackgroundPaint(color0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0, color0.getBlue());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      System.setCurrentTimeMillis((-2880L));
      DialPointer.Pointer dialPointer_Pointer1 = new DialPointer.Pointer(10);
      assertTrue(dialPointer_Pointer1.isVisible());
      assertTrue(dialPointer_Pointer1.isClippedToWindow());
      assertEquals(10, dialPointer_Pointer1.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer1.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer1.getRadius(), 0.01);
      assertNotNull(dialPointer_Pointer1);
      assertFalse(dialPointer_Pointer1.equals((Object)dialPointer_Pointer0));
      
      dialPlot0.setCap(dialPointer_Pointer1);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPointer_Pointer1.isVisible());
      assertTrue(dialPointer_Pointer1.isClippedToWindow());
      assertEquals(10, dialPointer_Pointer1.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer1.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer1.getRadius(), 0.01);
      assertFalse(dialPointer_Pointer1.equals((Object)dialPointer_Pointer0));
      assertNotSame(dialPointer_Pointer1, dialPointer_Pointer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer.Pointer dialPointer_Pointer2 = (DialPointer.Pointer)dialPlot0.getCap();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(10, dialPointer_Pointer2.getDatasetIndex());
      assertTrue(dialPointer_Pointer2.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer2.getRadius(), 0.01);
      assertEquals(0.05, dialPointer_Pointer2.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer2.isVisible());
      assertNotNull(dialPointer_Pointer2);
      assertFalse(dialPointer_Pointer2.equals((Object)dialPointer_Pointer0));
      assertNotSame(dialPointer_Pointer2, dialPointer_Pointer0);
      assertSame(dialPointer_Pointer2, dialPointer_Pointer1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPointer_Pointer1.setRadius(3159.076556951);
      assertEquals(3159.076556951, dialPointer_Pointer1.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer1.isVisible());
      assertTrue(dialPointer_Pointer1.isClippedToWindow());
      assertEquals(10, dialPointer_Pointer1.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer1.getWidthRadius(), 0.01);
      assertFalse(dialPointer_Pointer1.equals((Object)dialPointer_Pointer0));
      assertNotSame(dialPointer_Pointer1, dialPointer_Pointer0);
      assertSame(dialPointer_Pointer1, dialPointer_Pointer2);
      
      // Undeclared exception!
      try { 
        dialPlot0.addScale(171, (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(1727.6288553729266);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewWidth();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = defaultValueDataset0.equals((Object) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(boolean0);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertNotNull(standardDialScale0);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addScale(387, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean1 = standardDialScale0.hasListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double1 = dialPlot0.getValue(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1727.6288553729266, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getLayerIndex(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addLayer(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = null;
      try {
        dialLayerChangeEvent0 = new DialLayerChangeEvent((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int0 = dialPlot0.getDatasetCount();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0, int0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Color color0 = new Color(21);
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(21, color0.getBlue());
      assertEquals((-16777195), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertNotNull(color0);
      
      dialPlot0.setNoDataMessagePaint(color0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(21, color0.getBlue());
      assertEquals((-16777195), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setView((-2267.8643851), (-3810.47), (-2267.8643851), 716.4172256);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-2267.8643851), dialPlot0.getViewWidth(), 0.01);
      assertEquals(716.4172256, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2267.8643851), dialPlot0.getViewX(), 0.01);
      assertEquals((-3810.47), dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewY();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-2267.8643851), dialPlot0.getViewWidth(), 0.01);
      assertEquals(716.4172256, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2267.8643851), dialPlot0.getViewX(), 0.01);
      assertEquals((-3810.47), dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals((-3810.47), double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int1 = dialPlot0.getDatasetCount();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-2267.8643851), dialPlot0.getViewWidth(), 0.01);
      assertEquals(716.4172256, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2267.8643851), dialPlot0.getViewX(), 0.01);
      assertEquals((-3810.47), dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0, int1);
      assertTrue(int1 == int0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertNotNull(dialPointer_Pointer0);
      
      dialPointer_Pointer0.setFillPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-2267.8643851), dialPlot0.getViewWidth(), 0.01);
      assertEquals(716.4172256, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2267.8643851), dialPlot0.getViewX(), 0.01);
      assertEquals((-3810.47), dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPointer_Pointer0.setFillPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-2267.8643851), dialPlot0.getViewWidth(), 0.01);
      assertEquals(716.4172256, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2267.8643851), dialPlot0.getViewX(), 0.01);
      assertEquals((-3810.47), dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPointer_Pointer0.addChangeListener(dialPlot0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-2267.8643851), dialPlot0.getViewWidth(), 0.01);
      assertEquals(716.4172256, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2267.8643851), dialPlot0.getViewX(), 0.01);
      assertEquals((-3810.47), dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) dialPointer_Pointer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(1727.6288553729266);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewWidth();
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = defaultValueDataset0.equals((Object) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(boolean0);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertNotNull(standardDialScale0);
      
      DialPlot dialPlot1 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot1.getNoDataMessage());
      assertFalse(dialPlot1.isSubplot());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertTrue(dialPlot1.isOutlineVisible());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      standardDialScale0.addChangeListener(dialPlot1);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot1.getNoDataMessage());
      assertFalse(dialPlot1.isSubplot());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertTrue(dialPlot1.isOutlineVisible());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialScale0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addScale(387, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean1 = standardDialScale0.hasListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(boolean1);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertFalse(boolean1 == boolean0);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double1 = dialPlot0.getValue(32);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getLayerIndex(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0, int0);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addLayer(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = null;
      try {
        dialLayerChangeEvent0 = new DialLayerChangeEvent((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialCap dialCap0 = new DialCap();
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertNotNull(dialCap0);
      
      dialCap0.setOutlinePaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setCap(dialCap0);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialCap0.setOutlinePaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(364.0184278739716, 1.0F, 0.08, 1.0F);
      assertEquals(364.09842787397156, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(364.0184278739716, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(2.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1.5, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(364.0584278739716, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.getMinY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(364.0184278739716, rectangle2D_Double0.x, 0.01);
      assertEquals(0.08, rectangle2D_Double0.width, 0.01);
      assertEquals(1.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1.0, rectangle2D_Double0.height, 0.01);
      
      LegendTitle legendTitle0 = new LegendTitle(dialPlot0);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertNotNull(legendTitle0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertFalse(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertNotNull(chartPanel0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertFalse(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertNotNull(chartRenderingInfo0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(843, 10, chartRenderingInfo0);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertFalse(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(843, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(843, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertNotNull(bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      
      FontMetrics fontMetrics0 = chartPanel0.getFontMetrics(jFreeChart0.DEFAULT_TITLE_FONT);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertFalse(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(17, fontMetrics0.getMaxAscent());
      assertEquals(5, fontMetrics0.getMaxDecent());
      assertFalse(fontMetrics0.hasUniformLineMetrics());
      assertEquals(5, fontMetrics0.getMaxDescent());
      assertNotNull(fontMetrics0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertFalse(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(843, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(843, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertNotNull(sunGraphics2D0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      
      jFreeChart0.addProgressListener(chartPanel0);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertFalse(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      
      Size2D size2D0 = legendTitle0.arrange((Graphics2D) sunGraphics2D0, (RectangleConstraint) null);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(chartPanel0.isFocusTraversalPolicySet());
      assertEquals(300, chartPanel0.getMinimumDrawWidth());
      assertFalse(chartPanel0.getZoomAroundAnchor());
      assertFalse(chartPanel0.getRefreshBuffer());
      assertFalse(chartPanel0.isFocusCycleRoot());
      assertFalse(chartPanel0.isMouseWheelEnabled());
      assertTrue(chartPanel0.getFillZoomRectangle());
      assertFalse(chartPanel0.isRangeZoomable());
      assertEquals(768, chartPanel0.getMaximumDrawHeight());
      assertEquals(0.0, chartPanel0.getScaleY(), 0.01);
      assertFalse(chartPanel0.isDomainZoomable());
      assertEquals(0.0, chartPanel0.getScaleX(), 0.01);
      assertEquals(4000, chartPanel0.getDismissDelay());
      assertTrue(chartPanel0.getFocusTraversalKeysEnabled());
      assertEquals(1024, chartPanel0.getMaximumDrawWidth());
      assertEquals(10, chartPanel0.getZoomTriggerDistance());
      assertTrue(chartPanel0.isEnforceFileExtensions());
      assertFalse(chartPanel0.isFocusTraversalPolicyProvider());
      assertEquals(200, chartPanel0.getMinimumDrawHeight());
      assertFalse(chartPanel0.getIgnoreRepaint());
      assertEquals(2.0, chartPanel0.getZoomOutFactor(), 0.01);
      assertEquals(750, chartPanel0.getInitialDelay());
      assertEquals(500, chartPanel0.getReshowDelay());
      assertEquals(0.5, chartPanel0.getZoomInFactor(), 0.01);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(843, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(843, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
      assertNotNull(size2D0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(10, ChartPanel.DEFAULT_ZOOM_TRIGGER_DISTANCE);
      assertEquals(768, ChartPanel.DEFAULT_HEIGHT);
      assertEquals(768, ChartPanel.DEFAULT_MAXIMUM_DRAW_HEIGHT);
      assertEquals(300, ChartPanel.DEFAULT_MINIMUM_DRAW_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_WIDTH);
      assertEquals(1024, ChartPanel.DEFAULT_MAXIMUM_DRAW_WIDTH);
      assertEquals(200, ChartPanel.DEFAULT_MINIMUM_DRAW_HEIGHT);
      assertTrue(ChartPanel.DEFAULT_BUFFER_USED);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals(0.0, size2D0.width, 0.01);
      
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)legendTitle0.getBounds();
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Float0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createUnion(rectangle2D_Float0);
      assertEquals(1.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(364.09842787397156, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(2.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(182.04921393698578, rectangle2D_Double1.getCenterX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(364.09842787397156, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(364.0184278739716, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(2.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1.5, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(364.0584278739716, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertEquals(2.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(364.09842787397156, rectangle2D_Double1.width, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(364.0184278739716, rectangle2D_Double0.x, 0.01);
      assertEquals(0.08, rectangle2D_Double0.width, 0.01);
      assertEquals(1.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1.0, rectangle2D_Double0.height, 0.01);
      assertTrue(legendTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, 0.08, 0.08);
      assertEquals(1.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(364.09842787397156, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(2.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(182.04921393698578, rectangle2D_Double1.getCenterX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(182.04921393698578, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(167.48527682202692, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.92, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(1.08, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(196.61315105194464, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(364.09842787397156, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(364.0184278739716, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(2.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1.5, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(364.0584278739716, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertEquals(2.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(364.09842787397156, rectangle2D_Double1.width, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(167.48527682202692, rectangle2D_Double2.x, 0.01);
      assertEquals(0.16, rectangle2D_Double2.height, 0.01);
      assertEquals(29.127874229917726, rectangle2D_Double2.width, 0.01);
      assertEquals(0.92, rectangle2D_Double2.y, 0.01);
      assertEquals(364.0184278739716, rectangle2D_Double0.x, 0.01);
      assertEquals(0.08, rectangle2D_Double0.width, 0.01);
      assertEquals(1.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1.0, rectangle2D_Double0.height, 0.01);
      assertTrue(legendTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        legendTitle0.DEFAULT_ITEM_FONT.getStringBounds(";mU20pr1V{D#K'G=", (-3255), 1024, fontRenderContext0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setView((-719.1), 2.0, 0.0, 2.0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertFalse(jFreeChart0.getElementHinting());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      dialPlot0.hashCode();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      int int0 = dialPlot0.getLayerIndex(arcDialFrame0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-1), int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      Point2D.Float point2D_Float0 = new Point2D.Float();
      assertNotNull(point2D_Float0);
      assertEquals(0.0F, point2D_Float0.x, 0.01F);
      assertEquals(0.0F, point2D_Float0.y, 0.01F);
      
      PlotState plotState0 = new PlotState();
      assertNotNull(plotState0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialLayer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset(328);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(valueDataset0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.hashCode();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      System.setCurrentTimeMillis(0L);
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)dialPlot0.getBackground();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertNotNull(arcDialFrame1);
      assertSame(arcDialFrame1, arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals(8.0, rectangle2D_Double1.width, 0.01);
      assertEquals(8.0, rectangle2D_Double1.height, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.x, 0.01);
      
      rectangle2D_Double1.width = (-1.0);
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals((-5.0), rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals((-4.5), rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxY(), 0.01);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, (-2648.7), (-2648.7));
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals((-5.0), rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals((-4.5), rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-4.5), rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(1319.85, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals((-10594.8), rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(10594.8, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals((-1328.85), rectangle2D_Double2.getMinX(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-1.0), rectangle2D_Double1.width, 0.01);
      assertEquals(8.0, rectangle2D_Double1.height, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.x, 0.01);
      assertEquals((-21189.6), rectangle2D_Double2.height, 0.01);
      assertEquals(2648.7, rectangle2D_Double2.width, 0.01);
      assertEquals(10594.8, rectangle2D_Double2.y, 0.01);
      assertEquals((-1328.85), rectangle2D_Double2.x, 0.01);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1407.9432336497186));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertNotNull(dialPointer_Pointer0);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = new DialLayerChangeEvent(dialPointer_Pointer0);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertNotNull(dialLayerChangeEvent0);
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPointer_Pointer0.setWidthRadius((-2648.7));
      assertEquals((-2648.7), dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialLayer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-2648.7), dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(0, combinedDomainXYPlot0.getRendererCount());
      assertEquals(0, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(SeriesRenderingOrder.REVERSE, combinedDomainXYPlot0.getSeriesRenderingOrder());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, combinedDomainXYPlot0.getDomainAxisLocation());
      assertEquals(PlotOrientation.VERTICAL, combinedDomainXYPlot0.getOrientation());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.fetchElementHintingFlag());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, combinedDomainXYPlot0.getDatasetRenderingOrder());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, combinedDomainXYPlot0.getDatasetCount());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, combinedDomainXYPlot0.getRangeAxisLocation());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertNotNull(combinedDomainXYPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      Paint paint0 = combinedDomainXYPlot0.getRangeTickBandPaint();
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertEquals(0, combinedDomainXYPlot0.getRendererCount());
      assertEquals(0, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(SeriesRenderingOrder.REVERSE, combinedDomainXYPlot0.getSeriesRenderingOrder());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, combinedDomainXYPlot0.getDomainAxisLocation());
      assertEquals(PlotOrientation.VERTICAL, combinedDomainXYPlot0.getOrientation());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.fetchElementHintingFlag());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, combinedDomainXYPlot0.getDatasetRenderingOrder());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, combinedDomainXYPlot0.getDatasetCount());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, combinedDomainXYPlot0.getRangeAxisLocation());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertNull(paint0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setOutlinePaint((Paint) null);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(836);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialScale dialScale1 = dialPlot0.getScale((-1678));
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialScale1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setView(1.0F, 2.0, 0.0, (-867.3632223256756));
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-867.3632223256756), dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertNotNull(dialPointer_Pointer0);
      
      dialPointer_Pointer0.datasetIndex = (-1678);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals((-1678), dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      
      dialPlot0.addPointer(dialPointer_Pointer0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-867.3632223256756), dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals((-1678), dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      int int0 = dialPlot0.getPointerIndex(dialPointer_Pointer0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-867.3632223256756), dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals((-1678), dialPointer_Pointer0.getDatasetIndex());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewX();
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-867.3632223256756), dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      assertFalse(font0.isBold());
      assertTrue(font0.isPlain());
      assertFalse(font0.isItalic());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.hasUniformLineMetrics());
      assertNotNull(font0);
      
      JFreeChart jFreeChart0 = new JFreeChart("Wt7=g", font0, dialPlot0, false);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-867.3632223256756), dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(font0.isBold());
      assertTrue(font0.isPlain());
      assertFalse(font0.isItalic());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(entityCollection0);
      assertNotNull(chartRenderingInfo0);
      
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 422, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1915, 360, 0.0, 1.0F, 10, 1915);
      assertEquals(1915.0, defaultHeatMapDataset0.getMaximumYValue(), 0.01);
      assertTrue(defaultHeatMapDataset0.getNotify());
      assertEquals(0.0, defaultHeatMapDataset0.getMinimumXValue(), 0.01);
      assertEquals(10.0, defaultHeatMapDataset0.getMinimumYValue(), 0.01);
      assertEquals(1915, defaultHeatMapDataset0.getXSampleCount());
      assertEquals(360, defaultHeatMapDataset0.getYSampleCount());
      assertEquals(1.0, defaultHeatMapDataset0.getMaximumXValue(), 0.01);
      assertNotNull(defaultHeatMapDataset0);
      
      DatasetGroup datasetGroup0 = defaultHeatMapDataset0.getGroup();
      assertEquals(1915.0, defaultHeatMapDataset0.getMaximumYValue(), 0.01);
      assertTrue(defaultHeatMapDataset0.getNotify());
      assertEquals(0.0, defaultHeatMapDataset0.getMinimumXValue(), 0.01);
      assertEquals(10.0, defaultHeatMapDataset0.getMinimumYValue(), 0.01);
      assertEquals(1915, defaultHeatMapDataset0.getXSampleCount());
      assertEquals(360, defaultHeatMapDataset0.getYSampleCount());
      assertEquals(1.0, defaultHeatMapDataset0.getMaximumXValue(), 0.01);
      assertEquals("NOID", datasetGroup0.getID());
      assertNotNull(datasetGroup0);
      
      DatasetGroup datasetGroup1 = (DatasetGroup)datasetGroup0.clone();
      assertEquals(1915.0, defaultHeatMapDataset0.getMaximumYValue(), 0.01);
      assertTrue(defaultHeatMapDataset0.getNotify());
      assertEquals(0.0, defaultHeatMapDataset0.getMinimumXValue(), 0.01);
      assertEquals(10.0, defaultHeatMapDataset0.getMinimumYValue(), 0.01);
      assertEquals(1915, defaultHeatMapDataset0.getXSampleCount());
      assertEquals(360, defaultHeatMapDataset0.getYSampleCount());
      assertEquals(1.0, defaultHeatMapDataset0.getMaximumXValue(), 0.01);
      assertEquals("NOID", datasetGroup0.getID());
      assertEquals("NOID", datasetGroup1.getID());
      assertNotNull(datasetGroup1);
      assertTrue(datasetGroup1.equals((Object)datasetGroup0));
      assertNotSame(datasetGroup0, datasetGroup1);
      assertNotSame(datasetGroup1, datasetGroup0);
      
      defaultValueDataset0.setGroup(datasetGroup0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1915.0, defaultHeatMapDataset0.getMaximumYValue(), 0.01);
      assertTrue(defaultHeatMapDataset0.getNotify());
      assertEquals(0.0, defaultHeatMapDataset0.getMinimumXValue(), 0.01);
      assertEquals(10.0, defaultHeatMapDataset0.getMinimumYValue(), 0.01);
      assertEquals(1915, defaultHeatMapDataset0.getXSampleCount());
      assertEquals(360, defaultHeatMapDataset0.getYSampleCount());
      assertEquals(1.0, defaultHeatMapDataset0.getMaximumXValue(), 0.01);
      assertEquals("NOID", datasetGroup0.getID());
      assertTrue(datasetGroup0.equals((Object)datasetGroup1));
      assertNotSame(datasetGroup0, datasetGroup1);
      
      Range range0 = ValueAxis.DEFAULT_RANGE;
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertNotNull(range0);
      
      ModuloAxis moduloAxis0 = new ModuloAxis("yJ,4d|^f_^rG", range0);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.0, moduloAxis0.getLowerBound(), 0.01);
      assertFalse(moduloAxis0.isPositiveArrowVisible());
      assertTrue(moduloAxis0.isAutoRange());
      assertFalse(moduloAxis0.isMinorTickMarksVisible());
      assertFalse(moduloAxis0.isNegativeArrowVisible());
      assertEquals(90.0, moduloAxis0.getDisplayEnd(), 0.01);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0E-8, moduloAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(moduloAxis0.getAutoRangeIncludesZero());
      assertEquals(AxisLabelLocation.MIDDLE, moduloAxis0.getLabelLocation());
      assertEquals(0.0, moduloAxis0.getFixedDimension(), 0.01);
      assertTrue(moduloAxis0.isAxisLineVisible());
      assertTrue(moduloAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, moduloAxis0.getLabelAngle(), 0.01);
      assertEquals(270.0, moduloAxis0.getDisplayStart(), 0.01);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
      assertEquals("yJ,4d|^f_^rG", moduloAxis0.getLabel());
      assertTrue(moduloAxis0.isTickMarksVisible());
      assertTrue(moduloAxis0.isTickLabelsVisible());
      assertEquals(2.0F, moduloAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, moduloAxis0.getUpperBound(), 0.01);
      assertFalse(moduloAxis0.isVerticalTickLabels());
      assertTrue(moduloAxis0.isVisible());
      assertTrue(moduloAxis0.getAutoRangeStickyZero());
      assertEquals(0.05, moduloAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0, moduloAxis0.getFixedAutoRange(), 0.01);
      assertEquals(2.0F, moduloAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(moduloAxis0.isInverted());
      assertEquals(0.0F, moduloAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, moduloAxis0.getMinorTickCount());
      assertEquals(RangeType.FULL, moduloAxis0.getRangeType());
      assertNotNull(moduloAxis0);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(moduloAxis0);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.0, moduloAxis0.getLowerBound(), 0.01);
      assertFalse(moduloAxis0.isPositiveArrowVisible());
      assertTrue(moduloAxis0.isAutoRange());
      assertFalse(moduloAxis0.isMinorTickMarksVisible());
      assertFalse(moduloAxis0.isNegativeArrowVisible());
      assertEquals(90.0, moduloAxis0.getDisplayEnd(), 0.01);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0E-8, moduloAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(moduloAxis0.getAutoRangeIncludesZero());
      assertEquals(AxisLabelLocation.MIDDLE, moduloAxis0.getLabelLocation());
      assertEquals(0.0, moduloAxis0.getFixedDimension(), 0.01);
      assertTrue(moduloAxis0.isAxisLineVisible());
      assertTrue(moduloAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, moduloAxis0.getLabelAngle(), 0.01);
      assertEquals(270.0, moduloAxis0.getDisplayStart(), 0.01);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
      assertEquals("yJ,4d|^f_^rG", moduloAxis0.getLabel());
      assertTrue(moduloAxis0.isTickMarksVisible());
      assertTrue(moduloAxis0.isTickLabelsVisible());
      assertEquals(2.0F, moduloAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, moduloAxis0.getUpperBound(), 0.01);
      assertFalse(moduloAxis0.isVerticalTickLabels());
      assertTrue(moduloAxis0.isVisible());
      assertTrue(moduloAxis0.getAutoRangeStickyZero());
      assertEquals(0.05, moduloAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0, moduloAxis0.getFixedAutoRange(), 0.01);
      assertEquals(2.0F, moduloAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(moduloAxis0.isInverted());
      assertEquals(0.0F, moduloAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, moduloAxis0.getMinorTickCount());
      assertEquals(RangeType.FULL, moduloAxis0.getRangeType());
      assertEquals(ChartChangeEventType.GENERAL, axisChangeEvent0.getType());
      assertNotNull(axisChangeEvent0);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertNotNull(defaultKeyedValues2DDataset0);
      
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertFalse(multiplePiePlot0.isSubplot());
      assertNotNull(multiplePiePlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertFalse(multiplePiePlot0.isSubplot());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNotNull(jFreeChart0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      axisChangeEvent0.setChart(jFreeChart0);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.0, moduloAxis0.getLowerBound(), 0.01);
      assertFalse(moduloAxis0.isPositiveArrowVisible());
      assertTrue(moduloAxis0.isAutoRange());
      assertFalse(moduloAxis0.isMinorTickMarksVisible());
      assertFalse(moduloAxis0.isNegativeArrowVisible());
      assertEquals(90.0, moduloAxis0.getDisplayEnd(), 0.01);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0E-8, moduloAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(moduloAxis0.getAutoRangeIncludesZero());
      assertEquals(AxisLabelLocation.MIDDLE, moduloAxis0.getLabelLocation());
      assertEquals(0.0, moduloAxis0.getFixedDimension(), 0.01);
      assertTrue(moduloAxis0.isAxisLineVisible());
      assertTrue(moduloAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, moduloAxis0.getLabelAngle(), 0.01);
      assertEquals(270.0, moduloAxis0.getDisplayStart(), 0.01);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
      assertEquals("yJ,4d|^f_^rG", moduloAxis0.getLabel());
      assertTrue(moduloAxis0.isTickMarksVisible());
      assertTrue(moduloAxis0.isTickLabelsVisible());
      assertEquals(2.0F, moduloAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, moduloAxis0.getUpperBound(), 0.01);
      assertFalse(moduloAxis0.isVerticalTickLabels());
      assertTrue(moduloAxis0.isVisible());
      assertTrue(moduloAxis0.getAutoRangeStickyZero());
      assertEquals(0.05, moduloAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0, moduloAxis0.getFixedAutoRange(), 0.01);
      assertEquals(2.0F, moduloAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(moduloAxis0.isInverted());
      assertEquals(0.0F, moduloAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, moduloAxis0.getMinorTickCount());
      assertEquals(RangeType.FULL, moduloAxis0.getRangeType());
      assertEquals(ChartChangeEventType.GENERAL, axisChangeEvent0.getType());
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertFalse(multiplePiePlot0.isSubplot());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      dialPlot0.axisChanged(axisChangeEvent0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.0, moduloAxis0.getLowerBound(), 0.01);
      assertFalse(moduloAxis0.isPositiveArrowVisible());
      assertTrue(moduloAxis0.isAutoRange());
      assertFalse(moduloAxis0.isMinorTickMarksVisible());
      assertFalse(moduloAxis0.isNegativeArrowVisible());
      assertEquals(90.0, moduloAxis0.getDisplayEnd(), 0.01);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0E-8, moduloAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(moduloAxis0.getAutoRangeIncludesZero());
      assertEquals(AxisLabelLocation.MIDDLE, moduloAxis0.getLabelLocation());
      assertEquals(0.0, moduloAxis0.getFixedDimension(), 0.01);
      assertTrue(moduloAxis0.isAxisLineVisible());
      assertTrue(moduloAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, moduloAxis0.getLabelAngle(), 0.01);
      assertEquals(270.0, moduloAxis0.getDisplayStart(), 0.01);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
      assertEquals("yJ,4d|^f_^rG", moduloAxis0.getLabel());
      assertTrue(moduloAxis0.isTickMarksVisible());
      assertTrue(moduloAxis0.isTickLabelsVisible());
      assertEquals(2.0F, moduloAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, moduloAxis0.getUpperBound(), 0.01);
      assertFalse(moduloAxis0.isVerticalTickLabels());
      assertTrue(moduloAxis0.isVisible());
      assertTrue(moduloAxis0.getAutoRangeStickyZero());
      assertEquals(0.05, moduloAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0, moduloAxis0.getFixedAutoRange(), 0.01);
      assertEquals(2.0F, moduloAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(moduloAxis0.isInverted());
      assertEquals(0.0F, moduloAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, moduloAxis0.getMinorTickCount());
      assertEquals(RangeType.FULL, moduloAxis0.getRangeType());
      assertEquals(ChartChangeEventType.GENERAL, axisChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      
      dialPlot0.setDataset(1336, (ValueDataset) defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialBackground dialBackground0 = new DialBackground(moduloAxis0.DEFAULT_AXIS_LABEL_PAINT);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.0, moduloAxis0.getLowerBound(), 0.01);
      assertFalse(moduloAxis0.isPositiveArrowVisible());
      assertTrue(moduloAxis0.isAutoRange());
      assertFalse(moduloAxis0.isMinorTickMarksVisible());
      assertFalse(moduloAxis0.isNegativeArrowVisible());
      assertEquals(90.0, moduloAxis0.getDisplayEnd(), 0.01);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0E-8, moduloAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(moduloAxis0.getAutoRangeIncludesZero());
      assertEquals(AxisLabelLocation.MIDDLE, moduloAxis0.getLabelLocation());
      assertEquals(0.0, moduloAxis0.getFixedDimension(), 0.01);
      assertTrue(moduloAxis0.isAxisLineVisible());
      assertTrue(moduloAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, moduloAxis0.getLabelAngle(), 0.01);
      assertEquals(270.0, moduloAxis0.getDisplayStart(), 0.01);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
      assertEquals("yJ,4d|^f_^rG", moduloAxis0.getLabel());
      assertTrue(moduloAxis0.isTickMarksVisible());
      assertTrue(moduloAxis0.isTickLabelsVisible());
      assertEquals(2.0F, moduloAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, moduloAxis0.getUpperBound(), 0.01);
      assertFalse(moduloAxis0.isVerticalTickLabels());
      assertTrue(moduloAxis0.isVisible());
      assertTrue(moduloAxis0.getAutoRangeStickyZero());
      assertEquals(0.05, moduloAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0, moduloAxis0.getFixedAutoRange(), 0.01);
      assertEquals(2.0F, moduloAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(moduloAxis0.isInverted());
      assertEquals(0.0F, moduloAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, moduloAxis0.getMinorTickCount());
      assertEquals(RangeType.FULL, moduloAxis0.getRangeType());
      assertTrue(dialBackground0.isVisible());
      assertTrue(dialBackground0.isClippedToWindow());
      assertNotNull(dialBackground0);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      
      dialPlot0.addLayer(dialBackground0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.0, moduloAxis0.getLowerBound(), 0.01);
      assertFalse(moduloAxis0.isPositiveArrowVisible());
      assertTrue(moduloAxis0.isAutoRange());
      assertFalse(moduloAxis0.isMinorTickMarksVisible());
      assertFalse(moduloAxis0.isNegativeArrowVisible());
      assertEquals(90.0, moduloAxis0.getDisplayEnd(), 0.01);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0E-8, moduloAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(moduloAxis0.getAutoRangeIncludesZero());
      assertEquals(AxisLabelLocation.MIDDLE, moduloAxis0.getLabelLocation());
      assertEquals(0.0, moduloAxis0.getFixedDimension(), 0.01);
      assertTrue(moduloAxis0.isAxisLineVisible());
      assertTrue(moduloAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, moduloAxis0.getLabelAngle(), 0.01);
      assertEquals(270.0, moduloAxis0.getDisplayStart(), 0.01);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
      assertEquals("yJ,4d|^f_^rG", moduloAxis0.getLabel());
      assertTrue(moduloAxis0.isTickMarksVisible());
      assertTrue(moduloAxis0.isTickLabelsVisible());
      assertEquals(2.0F, moduloAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, moduloAxis0.getUpperBound(), 0.01);
      assertFalse(moduloAxis0.isVerticalTickLabels());
      assertTrue(moduloAxis0.isVisible());
      assertTrue(moduloAxis0.getAutoRangeStickyZero());
      assertEquals(0.05, moduloAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0, moduloAxis0.getFixedAutoRange(), 0.01);
      assertEquals(2.0F, moduloAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(moduloAxis0.isInverted());
      assertEquals(0.0F, moduloAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, moduloAxis0.getMinorTickCount());
      assertEquals(RangeType.FULL, moduloAxis0.getRangeType());
      assertTrue(dialBackground0.isVisible());
      assertTrue(dialBackground0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(14.0, 0.05);
      assertEquals(0.05, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(14.0, arcDialFrame0.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame0);
      
      boolean boolean0 = defaultValueDataset0.equals(arcDialFrame0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.05, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(14.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(boolean0);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialLayer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.removeLayer((DialLayer) dialBackground0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.0, moduloAxis0.getLowerBound(), 0.01);
      assertFalse(moduloAxis0.isPositiveArrowVisible());
      assertTrue(moduloAxis0.isAutoRange());
      assertFalse(moduloAxis0.isMinorTickMarksVisible());
      assertFalse(moduloAxis0.isNegativeArrowVisible());
      assertEquals(90.0, moduloAxis0.getDisplayEnd(), 0.01);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0E-8, moduloAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(moduloAxis0.getAutoRangeIncludesZero());
      assertEquals(AxisLabelLocation.MIDDLE, moduloAxis0.getLabelLocation());
      assertEquals(0.0, moduloAxis0.getFixedDimension(), 0.01);
      assertTrue(moduloAxis0.isAxisLineVisible());
      assertTrue(moduloAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, moduloAxis0.getLabelAngle(), 0.01);
      assertEquals(270.0, moduloAxis0.getDisplayStart(), 0.01);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
      assertEquals("yJ,4d|^f_^rG", moduloAxis0.getLabel());
      assertTrue(moduloAxis0.isTickMarksVisible());
      assertTrue(moduloAxis0.isTickLabelsVisible());
      assertEquals(2.0F, moduloAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(1.0, moduloAxis0.getUpperBound(), 0.01);
      assertFalse(moduloAxis0.isVerticalTickLabels());
      assertTrue(moduloAxis0.isVisible());
      assertTrue(moduloAxis0.getAutoRangeStickyZero());
      assertEquals(0.05, moduloAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0, moduloAxis0.getFixedAutoRange(), 0.01);
      assertEquals(2.0F, moduloAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(moduloAxis0.isInverted());
      assertEquals(0.0F, moduloAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0, moduloAxis0.getMinorTickCount());
      assertEquals(RangeType.FULL, moduloAxis0.getRangeType());
      assertTrue(dialBackground0.isVisible());
      assertTrue(dialBackground0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)dialPlot0.getDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertSame(defaultValueDataset1, defaultValueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewY();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getDatasetCount();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialBackground dialBackground0 = new DialBackground();
      assertTrue(dialBackground0.isVisible());
      assertTrue(dialBackground0.isClippedToWindow());
      assertNotNull(dialBackground0);
      
      int int1 = dialPlot0.getLayerIndex(dialBackground0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialBackground0.isVisible());
      assertTrue(dialBackground0.isClippedToWindow());
      assertEquals((-1), int1);
      assertFalse(int1 == int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertTrue(dialValueIndicator0.isVisible());
      assertNotNull(dialValueIndicator0);
      
      dialValueIndicator0.setOutlineStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertTrue(dialValueIndicator0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = dialPlot0.equals(dialValueIndicator0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertTrue(dialValueIndicator0.isVisible());
      assertFalse(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertNotNull(dialPointer_Pin0);
      
      dialPointer_Pin0.removeChangeListener(dialPlot0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int2 = dialPlot0.getPointerIndex(dialPointer_Pin0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals((-1), int2);
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertNotNull(standardDialScale0);
      
      dialPlot0.addScale(37, standardDialScale0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addPointer(dialPointer_Pin0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = new DialLayerChangeEvent(dialPointer_Pin0);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertNotNull(dialLayerChangeEvent0);
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayerChangeEvent dialLayerChangeEvent1 = new DialLayerChangeEvent(dialPointer_Pin0);
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent1.getType());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertNotNull(dialLayerChangeEvent1);
      assertFalse(dialLayerChangeEvent1.equals((Object)dialLayerChangeEvent0));
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent1);
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent1.getType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertFalse(dialLayerChangeEvent1.equals((Object)dialLayerChangeEvent0));
      assertNotSame(dialLayerChangeEvent1, dialLayerChangeEvent0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int3 = dialPlot0.getPointerIndex(dialPointer_Pin0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0, int3);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertTrue(int3 == int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int4 = dialPlot0.getLayerIndex(dialValueIndicator0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertTrue(dialValueIndicator0.isVisible());
      assertEquals((-1), int4);
      assertTrue(int4 == int1);
      assertFalse(int4 == int0);
      assertTrue(int4 == int2);
      assertFalse(int4 == int3);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals(8.0, rectangle2D_Double1.height, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.x, 0.01);
      assertEquals(8.0, rectangle2D_Double1.width, 0.01);
      
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D_Double1);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals(8.0, rectangle2D_Double1.height, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.x, 0.01);
      assertEquals(8.0, rectangle2D_Double1.width, 0.01);
      
      dialPlot0.setDialFrame(arcDialFrame0);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setDialFrame(arcDialFrame0);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(10);
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertNotNull(dialPointer_Pin0);
      
      boolean boolean0 = dialPointer_Pin0.equals(dialPlot0);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertFalse(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPointer_Pin0.datasetIndex = 10;
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      
      JFreeChart jFreeChart0 = dialPlot0.getChart();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setChart((JFreeChart) null);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialPointer.Pin dialPointer_Pin1 = (DialPointer.Pin)dialPointer_Pin0.clone();
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertEquals(10, dialPointer_Pin1.getDatasetIndex());
      assertTrue(dialPointer_Pin1.isVisible());
      assertTrue(dialPointer_Pin1.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin1.getRadius(), 0.01);
      assertNotNull(dialPointer_Pin1);
      assertTrue(dialPointer_Pin1.equals((Object)dialPointer_Pin0));
      assertNotSame(dialPointer_Pin0, dialPointer_Pin1);
      assertNotSame(dialPointer_Pin1, dialPointer_Pin0);
      
      dialPlot0.addPointer(dialPointer_Pin0);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.equals((Object)dialPointer_Pin1));
      assertNotSame(dialPointer_Pin0, dialPointer_Pin1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      double double0 = (-579.982);
      ArcDialFrame arcDialFrame1 = new ArcDialFrame((-579.982), 1.0F);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals((-579.982), arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertNotNull(arcDialFrame1);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      
      boolean boolean1 = dialPlot0.equals(arcDialFrame1);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals((-579.982), arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(20);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPointer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      // Undeclared exception!
      try { 
        DialPlot.rectangleByRadius((Rectangle2D) null, 1.0F, 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewWidth();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertNotNull(dialPointer_Pin0);
      
      dialPlot0.addPointer(dialPointer_Pin0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(dialPlot0, (Dataset) null);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNotNull(datasetChangeEvent0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-1257));
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertNotNull(standardDialScale0);
      
      // Undeclared exception!
      try { 
        dialPlot0.addScale((-1743), standardDialScale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialLayer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int0 = (-2377);
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((-2377));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(7.2E7);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      defaultValueDataset0.setNotify(false);
      assertFalse(defaultValueDataset0.getNotify());
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2920.0F, 1.0F, 10, 2920.0F);
      assertEquals(2930.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(2920.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(1461.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(2925.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(2921.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Float0);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(10.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.x, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Float0, 2920.0F, 7.2E7);
      assertEquals(2930.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(2920.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(1461.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(2925.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(2921.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-1.05119998539E11), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1461.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-11675.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(17525.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(2925.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1.05120001461E11, rectangle2D_Double0.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(10.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(2.1024E11, rectangle2D_Double0.height, 0.01);
      assertEquals(29200.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-11675.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-1.05119998539E11), rectangle2D_Double0.y, 0.01);
      
      defaultValueDataset0.addChangeListener(dialPlot0);
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Float0.createIntersection(rectangle2D_Double0);
      assertEquals(2930.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(2920.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(1461.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(2925.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(2921.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-1.05119998539E11), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1461.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-11675.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(17525.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(2925.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1.05120001461E11, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(2921.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(1461.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(2930.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(2920.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(2925.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(10.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(2.1024E11, rectangle2D_Double0.height, 0.01);
      assertEquals(29200.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-11675.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-1.05119998539E11), rectangle2D_Double0.y, 0.01);
      assertEquals(2920.0, rectangle2D_Double1.height, 0.01);
      assertEquals(10.0, rectangle2D_Double1.width, 0.01);
      assertEquals(2920.0, rectangle2D_Double1.x, 0.01);
      assertEquals(1.0, rectangle2D_Double1.y, 0.01);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, 10.0F, (-1261.141));
      assertEquals(2930.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(2920.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(1461.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(2925.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(2921.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-1.05119998539E11), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1461.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-11675.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(17525.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(2925.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1.05120001461E11, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(2921.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(1461.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(2930.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(2920.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(2925.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(1461.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(2925.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(1842726.86, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals((-1839804.86), rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(2875.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(2975.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(10.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(2920.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(2.1024E11, rectangle2D_Double0.height, 0.01);
      assertEquals(29200.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-11675.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-1.05119998539E11), rectangle2D_Double0.y, 0.01);
      assertEquals(2920.0, rectangle2D_Double1.height, 0.01);
      assertEquals(10.0, rectangle2D_Double1.width, 0.01);
      assertEquals(2920.0, rectangle2D_Double1.x, 0.01);
      assertEquals(1.0, rectangle2D_Double1.y, 0.01);
      assertEquals((-3682531.72), rectangle2D_Double2.height, 0.01);
      assertEquals(2875.0, rectangle2D_Double2.x, 0.01);
      assertEquals(1842726.86, rectangle2D_Double2.y, 0.01);
      assertEquals(100.0, rectangle2D_Double2.width, 0.01);
      
      DialCap dialCap0 = new DialCap();
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isVisible());
      assertNotNull(dialCap0);
      
      int int0 = dialPlot0.getLayerIndex(dialCap0);
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isVisible());
      assertEquals((-1), int0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getValue((-1));
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScale(2323);
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.addLayer(dialCap0);
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(2.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      defaultValueDataset0.setValue((Number) null);
      assertTrue(defaultValueDataset0.getNotify());
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset((-1));
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getValue(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setNotify(false);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      defaultValueDataset0.addChangeListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = dialPlot0.equals(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertFalse(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setBackgroundAlpha((-1.0F));
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals((-1.0F), dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double1 = dialPlot0.getViewWidth();
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals((-1.0F), dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertNotNull(arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      assertTrue(defaultKeyedValuesDataset0.getNotify());
      assertNotNull(defaultKeyedValuesDataset0);
      
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(defaultKeyedValuesDataset0);
      assertTrue(defaultKeyedValuesDataset0.getNotify());
      assertTrue(defaultPieDataset0.getNotify());
      assertNotNull(defaultPieDataset0);
      
      RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
      assertTrue(defaultKeyedValuesDataset0.getNotify());
      assertTrue(defaultPieDataset0.getNotify());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(PieLabelLinkStyle.STANDARD, ringPlot0.getLabelLinkStyle());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertNotNull(ringPlot0);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      RectangleInsets rectangleInsets0 = ringPlot0.getLabelPadding();
      assertTrue(defaultKeyedValuesDataset0.getNotify());
      assertTrue(defaultPieDataset0.getNotify());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(PieLabelLinkStyle.STANDARD, ringPlot0.getLabelLinkStyle());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(2.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(2.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(2.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertNotNull(rectangleInsets0);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setInsets(rectangleInsets0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(defaultKeyedValuesDataset0.getNotify());
      assertTrue(defaultPieDataset0.getNotify());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(PieLabelLinkStyle.STANDARD, ringPlot0.getLabelLinkStyle());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(2.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(2.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(2.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(2.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      defaultValueDataset0.setValue(1.0F);
      assertTrue(defaultValueDataset0.getNotify());
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)defaultValueDataset0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertTrue(defaultValueDataset1.equals((Object)defaultValueDataset0));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset1, defaultValueDataset0);
      
      boolean boolean0 = defaultValueDataset0.hasListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(boolean0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setView(2684.0, 2684.0, 3387.28284134, 2684.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(2684.0, dialPlot0.getViewY(), 0.01);
      assertEquals(3387.28284134, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2684.0, dialPlot0.getViewX(), 0.01);
      assertEquals(2684.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewY();
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(2684.0, dialPlot0.getViewY(), 0.01);
      assertEquals(3387.28284134, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2684.0, dialPlot0.getViewX(), 0.01);
      assertEquals(2684.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(2684.0, double0, 0.01);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertNotNull(defaultKeyedValues2DDataset0);
      
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertFalse(multiplePiePlot0.isSubplot());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertNotNull(multiplePiePlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      assertTrue(defaultKeyedValues2DDataset0.getNotify());
      assertEquals(TableOrder.BY_COLUMN, multiplePiePlot0.getDataExtractOrder());
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01);
      assertFalse(multiplePiePlot0.isSubplot());
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertTrue(multiplePiePlot0.isNotify());
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(multiplePiePlot0.fetchElementHintingFlag());
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(multiplePiePlot0.isOutlineVisible());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 10, 3209, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 3209
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(PieLabelLinkStyle.STANDARD, ringPlot0.getLabelLinkStyle());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertNotNull(ringPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      defaultValueDataset0.removeChangeListener(ringPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(PieLabelLinkStyle.STANDARD, ringPlot0.getLabelLinkStyle());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      defaultValueDataset0.removeChangeListener(dialPlot0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      defaultValueDataset0.removeChangeListener(ringPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(PieLabelLinkStyle.STANDARD, ringPlot0.getLabelLinkStyle());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      boolean boolean0 = defaultValueDataset0.equals(dialPlot0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(boolean0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)dialPlot0.getDataset(0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertSame(defaultValueDataset1, defaultValueDataset0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(PieLabelLinkStyle.STANDARD, ringPlot0.getLabelLinkStyle());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNotNull(jFreeChart0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(entityCollection0);
      assertNotNull(chartRenderingInfo0);
      
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, (-419), (-419), chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -419
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(1727.6288553729266);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewWidth();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = defaultValueDataset0.equals((Object) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(boolean0);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertNotNull(standardDialScale0);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addScale(387, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean1 = standardDialScale0.hasListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double1 = dialPlot0.getValue(32);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(Double.NaN, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getLayerIndex(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addLayer(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = null;
      try {
        dialLayerChangeEvent0 = new DialLayerChangeEvent((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(dialPlot0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(ChartChangeEventType.GENERAL, plotChangeEvent0.getType());
      assertNotNull(plotChangeEvent0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.NEW_DATASET;
      ChartChangeEventType chartChangeEventType1 = ChartChangeEventType.DATASET_UPDATED;
      plotChangeEvent0.setType(chartChangeEventType1);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(ChartChangeEventType.DATASET_UPDATED, plotChangeEvent0.getType());
      assertFalse(chartChangeEventType1.equals((Object)chartChangeEventType0));
      assertNotSame(chartChangeEventType1, chartChangeEventType0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart("K3>v@*", dialPlot0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      plotChangeEvent0.setChart(jFreeChart0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(ChartChangeEventType.DATASET_UPDATED, plotChangeEvent0.getType());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      ChartChangeEventType chartChangeEventType2 = ChartChangeEventType.DATASET_UPDATED;
      plotChangeEvent0.setType(chartChangeEventType2);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(ChartChangeEventType.DATASET_UPDATED, plotChangeEvent0.getType());
      assertFalse(chartChangeEventType2.equals((Object)chartChangeEventType0));
      assertSame(chartChangeEventType2, chartChangeEventType1);
      assertNotSame(chartChangeEventType2, chartChangeEventType0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      plotChangeEvent0.setType(chartChangeEventType2);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(ChartChangeEventType.DATASET_UPDATED, plotChangeEvent0.getType());
      assertFalse(chartChangeEventType2.equals((Object)chartChangeEventType0));
      assertSame(chartChangeEventType2, chartChangeEventType1);
      assertNotSame(chartChangeEventType2, chartChangeEventType0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      plotChangeEvent0.setType(chartChangeEventType0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(ChartChangeEventType.NEW_DATASET, plotChangeEvent0.getType());
      assertFalse(chartChangeEventType0.equals((Object)chartChangeEventType2));
      assertFalse(chartChangeEventType0.equals((Object)chartChangeEventType1));
      assertNotSame(chartChangeEventType0, chartChangeEventType2);
      assertNotSame(chartChangeEventType0, chartChangeEventType1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.notifyListeners(plotChangeEvent0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(ChartChangeEventType.NEW_DATASET, plotChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertNotNull(arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = 0;
      int int1 = dialPlot0.getDatasetCount();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0, int1);
      assertTrue(int1 == int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset(0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset1 = dialPlot0.getDataset(928);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(valueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int2 = dialPlot0.hashCode();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, 1.0F, 0);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(dialPointer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.setDialFrame((DialFrame) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'frame' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        DialPlot.rectangleByRadius((Rectangle2D) null, Double.NaN, Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1838.1729));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      defaultValueDataset0.setValue(10);
      assertTrue(defaultValueDataset0.getNotify());
      
      double double0 = dialPlot0.getViewX();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setNoDataMessage("Yl!ylDg");
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("Yl!ylDg", dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertNotNull(dialPointer_Pointer0);
      
      dialPointer_Pointer0.setDatasetIndex(0);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      
      dialPointer_Pointer0.removeChangeListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("Yl!ylDg", dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setBackground(dialPointer_Pointer0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("Yl!ylDg", dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pointer dialPointer_Pointer1 = (DialPointer.Pointer)dialPlot0.getBackground();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("Yl!ylDg", dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0, dialPointer_Pointer1.getDatasetIndex());
      assertTrue(dialPointer_Pointer1.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer1.getRadius(), 0.01);
      assertEquals(0.05, dialPointer_Pointer1.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer1.isVisible());
      assertNotNull(dialPointer_Pointer1);
      assertSame(dialPointer_Pointer1, dialPointer_Pointer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("Yl!ylDg", dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1399.0F, 0.0F, 3785.885F, 0.0F);
      assertEquals(3291.9425048828125, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(1399.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(5184.885009765625, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertNotNull(rectangle2D_Float0);
      assertEquals(3785.885F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(1399.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3785.885F, 10, 616.0473556424855, 0.0F);
      assertEquals(10.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(4093.908687586868, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(4401.932365408111, rectangle2D_Double0.getMaxX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(616.0473556424855, rectangle2D_Double0.width, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.x, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createIntersection(rectangle2D_Float0);
      assertEquals(3291.9425048828125, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(1399.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(5184.885009765625, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(4093.908687586868, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(4401.932365408111, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(4093.908687586868, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(5.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(4401.932365408111, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(10.0, rectangle2D_Double1.getMinY(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(3785.885F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(1399.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(616.0473556424855, rectangle2D_Double0.width, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.x, 0.01);
      assertEquals(616.0473556424859, rectangle2D_Double1.width, 0.01);
      assertEquals(10.0, rectangle2D_Double1.y, 0.01);
      assertEquals((-10.0), rectangle2D_Double1.height, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double1.x, 0.01);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)rectangle2D_Float0.createUnion(rectangle2D_Double1);
      assertEquals(3291.9425048828125, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(1399.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(5184.885009765625, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(4093.908687586868, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(4401.932365408111, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(4093.908687586868, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(5.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(4401.932365408111, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(10.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(3291.9425048828125, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(1399.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(5184.885009765625, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(3785.885F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(1399.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(616.0473556424855, rectangle2D_Double0.width, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.x, 0.01);
      assertEquals(616.0473556424859, rectangle2D_Double1.width, 0.01);
      assertEquals(10.0, rectangle2D_Double1.y, 0.01);
      assertEquals((-10.0), rectangle2D_Double1.height, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double1.x, 0.01);
      assertEquals(1399.0, rectangle2D_Double2.x, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      
      Rectangle2D.Double rectangle2D_Double3 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double2, (-2221.2888053), 3785.885009765625);
      assertEquals(3291.9425048828125, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(1399.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(5184.885009765625, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(4093.908687586868, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(4401.932365408111, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(4093.908687586868, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(5.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(4401.932365408111, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(10.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(3291.9425048828125, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(1399.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(5184.885009765625, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(3291.9425048828125, rectangle2D_Double3.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getCenterY(), 0.01);
      assertEquals(4208063.937677615, rectangle2D_Double3.getMinX(), 0.01);
      assertEquals((-4201480.05266785), rectangle2D_Double3.getMaxX(), 0.01);
      assertNotNull(rectangle2D_Double3);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double3.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double3.equals((Object)rectangle2D_Double2));
      assertFalse(rectangle2D_Double3.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double3, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double3, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double3, rectangle2D_Double0);
      assertEquals(3785.885F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(1399.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(616.0473556424855, rectangle2D_Double0.width, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double0.x, 0.01);
      assertEquals(616.0473556424859, rectangle2D_Double1.width, 0.01);
      assertEquals(10.0, rectangle2D_Double1.y, 0.01);
      assertEquals((-10.0), rectangle2D_Double1.height, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double1.x, 0.01);
      assertEquals(1399.0, rectangle2D_Double2.x, 0.01);
      assertEquals(3785.885009765625, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(4208063.937677615, rectangle2D_Double3.x, 0.01);
      assertEquals((-8409543.990345465), rectangle2D_Double3.width, 0.01);
      assertEquals(0.0, rectangle2D_Double3.height, 0.01);
      assertEquals(0.0, rectangle2D_Double3.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.x, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.y, 0.01);
      assertEquals(8.0, rectangle2D_Double1.height, 0.01);
      assertEquals(8.0, rectangle2D_Double1.width, 0.01);
      
      double double0 = (-2648.7);
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, (-2648.7), (-2648.7));
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(4.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals((-4.0), rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(4.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals((-10594.8), rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(10594.8, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals((-10594.8), rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(10594.8, rectangle2D_Double2.getMinX(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(8.0, rectangle2D_Double0.height, 0.01);
      assertEquals(8.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.y, 0.01);
      assertEquals((-4.0), rectangle2D_Double0.x, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.x, 0.01);
      assertEquals((-4.0), rectangle2D_Double1.y, 0.01);
      assertEquals(8.0, rectangle2D_Double1.height, 0.01);
      assertEquals(8.0, rectangle2D_Double1.width, 0.01);
      assertEquals((-21189.6), rectangle2D_Double2.width, 0.01);
      assertEquals(10594.8, rectangle2D_Double2.y, 0.01);
      assertEquals((-21189.6), rectangle2D_Double2.height, 0.01);
      assertEquals(10594.8, rectangle2D_Double2.x, 0.01);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1407.9432336497186));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertNotNull(dialPointer_Pointer0);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = new DialLayerChangeEvent(dialPointer_Pointer0);
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertNotNull(dialLayerChangeEvent0);
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer();
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertNotNull(dialPointer_Pointer0);
      
      boolean boolean0 = defaultValueDataset0.equals(dialPointer_Pointer0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertFalse(boolean0);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)defaultValueDataset0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertTrue(defaultValueDataset1.equals((Object)defaultValueDataset0));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset1, defaultValueDataset0);
      
      defaultValueDataset0.setValue((Number) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertNotNull(standardDialScale0);
      
      DialPlot dialPlot1 = (DialPlot)dialPlot0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertTrue(dialPlot1.isOutlineVisible());
      assertTrue(dialPlot1.isNotify());
      assertFalse(dialPlot1.isSubplot());
      assertNotNull(dialPlot1);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(dialPlot0, dialPlot1);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset2 = (DefaultValueDataset)defaultValueDataset0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset2.getNotify());
      assertNotNull(defaultValueDataset2);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset2.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset2.equals((Object)defaultValueDataset0));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset2, defaultValueDataset0);
      assertNotSame(defaultValueDataset2, defaultValueDataset1);
      
      dialPlot0.setCap(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.hashCode();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewHeight();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, double0, 0.01);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin((-1049));
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals((-1049), dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isVisible());
      assertNotNull(dialPointer_Pin0);
      
      dialPointer_Pin0.setRadius(0.0);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals((-1049), dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.0, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isVisible());
      
      DialPointer.Pin dialPointer_Pin1 = (DialPointer.Pin)dialPointer_Pin0.clone();
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals((-1049), dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.0, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0.0, dialPointer_Pin1.getRadius(), 0.01);
      assertTrue(dialPointer_Pin1.isClippedToWindow());
      assertEquals((-1049), dialPointer_Pin1.getDatasetIndex());
      assertTrue(dialPointer_Pin1.isVisible());
      assertNotNull(dialPointer_Pin1);
      assertTrue(dialPointer_Pin1.equals((Object)dialPointer_Pin0));
      assertNotSame(dialPointer_Pin0, dialPointer_Pin1);
      assertNotSame(dialPointer_Pin1, dialPointer_Pin0);
      
      int int0 = dialPlot0.getPointerIndex(dialPointer_Pin0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals((-1049), dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.0, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals((-1), int0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertTrue(dialPointer_Pin0.equals((Object)dialPointer_Pin1));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(dialPlot0, dialPlot1);
      assertNotSame(dialPointer_Pin0, dialPointer_Pin1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      defaultValueDataset0.validateObject();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      
      DialScale dialScale0 = dialPlot0.getScale(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialScale0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.addScale((-2144), (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Float0);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      
      rectangle2D_Float0.setRect(0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Float0, 0.0, 0.0F);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      RectangleInsets rectangleInsets0 = dialPlot0.getInsets();
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(8.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
      assertNotNull(rectangleInsets0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 10, 2900.0, 10);
      assertEquals(2901.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1451.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(15.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(20.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(2900.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1.0, rectangle2D_Double0.x, 0.01);
      assertEquals(10.0, rectangle2D_Double0.height, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      assertEquals(2901.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1451.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(15.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(20.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(2900.0, rectangle0.getWidth(), 0.01);
      assertEquals(1.0, rectangle0.getX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(15.0, rectangle0.getCenterY(), 0.01);
      assertEquals(10.0, rectangle0.getHeight(), 0.01);
      assertEquals(2901.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle0.getMinX(), 0.01);
      assertEquals(1451.0, rectangle0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle0.getY(), 0.01);
      assertEquals(20.0, rectangle0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle0.getMinY(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(2900.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1.0, rectangle2D_Double0.x, 0.01);
      assertEquals(10.0, rectangle2D_Double0.height, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      assertEquals(10, rectangle0.height);
      assertEquals(2900, rectangle0.width);
      assertEquals(1, rectangle0.x);
      assertEquals(10, rectangle0.y);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle0.createUnion(rectangle2D_Double0);
      assertEquals(2901.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1451.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(15.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(20.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(2900.0, rectangle0.getWidth(), 0.01);
      assertEquals(1.0, rectangle0.getX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(15.0, rectangle0.getCenterY(), 0.01);
      assertEquals(10.0, rectangle0.getHeight(), 0.01);
      assertEquals(2901.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle0.getMinX(), 0.01);
      assertEquals(1451.0, rectangle0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle0.getY(), 0.01);
      assertEquals(20.0, rectangle0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle0.getMinY(), 0.01);
      assertEquals(2901.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(20.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(10.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(1451.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(1.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(15.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(2900.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1.0, rectangle2D_Double0.x, 0.01);
      assertEquals(10.0, rectangle2D_Double0.height, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      assertEquals(10, rectangle0.height);
      assertEquals(2900, rectangle0.width);
      assertEquals(1, rectangle0.x);
      assertEquals(10, rectangle0.y);
      assertEquals(10.0, rectangle2D_Double1.y, 0.01);
      assertEquals(10.0, rectangle2D_Double1.height, 0.01);
      assertEquals(1.0, rectangle2D_Double1.x, 0.01);
      assertEquals(2900.0, rectangle2D_Double1.width, 0.01);
      
      rectangleInsets0.trim(rectangle2D_Double1);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(8.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(2901.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1451.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(15.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(20.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(2900.0, rectangle0.getWidth(), 0.01);
      assertEquals(1.0, rectangle0.getX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(15.0, rectangle0.getCenterY(), 0.01);
      assertEquals(10.0, rectangle0.getHeight(), 0.01);
      assertEquals(2901.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle0.getMinX(), 0.01);
      assertEquals(1451.0, rectangle0.getCenterX(), 0.01);
      assertEquals(10.0, rectangle0.getY(), 0.01);
      assertEquals(20.0, rectangle0.getMaxY(), 0.01);
      assertEquals(10.0, rectangle0.getMinY(), 0.01);
      assertEquals(14.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(16.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(2893.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(9.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(1451.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(15.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(2900.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1.0, rectangle2D_Double0.x, 0.01);
      assertEquals(10.0, rectangle2D_Double0.height, 0.01);
      assertEquals(10.0, rectangle2D_Double0.y, 0.01);
      assertEquals(10, rectangle0.height);
      assertEquals(2900, rectangle0.width);
      assertEquals(1, rectangle0.x);
      assertEquals(10, rectangle0.y);
      assertEquals(2.0, rectangle2D_Double1.height, 0.01);
      assertEquals(14.0, rectangle2D_Double1.y, 0.01);
      assertEquals(2884.0, rectangle2D_Double1.width, 0.01);
      assertEquals(9.0, rectangle2D_Double1.x, 0.01);
      
      dialPlot0.setInsets(rectangleInsets0, false);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(8.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = new ArcDialFrame((-282), 1.0F);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-282.0), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = new DialLayerChangeEvent(arcDialFrame0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-282.0), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertNotNull(dialLayerChangeEvent0);
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-282.0), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setBackgroundImageAlignment((-282));
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.hashCode();
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialBackground dialBackground0 = new DialBackground();
      assertTrue(dialBackground0.isClippedToWindow());
      assertTrue(dialBackground0.isVisible());
      assertNotNull(dialBackground0);
      
      dialBackground0.removeChangeListener(dialPlot0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialBackground0.isClippedToWindow());
      assertTrue(dialBackground0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialBackground0.setPaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialBackground0.isClippedToWindow());
      assertTrue(dialBackground0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addLayer(dialBackground0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialBackground0.isClippedToWindow());
      assertTrue(dialBackground0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(193);
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(193, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertNotNull(dialPointer_Pin0);
      
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.GENERAL;
      dialLayerChangeEvent0.setType(chartChangeEventType0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-282.0), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      
      dialPointer_Pin0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(193, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPointer_Pin0.setDatasetIndex(0);
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      
      dialPointer_Pin0.removeChangeListener(dialPlot0);
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.addPointer(dialPointer_Pin0);
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-282.0), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      boolean boolean0 = defaultValueDataset0.hasListener(dialPlot0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)defaultValueDataset0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertTrue(defaultValueDataset1.equals((Object)defaultValueDataset0));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset1, defaultValueDataset0);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-282.0), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.hashCode();
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScale(0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertNotNull(arcDialFrame1);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(180.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame2.isVisible());
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-282), dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(arcDialFrame2);
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame0));
      assertSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.event.PlotChangeEvent");
      assertEquals(2.0F, categoryAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01);
      assertTrue(categoryAxis0.isTickMarksVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01);
      assertEquals("org.jfree.chart.event.PlotChangeEvent", categoryAxis0.getLabel());
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(categoryAxis0.isVisible());
      assertFalse(categoryAxis0.isMinorTickMarksVisible());
      assertTrue(categoryAxis0.isTickLabelsVisible());
      assertTrue(categoryAxis0.isAxisLineVisible());
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01);
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(AxisLabelLocation.MIDDLE, categoryAxis0.getLabelLocation());
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, categoryAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertNotNull(categoryAxis0);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, CategoryAxis.DEFAULT_AXIS_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.2, CategoryAxis.DEFAULT_CATEGORY_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      
      RectangleInsets rectangleInsets0 = categoryAxis0.getLabelInsets();
      assertEquals(2.0F, categoryAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01);
      assertTrue(categoryAxis0.isTickMarksVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01);
      assertEquals("org.jfree.chart.event.PlotChangeEvent", categoryAxis0.getLabel());
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(categoryAxis0.isVisible());
      assertFalse(categoryAxis0.isMinorTickMarksVisible());
      assertTrue(categoryAxis0.isTickLabelsVisible());
      assertTrue(categoryAxis0.isAxisLineVisible());
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01);
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(AxisLabelLocation.MIDDLE, categoryAxis0.getLabelLocation());
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, categoryAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(3.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(3.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(3.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(3.0, rectangleInsets0.getBottom(), 0.01);
      assertNotNull(rectangleInsets0);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, CategoryAxis.DEFAULT_AXIS_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.2, CategoryAxis.DEFAULT_CATEGORY_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Float0);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)rectangleInsets0.createInsetRectangle((Rectangle2D) rectangle2D_Float0, true, true);
      assertEquals(2.0F, categoryAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01);
      assertTrue(categoryAxis0.isTickMarksVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01);
      assertEquals("org.jfree.chart.event.PlotChangeEvent", categoryAxis0.getLabel());
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(categoryAxis0.isVisible());
      assertFalse(categoryAxis0.isMinorTickMarksVisible());
      assertTrue(categoryAxis0.isTickLabelsVisible());
      assertTrue(categoryAxis0.isAxisLineVisible());
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01);
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(AxisLabelLocation.MIDDLE, categoryAxis0.getLabelLocation());
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, categoryAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(3.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(3.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(3.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(3.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, CategoryAxis.DEFAULT_AXIS_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.2, CategoryAxis.DEFAULT_CATEGORY_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(3.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-6.0), rectangle2D_Double0.height, 0.01);
      assertEquals(3.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-6.0), rectangle2D_Double0.width, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double0, (-454.9978191), 2.0F);
      assertEquals(2.0F, categoryAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01);
      assertTrue(categoryAxis0.isTickMarksVisible());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01);
      assertEquals("org.jfree.chart.event.PlotChangeEvent", categoryAxis0.getLabel());
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(categoryAxis0.isVisible());
      assertFalse(categoryAxis0.isMinorTickMarksVisible());
      assertTrue(categoryAxis0.isTickLabelsVisible());
      assertTrue(categoryAxis0.isAxisLineVisible());
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01);
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(AxisLabelLocation.MIDDLE, categoryAxis0.getLabelLocation());
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.0F, categoryAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(3.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(3.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(3.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(3.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-6.0), rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals((-1364.9934573), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(1364.9934573, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(6.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.05, CategoryAxis.DEFAULT_AXIS_MARGIN, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertEquals(0.2, CategoryAxis.DEFAULT_CATEGORY_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(3.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-6.0), rectangle2D_Double0.height, 0.01);
      assertEquals(3.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-6.0), rectangle2D_Double0.width, 0.01);
      assertEquals(6.0, rectangle2D_Double1.y, 0.01);
      assertEquals((-12.0), rectangle2D_Double1.height, 0.01);
      assertEquals((-1364.9934573), rectangle2D_Double1.x, 0.01);
      assertEquals(2729.9869146, rectangle2D_Double1.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertNotNull(dialPointer_Pin0);
      
      int int0 = (-3483);
      ValueDataset valueDataset0 = dialPlot0.getDataset((-3483));
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPointer_Pin0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.addPointer(dialPointer_Pin0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) dialPointer_Pin0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer(40);
      assertEquals(40, (int)integer0);
      assertNotNull(integer0);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) integer0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(10);
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(10, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertNotNull(dialValueIndicator0);
      
      dialPlot0.addLayer(dialValueIndicator0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(10, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(2.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      assertTrue(spiderWebPlot0.isOutlineVisible());
      assertEquals(0.01, spiderWebPlot0.getHeadPercent(), 0.01);
      assertTrue(spiderWebPlot0.isWebFilled());
      assertEquals(15, spiderWebPlot0.getBackgroundImageAlignment());
      assertFalse(spiderWebPlot0.fetchElementHintingFlag());
      assertEquals("Spider Web Plot", spiderWebPlot0.getPlotType());
      assertEquals(0.5F, spiderWebPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(spiderWebPlot0.getNoDataMessage());
      assertTrue(spiderWebPlot0.isNotify());
      assertFalse(spiderWebPlot0.isSubplot());
      assertEquals(Rotation.CLOCKWISE, spiderWebPlot0.getDirection());
      assertEquals(90.0, spiderWebPlot0.getStartAngle(), 0.01);
      assertEquals(0.25, spiderWebPlot0.getInteriorGap(), 0.01);
      assertEquals(0.1, spiderWebPlot0.getAxisLabelGap(), 0.01);
      assertEquals(1.0F, spiderWebPlot0.getForegroundAlpha(), 0.01F);
      assertEquals((-1.0), spiderWebPlot0.getMaxValue(), 0.01);
      assertEquals(1.0F, spiderWebPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_ROW, spiderWebPlot0.getDataExtractOrder());
      assertNotNull(spiderWebPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(90.0, SpiderWebPlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, SpiderWebPlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(0.1, SpiderWebPlot.DEFAULT_AXIS_LABEL_GAP, 0.01);
      assertEquals(0.25, SpiderWebPlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals((-1.0), SpiderWebPlot.DEFAULT_MAX_VALUE, 0.01);
      assertEquals(0.01, SpiderWebPlot.DEFAULT_HEAD, 0.01);
      
      spiderWebPlot0.setForegroundAlpha((-2074.166F));
      assertTrue(spiderWebPlot0.isOutlineVisible());
      assertEquals(0.01, spiderWebPlot0.getHeadPercent(), 0.01);
      assertTrue(spiderWebPlot0.isWebFilled());
      assertEquals(15, spiderWebPlot0.getBackgroundImageAlignment());
      assertFalse(spiderWebPlot0.fetchElementHintingFlag());
      assertEquals("Spider Web Plot", spiderWebPlot0.getPlotType());
      assertEquals(0.5F, spiderWebPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(spiderWebPlot0.getNoDataMessage());
      assertTrue(spiderWebPlot0.isNotify());
      assertFalse(spiderWebPlot0.isSubplot());
      assertEquals((-2074.166F), spiderWebPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(Rotation.CLOCKWISE, spiderWebPlot0.getDirection());
      assertEquals(90.0, spiderWebPlot0.getStartAngle(), 0.01);
      assertEquals(0.25, spiderWebPlot0.getInteriorGap(), 0.01);
      assertEquals(0.1, spiderWebPlot0.getAxisLabelGap(), 0.01);
      assertEquals((-1.0), spiderWebPlot0.getMaxValue(), 0.01);
      assertEquals(1.0F, spiderWebPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_ROW, spiderWebPlot0.getDataExtractOrder());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(90.0, SpiderWebPlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, SpiderWebPlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(0.1, SpiderWebPlot.DEFAULT_AXIS_LABEL_GAP, 0.01);
      assertEquals(0.25, SpiderWebPlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals((-1.0), SpiderWebPlot.DEFAULT_MAX_VALUE, 0.01);
      assertEquals(0.01, SpiderWebPlot.DEFAULT_HEAD, 0.01);
      
      defaultValueDataset0.addChangeListener(spiderWebPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(spiderWebPlot0.isOutlineVisible());
      assertEquals(0.01, spiderWebPlot0.getHeadPercent(), 0.01);
      assertTrue(spiderWebPlot0.isWebFilled());
      assertEquals(15, spiderWebPlot0.getBackgroundImageAlignment());
      assertFalse(spiderWebPlot0.fetchElementHintingFlag());
      assertEquals("Spider Web Plot", spiderWebPlot0.getPlotType());
      assertEquals(0.5F, spiderWebPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(spiderWebPlot0.getNoDataMessage());
      assertTrue(spiderWebPlot0.isNotify());
      assertFalse(spiderWebPlot0.isSubplot());
      assertEquals((-2074.166F), spiderWebPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(Rotation.CLOCKWISE, spiderWebPlot0.getDirection());
      assertEquals(90.0, spiderWebPlot0.getStartAngle(), 0.01);
      assertEquals(0.25, spiderWebPlot0.getInteriorGap(), 0.01);
      assertEquals(0.1, spiderWebPlot0.getAxisLabelGap(), 0.01);
      assertEquals((-1.0), spiderWebPlot0.getMaxValue(), 0.01);
      assertEquals(1.0F, spiderWebPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(TableOrder.BY_ROW, spiderWebPlot0.getDataExtractOrder());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(90.0, SpiderWebPlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, SpiderWebPlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(0.1, SpiderWebPlot.DEFAULT_AXIS_LABEL_GAP, 0.01);
      assertEquals(0.25, SpiderWebPlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals((-1.0), SpiderWebPlot.DEFAULT_MAX_VALUE, 0.01);
      assertEquals(0.01, SpiderWebPlot.DEFAULT_HEAD, 0.01);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      boolean boolean0 = false;
      dialPlot0.setOutlineVisible(true);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin(10);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(10, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertNotNull(dialPointer_Pin0);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) dialPointer_Pin0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getValue((-1117));
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-1117));
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setOutlineVisible(false);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setBackground((DialLayer) null);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setBackgroundImageAlpha(0.0F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setView((-2076.2), (-1991.286795990303), (-1117), (-1991.286795990303));
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-1117.0), dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-2076.2), dialPlot0.getViewX(), 0.01);
      assertEquals((-1991.286795990303), dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-1991.286795990303), dialPlot0.getViewY(), 0.01);
      assertEquals(0.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-1117.0), dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-2076.2), dialPlot0.getViewX(), 0.01);
      assertEquals((-1991.286795990303), dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-1991.286795990303), dialPlot0.getViewY(), 0.01);
      assertEquals(0.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setCap(arcDialFrame0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-1117.0), dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-2076.2), dialPlot0.getViewX(), 0.01);
      assertEquals((-1991.286795990303), dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-1991.286795990303), dialPlot0.getViewY(), 0.01);
      assertEquals(0.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPlot dialPlot1 = (DialPlot)dialPlot0.clone();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-1117.0), dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-2076.2), dialPlot0.getViewX(), 0.01);
      assertEquals((-1991.286795990303), dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-1991.286795990303), dialPlot0.getViewY(), 0.01);
      assertEquals(0.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertFalse(dialPlot1.isOutlineVisible());
      assertEquals((-1117.0), dialPlot1.getViewWidth(), 0.01);
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals((-2076.2), dialPlot1.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals((-1991.286795990303), dialPlot1.getViewHeight(), 0.01);
      assertFalse(dialPlot1.isSubplot());
      assertEquals((-1991.286795990303), dialPlot1.getViewY(), 0.01);
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(0.0F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot0, dialPlot1);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int0 = dialPlot0.getDatasetCount();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-1117.0), dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-2076.2), dialPlot0.getViewX(), 0.01);
      assertEquals((-1991.286795990303), dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-1991.286795990303), dialPlot0.getViewY(), 0.01);
      assertEquals(0.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, int0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.mapDatasetToScale((-1121), (-1117));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setDrawingSupplier((DrawingSupplier) null, false);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset(1926);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setView(1926, 0.12, (-1.5707963267948966), 0.12);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.12, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals((-1.5707963267948966), dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.12, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1926.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(8.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertNotNull(rectangleInsets0);
      
      dialPlot0.setInsets(rectangleInsets0, false);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(8.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewY();
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(255);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertNull(dialPointer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      BasicStroke basicStroke0 = (BasicStroke)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      dialPlot0.setOutlineStroke(basicStroke0);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayer dialLayer0 = dialPlot0.getBackground();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialLayer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = 162;
      DialScale dialScale0 = dialPlot0.getScaleForDataset(162);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewY();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer(162);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 162, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1077.155342631));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin((-2952));
      assertEquals((-2952), dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertNotNull(dialPointer_Pin0);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) dialPointer_Pin0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setNotify(false);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)dialPlot0.getDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertSame(defaultValueDataset1, defaultValueDataset0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset2 = (DefaultValueDataset)defaultValueDataset0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset2.getNotify());
      assertNotNull(defaultValueDataset2);
      assertTrue(defaultValueDataset2.equals((Object)defaultValueDataset0));
      assertTrue(defaultValueDataset2.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset2, defaultValueDataset1);
      assertNotSame(defaultValueDataset2, defaultValueDataset0);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialLayer0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertNotNull(standardDialScale0);
      
      StandardDialScale standardDialScale1 = (StandardDialScale)standardDialScale0.clone();
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(4, standardDialScale1.getMinorTickCount());
      assertEquals(0.02, standardDialScale1.getMinorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale1.getLowerBound(), 0.01);
      assertTrue(standardDialScale1.getTickLabelsVisible());
      assertTrue(standardDialScale1.getFirstTickLabelVisible());
      assertTrue(standardDialScale1.isClippedToWindow());
      assertEquals(0.1, standardDialScale1.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale1.getMajorTickIncrement(), 0.01);
      assertEquals((-170.0), standardDialScale1.getExtent(), 0.01);
      assertEquals(100.0, standardDialScale1.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale1.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale1.getStartAngle(), 0.01);
      assertTrue(standardDialScale1.isVisible());
      assertEquals(0.04, standardDialScale1.getMajorTickLength(), 0.01);
      assertNotNull(standardDialScale1);
      assertTrue(standardDialScale1.equals((Object)standardDialScale0));
      assertNotSame(standardDialScale0, standardDialScale1);
      assertNotSame(standardDialScale1, standardDialScale0);
      
      standardDialScale0.setTickLabelOffset(10);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertFalse(standardDialScale0.equals((Object)standardDialScale1));
      assertNotSame(standardDialScale0, standardDialScale1);
      
      dialPlot0.addScale(330, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(10.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset2));
      assertFalse(standardDialScale0.equals((Object)standardDialScale1));
      assertNotSame(defaultValueDataset0, defaultValueDataset2);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(standardDialScale0, standardDialScale1);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      int int0 = (-1421);
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((-1421));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialTextAnnotation dialTextAnnotation0 = new DialTextAnnotation("composite");
      assertTrue(dialTextAnnotation0.isVisible());
      assertEquals((-90.0), dialTextAnnotation0.getAngle(), 0.01);
      assertEquals(0.3, dialTextAnnotation0.getRadius(), 0.01);
      assertEquals("composite", dialTextAnnotation0.getLabel());
      assertTrue(dialTextAnnotation0.isClippedToWindow());
      assertNotNull(dialTextAnnotation0);
      
      boolean boolean0 = dialPlot0.equals(dialTextAnnotation0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialTextAnnotation0.isVisible());
      assertEquals((-90.0), dialTextAnnotation0.getAngle(), 0.01);
      assertEquals(0.3, dialTextAnnotation0.getRadius(), 0.01);
      assertEquals("composite", dialTextAnnotation0.getLabel());
      assertTrue(dialTextAnnotation0.isClippedToWindow());
      assertFalse(boolean0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialLayer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      defaultValueDataset0.setNotify(false);
      assertFalse(defaultValueDataset0.getNotify());
      
      dialPlot0.hashCode();
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertFalse(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer(53);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 53, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialLayer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset((-1809));
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(valueDataset0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setDataset((ValueDataset) null);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setCap((DialLayer) null);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setView((-696.4), (-696.4), 0.0, (-696.4));
      assertEquals((-696.4), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-696.4), dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-696.4), dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ValueDataset valueDataset1 = dialPlot0.getDataset();
      assertEquals((-696.4), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-696.4), dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-696.4), dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(valueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-1493));
      assertEquals((-696.4), dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals((-696.4), dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals((-696.4), dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      int int0 = 0;
      StandardDialScale standardDialScale0 = null;
      try {
        standardDialScale0 = new StandardDialScale((-696.4), (-1809), 3880.67863450686, 1055.085026476309, (-900.423787813758), (-1809));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'majorTickIncrement' > 0.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setView((-719.1), 2.0, 0.0, 2.0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2711, (double) 1.0F, (-4984.5810345607), chartRenderingInfo0);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(2.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals((-719.1), dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(2.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.isBorderVisible());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(2711, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(2711, bufferedImage0.getTileHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      // Undeclared exception!
      try { 
        bufferedImage0.getSubimage(15, (-2712), 15, 10);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(72.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)defaultValueDataset0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertTrue(defaultValueDataset1.equals((Object)defaultValueDataset0));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset1, defaultValueDataset0);
      
      int int0 = 97;
      defaultValueDataset0.validateObject();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      
      dialPlot0.setDataset(97, (ValueDataset) defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = defaultValueDataset0.hasListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertTrue(boolean0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      defaultValueDataset0.addChangeListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertNotNull(dialPointer_Pin0);
      
      int int1 = dialPlot0.getPointerIndex(dialPointer_Pin0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals((-1), int1);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertFalse(int1 == int0);
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) dialPointer_Pin0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer((-451));
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals((-451), dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertNotNull(dialPointer_Pointer0);
      
      int int0 = dialPlot0.getPointerIndex(dialPointer_Pointer0);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPointer_Pointer0.isClippedToWindow());
      assertEquals(0.05, dialPointer_Pointer0.getWidthRadius(), 0.01);
      assertEquals(0.9, dialPointer_Pointer0.getRadius(), 0.01);
      assertEquals((-451), dialPointer_Pointer0.getDatasetIndex());
      assertTrue(dialPointer_Pointer0.isVisible());
      assertEquals((-1), int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      double double0 = dialPlot0.getViewWidth();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewY();
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset((-2016));
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getDatasetCount();
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0, int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset1 = dialPlot0.getDataset();
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(valueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewHeight();
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double1 = dialPlot0.getViewY();
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialLayer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScale(0);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(35);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(valueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(23);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 23, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 193);
      assertTrue(categoryToPieDataset0.getNotify());
      assertEquals(193, categoryToPieDataset0.getExtractIndex());
      assertEquals(TableOrder.BY_ROW, categoryToPieDataset0.getExtractType());
      assertNotNull(categoryToPieDataset0);
      
      Number number0 = categoryToPieDataset0.getValue((Comparable) tableOrder0);
      assertTrue(categoryToPieDataset0.getNotify());
      assertEquals(193, categoryToPieDataset0.getExtractIndex());
      assertEquals(TableOrder.BY_ROW, categoryToPieDataset0.getExtractType());
      assertNull(number0);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      boolean boolean0 = dialPlot0.equals((Object) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(boolean0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      assertEquals(RectangleEdge.TOP, rectangleEdge0);
      
      DialScale dialScale0 = dialPlot0.getScale((-4263));
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot1 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertNull(dialPlot1.getNoDataMessage());
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      boolean boolean0 = dialPlot0.equals(dialPlot1);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertNull(dialPlot1.getNoDataMessage());
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(boolean0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot0, dialPlot1);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset((-4263));
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(valueDataset0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewX();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, double0, 0.01);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      String string0 = dialPlot1.getPlotType();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertNull(dialPlot1.getNoDataMessage());
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals("DialPlot", string0);
      assertNotNull(string0);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      double double1 = dialPlot0.getViewY();
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, double1, 0.01);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertEquals(double1, double0, 0.01);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot1.setNoDataMessage("Null 'key' argument.");
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals("Null 'key' argument.", dialPlot1.getNoDataMessage());
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertFalse(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot1.getPointerForDataset(47);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals("Null 'key' argument.", dialPlot1.getNoDataMessage());
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertNull(dialPointer0);
      assertFalse(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setDataset(10, (ValueDataset) null);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double2 = dialPlot1.getValue(10);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals("Null 'key' argument.", dialPlot1.getNoDataMessage());
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(Double.NaN, double2, 0.01);
      assertFalse(dialPlot1.equals((Object)dialPlot0));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1.0));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      defaultValueDataset0.validateObject();
      assertTrue(defaultValueDataset0.getNotify());
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)dialPlot0.getDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertSame(defaultValueDataset1, defaultValueDataset0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setDataset(0, (ValueDataset) defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setForegroundAlpha((-2372.3F));
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals((-2372.3F), dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setBackgroundImageAlignment(3137);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(3137, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2372.3F), dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      int int0 = dialPlot0.getDatasetCount();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(3137, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals((-2372.3F), dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, int0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      int int0 = (-1387);
      DialScale dialScale0 = dialPlot0.getScale((-1387));
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.addScale((-1387), (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) integer0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.mapDatasetToScale(0, 0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-4027.85));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getValue(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals((-4027.85), double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-725.0));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(meterPlot0.getTickLabelsVisible());
      assertFalse(meterPlot0.getDrawBorder());
      assertEquals(1.0F, meterPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, meterPlot0.getBackgroundImageAlignment());
      assertEquals(10.0, meterPlot0.getTickSize(), 0.01);
      assertTrue(meterPlot0.isOutlineVisible());
      assertFalse(meterPlot0.isSubplot());
      assertTrue(meterPlot0.isNotify());
      assertEquals(1.0F, meterPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(meterPlot0.getNoDataMessage());
      assertEquals(0.5F, meterPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(DialShape.CIRCLE, meterPlot0.getDialShape());
      assertFalse(meterPlot0.fetchElementHintingFlag());
      assertEquals(270, meterPlot0.getMeterAngle());
      assertEquals("Units", meterPlot0.getUnits());
      assertNotNull(meterPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10.0F, MeterPlot.DEFAULT_CIRCLE_SIZE, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(270, MeterPlot.DEFAULT_METER_ANGLE);
      assertEquals(3.0F, MeterPlot.DEFAULT_BORDER_SIZE, 0.01F);
      
      defaultValueDataset0.removeChangeListener(meterPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(meterPlot0.getTickLabelsVisible());
      assertFalse(meterPlot0.getDrawBorder());
      assertEquals(1.0F, meterPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, meterPlot0.getBackgroundImageAlignment());
      assertEquals(10.0, meterPlot0.getTickSize(), 0.01);
      assertTrue(meterPlot0.isOutlineVisible());
      assertFalse(meterPlot0.isSubplot());
      assertTrue(meterPlot0.isNotify());
      assertEquals(1.0F, meterPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(meterPlot0.getNoDataMessage());
      assertEquals(0.5F, meterPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(DialShape.CIRCLE, meterPlot0.getDialShape());
      assertFalse(meterPlot0.fetchElementHintingFlag());
      assertEquals(270, meterPlot0.getMeterAngle());
      assertEquals("Units", meterPlot0.getUnits());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10.0F, MeterPlot.DEFAULT_CIRCLE_SIZE, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(270, MeterPlot.DEFAULT_METER_ANGLE);
      assertEquals(3.0F, MeterPlot.DEFAULT_BORDER_SIZE, 0.01F);
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)defaultValueDataset0.clone();
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertTrue(defaultValueDataset1.equals((Object)defaultValueDataset0));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset1, defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      String string0 = dialPlot0.getPlotType();
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals("DialPlot", string0);
      assertNotNull(string0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialCap dialCap0 = new DialCap();
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertNotNull(dialCap0);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = new DialLayerChangeEvent(dialCap0);
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertNotNull(dialLayerChangeEvent0);
      
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(ChartChangeEventType.GENERAL, dialLayerChangeEvent0.getType());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.hashCode();
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialLayer dialLayer0 = dialPlot0.getCap();
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialLayer0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int0 = dialPlot0.getLayerIndex(dialCap0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals((-1), int0);
      assertTrue(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-989.894));
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = dialPlot0.getDatasetCount();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, int0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      dialPlot0.setDialFrame(arcDialFrame0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(1.0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      defaultValueDataset0.setNotify(false);
      assertFalse(defaultValueDataset0.getNotify());
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertFalse(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScale((-3278));
      assertFalse(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialCap dialCap0 = new DialCap();
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isVisible());
      assertNotNull(dialCap0);
      
      dialPlot0.setCap(dialCap0);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialCap0.isClippedToWindow());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScale(37);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.addScale(37, (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(1420);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.addScale(1420, (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(10);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(10, dialValueIndicator0.getDatasetIndex());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertNotNull(dialValueIndicator0);
      
      dialValueIndicator0.setDatasetIndex(10);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(10, dialValueIndicator0.getDatasetIndex());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(jFreeChart0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 192, (-894.27), 1.0, (ChartRenderingInfo) null);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(192, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(192, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(192, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(192, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(sunGraphics2D0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainX);
      
      DialPlot dialPlot1 = new DialPlot((ValueDataset) null);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertFalse(dialPlot1.isSubplot());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertTrue(dialPlot1.isOutlineVisible());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(sunGraphics2D0, dialPlot1, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int0 = 59;
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(59);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.addPointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-1218));
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPlot dialPlot1 = new DialPlot();
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialLayer dialLayer0 = dialPlot1.getCap();
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertNull(dialLayer0);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setBackground((DialLayer) null);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ValueDataset valueDataset0 = null;
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(380);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 380, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      double double0 = Double.NaN;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(Double.NaN);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      defaultValueDataset0.setValue(dialPlot0.ZERO);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      defaultValueDataset0.removeChangeListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = (-871);
      // Undeclared exception!
      try { 
        dialPlot0.setDataset((-871), (ValueDataset) defaultValueDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Float float0 = new Float(0.0);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      float float1 = Float.sum((-1375.0F), (-1375.0F));
      assertEquals((-2750.0F), float1, 0.01F);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) float0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotNull(dialPlot0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(dialPointer0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.addLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      StandardDialFrame standardDialFrame0 = new StandardDialFrame();
      assertTrue(standardDialFrame0.isVisible());
      assertFalse(standardDialFrame0.isClippedToWindow());
      assertEquals(0.95, standardDialFrame0.getRadius(), 0.01);
      assertNotNull(standardDialFrame0);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) standardDialFrame0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Integer integer0 = new Integer((-2490));
      assertEquals((-2490), (int)integer0);
      assertNotNull(integer0);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) integer0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(dialPlot0.ZERO);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertFalse(defaultValueDataset1.equals((Object)defaultValueDataset0));
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset1);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertTrue(defaultValueDataset1.getNotify());
      assertFalse(defaultValueDataset0.equals((Object)defaultValueDataset1));
      assertFalse(defaultValueDataset1.equals((Object)defaultValueDataset0));
      assertNotSame(defaultValueDataset0, defaultValueDataset1);
      assertNotSame(defaultValueDataset1, defaultValueDataset0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.getLayerIndex((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset((-12));
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.addLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.markerChanged((MarkerChangeEvent) null);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
      assertTrue(combinedDomainCategoryPlot0.isRangeZoomable());
      assertFalse(combinedDomainCategoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedDomainCategoryPlot0.getRendererCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainCategoryPlot0.isSubplot());
      assertEquals(1, combinedDomainCategoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, combinedDomainCategoryPlot0.getDomainGridlinePosition());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedDomainCategoryPlot0.isDomainCrosshairVisible());
      assertEquals(PlotOrientation.VERTICAL, combinedDomainCategoryPlot0.getOrientation());
      assertEquals(DatasetRenderingOrder.REVERSE, combinedDomainCategoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, combinedDomainCategoryPlot0.getRowRenderingOrder());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, combinedDomainCategoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, combinedDomainCategoryPlot0.getColumnRenderingOrder());
      assertFalse(combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertFalse(combinedDomainCategoryPlot0.isDomainPannable());
      assertTrue(combinedDomainCategoryPlot0.isNotify());
      assertEquals(0, combinedDomainCategoryPlot0.getWeight());
      assertNull(combinedDomainCategoryPlot0.getNoDataMessage());
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainCategoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainCategoryPlot0.fetchElementHintingFlag());
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainCategoryPlot0.isDomainZoomable());
      assertFalse(combinedDomainCategoryPlot0.isRangePannable());
      assertFalse(combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
      assertNotNull(combinedDomainCategoryPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.removeChangeListener(combinedDomainCategoryPlot0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
      assertTrue(combinedDomainCategoryPlot0.isRangeZoomable());
      assertFalse(combinedDomainCategoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedDomainCategoryPlot0.getRendererCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedDomainCategoryPlot0.isSubplot());
      assertEquals(1, combinedDomainCategoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, combinedDomainCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, combinedDomainCategoryPlot0.getDomainGridlinePosition());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(combinedDomainCategoryPlot0.isDomainCrosshairVisible());
      assertEquals(PlotOrientation.VERTICAL, combinedDomainCategoryPlot0.getOrientation());
      assertEquals(DatasetRenderingOrder.REVERSE, combinedDomainCategoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, combinedDomainCategoryPlot0.getRowRenderingOrder());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals(0.0, combinedDomainCategoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, combinedDomainCategoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, combinedDomainCategoryPlot0.getColumnRenderingOrder());
      assertFalse(combinedDomainCategoryPlot0.isDomainGridlinesVisible());
      assertFalse(combinedDomainCategoryPlot0.isDomainPannable());
      assertTrue(combinedDomainCategoryPlot0.isNotify());
      assertEquals(0, combinedDomainCategoryPlot0.getWeight());
      assertNull(combinedDomainCategoryPlot0.getNoDataMessage());
      assertEquals(0.5F, combinedDomainCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainCategoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainCategoryPlot0.fetchElementHintingFlag());
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
      assertFalse(combinedDomainCategoryPlot0.isDomainZoomable());
      assertFalse(combinedDomainCategoryPlot0.isRangePannable());
      assertFalse(combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.zoom(0.0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewX();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPlot dialPlot1 = new DialPlot();
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertTrue(dialPlot1.isNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      dialPlot1.setDataset((ValueDataset) defaultValueDataset0);
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertTrue(dialPlot1.isNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(defaultValueDataset0.getNotify());
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      assertEquals(RectangleEdge.BOTTOM, rectangleEdge0);
      
      dialPlot1.setView(834.759560969125, (-3008.0), 0.0, 1.0F);
      assertEquals(0.0, dialPlot1.getViewWidth(), 0.01);
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertTrue(dialPlot1.isNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(834.759560969125, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals((-3008.0), dialPlot1.getViewY(), 0.01);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin();
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertNotNull(dialPointer_Pin0);
      
      boolean boolean0 = dialPointer_Pin0.equals(dialPlot0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertFalse(boolean0);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.addPointer(dialPointer_Pin0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPointer_Pin0.isVisible());
      assertEquals(0, dialPointer_Pin0.getDatasetIndex());
      assertEquals(0.9, dialPointer_Pin0.getRadius(), 0.01);
      assertTrue(dialPointer_Pin0.isClippedToWindow());
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      boolean boolean1 = dialPlot0.equals(dialPlot1);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, dialPlot1.getViewWidth(), 0.01);
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertTrue(dialPlot1.isNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(834.759560969125, dialPlot1.getViewX(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals((-3008.0), dialPlot1.getViewY(), 0.01);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertFalse(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot0, dialPlot1);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayer dialLayer0 = dialPlot0.getBackground();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialLayer0);
      assertFalse(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(25.5);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setDataset((ValueDataset) defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      assertEquals(1.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(1.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(1.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(1.0, rectangleInsets0.getLeft(), 0.01);
      assertNotNull(rectangleInsets0);
      
      String string0 = rectangleInsets0.toString();
      assertEquals(1.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(1.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(1.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(1.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals("RectangleInsets[t=1.0,l=1.0,b=1.0,r=1.0]", string0);
      assertNotNull(string0);
      
      dialPlot0.setInsets(rectangleInsets0, true);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(1.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(1.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(1.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setInsets(rectangleInsets0);
      assertTrue(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(1.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(1.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(1.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      defaultValueDataset0.setNotify(false);
      assertFalse(defaultValueDataset0.getNotify());
      
      DefaultValueDataset defaultValueDataset1 = (DefaultValueDataset)dialPlot0.getDataset();
      assertFalse(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertFalse(defaultValueDataset1.getNotify());
      assertNotNull(defaultValueDataset1);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertSame(defaultValueDataset1, defaultValueDataset0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-3));
      assertFalse(defaultValueDataset0.getNotify());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertNull(dialPointer0);
      assertSame(defaultValueDataset0, defaultValueDataset1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.getLayerIndex((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(1727.6288553729266);
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewWidth();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      boolean boolean0 = dialPlot0.fetchElementHintingFlag();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(boolean0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertNotNull(standardDialScale0);
      
      DialScale dialScale0 = dialPlot0.getScaleForDataset(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.addScale(387, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.setBackground((DialLayer) null);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      standardDialScale0.setMajorTickStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      boolean boolean1 = standardDialScale0.hasListener(dialPlot0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      standardDialScale0.setUpperBound(2.0);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(2.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      
      double double1 = dialPlot0.getValue(0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1727.6288553729266, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      int int0 = dialPlot0.getLayerIndex(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(2.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(0, int0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.addLayer(standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(2.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double2 = dialPlot0.getViewHeight();
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      dialPlot0.addScale(387, standardDialScale0);
      assertTrue(defaultValueDataset0.getNotify());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(2.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = null;
      try {
        dialLayerChangeEvent0 = new DialLayerChangeEvent((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      StandardDialScale standardDialScale0 = new StandardDialScale(10, 1.0F, 3107.2455194408494, 10, 1.0F, 37);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertNotNull(standardDialScale0);
      
      dialPlot0.setBackground(standardDialScale0);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialCap dialCap0 = new DialCap();
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertNotNull(dialCap0);
      
      boolean boolean0 = standardDialScale0.equals(dialCap0);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertTrue(dialCap0.isVisible());
      assertEquals(0.05, dialCap0.getRadius(), 0.01);
      assertTrue(dialCap0.isClippedToWindow());
      assertFalse(boolean0);
      
      int int0 = 193;
      dialPlot0.mapDatasetToScale(37, (-484));
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      double double0 = dialPlot0.getViewHeight();
      assertFalse(dialPlot0.isSubplot());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.setBackgroundImageAlignment(193);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      int int1 = dialPlot0.getDatasetCount();
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      standardDialScale0.setTickLabelOffset(0.0);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      
      double double1 = dialPlot0.getViewHeight();
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(jFreeChart0.isBorderVisible());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertNotNull(jFreeChart0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      BasicStroke basicStroke0 = (BasicStroke)jFreeChart0.getBorderStroke();
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(jFreeChart0.isBorderVisible());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNull(jFreeChart0.getID());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      
      dialPlot0.addScale(32, standardDialScale0);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialScale dialScale0 = dialPlot0.getScale(453);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset((-635));
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      dialPlot0.addScale(2048, standardDialScale0);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isOutlineVisible());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertEquals(193, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertTrue(standardDialScale0.isVisible());
      assertEquals(0.0, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(37, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(10.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertEquals(1.0, standardDialScale0.getUpperBound(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(3107.2455194408494, standardDialScale0.getStartAngle(), 0.01);
      assertEquals(1.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertEquals(10.0, standardDialScale0.getExtent(), 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(2048);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2048, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      float float0 = 1.0F;
      dialPlot0.setBackgroundImageAlpha(1.0F);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      StandardDialScale standardDialScale0 = new StandardDialScale();
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertNotNull(standardDialScale0);
      
      BasicStroke basicStroke0 = (BasicStroke)standardDialScale0.getMajorTickStroke();
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(3.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      dialPlot0.setOutlineStroke(basicStroke0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertTrue(standardDialScale0.getFirstTickLabelVisible());
      assertTrue(standardDialScale0.getTickLabelsVisible());
      assertTrue(standardDialScale0.isVisible());
      assertEquals(100.0, standardDialScale0.getUpperBound(), 0.01);
      assertEquals(175.0, standardDialScale0.getStartAngle(), 0.01);
      assertEquals((-170.0), standardDialScale0.getExtent(), 0.01);
      assertEquals(10.0, standardDialScale0.getMajorTickIncrement(), 0.01);
      assertEquals(0.7, standardDialScale0.getTickRadius(), 0.01);
      assertTrue(standardDialScale0.isClippedToWindow());
      assertEquals(0.1, standardDialScale0.getTickLabelOffset(), 0.01);
      assertEquals(4, standardDialScale0.getMinorTickCount());
      assertEquals(0.04, standardDialScale0.getMajorTickLength(), 0.01);
      assertEquals(0.02, standardDialScale0.getMinorTickLength(), 0.01);
      assertEquals(0.0, standardDialScale0.getLowerBound(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(3.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int int0 = 20;
      int int1 = dialPlot0.getDatasetCount();
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Color color0 = (Color)SymbolAxis.DEFAULT_GRID_BAND_PAINT;
      assertEquals(128, color0.getAlpha());
      assertEquals((-2132219160), color0.getRGB());
      assertEquals(232, color0.getRed());
      assertEquals(3, color0.getTransparency());
      assertEquals(232, color0.getBlue());
      assertEquals(234, color0.getGreen());
      assertNotNull(color0);
      
      dialPlot0.setOutlinePaint(color0);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(128, color0.getAlpha());
      assertEquals((-2132219160), color0.getRGB());
      assertEquals(232, color0.getRed());
      assertEquals(3, color0.getTransparency());
      assertEquals(232, color0.getBlue());
      assertEquals(234, color0.getGreen());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setCap((DialLayer) null);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.isNotify());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setNotify(false);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(1.0F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertFalse(dialPlot0.isNotify());
      assertTrue(dialPlot0.isOutlineVisible());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.removePointer(20);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      assertEquals(RectangleEdge.TOP, rectangleEdge0);
      
      DialScale dialScale0 = dialPlot0.getScale((-4263));
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialScale0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot1 = new DialPlot();
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      boolean boolean0 = dialPlot0.equals(dialPlot1);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertTrue(boolean0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot0, dialPlot1);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset((-4263));
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(valueDataset0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double0 = dialPlot0.getViewX();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, double0, 0.01);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      String string0 = dialPlot1.getPlotType();
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertEquals("DialPlot", string0);
      assertNotNull(string0);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      Float float0 = new Float((float) (-4263));
      assertEquals((-4263.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      dialPlot1.setNoDataMessage("Null 'key' argument.");
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertEquals("Null 'key' argument.", dialPlot1.getNoDataMessage());
      assertFalse(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot1.getPointerForDataset(10);
      assertFalse(dialPlot1.isSubplot());
      assertTrue(dialPlot1.isOutlineVisible());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertTrue(dialPlot1.isNotify());
      assertEquals("Null 'key' argument.", dialPlot1.getNoDataMessage());
      assertNull(dialPointer0);
      assertFalse(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot1.removePointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      assertEquals(RectangleEdge.TOP, rectangleEdge0);
      
      DialScale dialScale0 = dialPlot0.getScale((-4263));
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialScale0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      assertTrue(defaultValueDataset0.getNotify());
      assertNotNull(defaultValueDataset0);
      
      DialPlot dialPlot1 = new DialPlot(defaultValueDataset0);
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertFalse(dialPlot1.isSubplot());
      assertNotNull(dialPlot1);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = dialPlot0.equals(dialPlot1);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertFalse(dialPlot1.isSubplot());
      assertTrue(boolean0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot0, dialPlot1);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset((-4263));
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(valueDataset0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = dialPlot0.getViewX();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, double0, 0.01);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      String string0 = dialPlot1.getPlotType();
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertFalse(dialPlot1.isSubplot());
      assertEquals("DialPlot", string0);
      assertNotNull(string0);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double1 = dialPlot0.getViewY();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0.0, double1, 0.01);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertEquals(double1, double0, 0.01);
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ValueDataset valueDataset1 = dialPlot0.getDataset();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(valueDataset1);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialPointer dialPointer0 = dialPlot1.getPointerForDataset(47);
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertFalse(dialPlot1.isSubplot());
      assertNull(dialPointer0);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      dialPlot0.setDataset(10, (ValueDataset) null);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double2 = dialPlot1.getValue(10);
      assertTrue(defaultValueDataset0.getNotify());
      assertNull(dialPlot1.getNoDataMessage());
      assertEquals(15, dialPlot1.getBackgroundImageAlignment());
      assertEquals(1.0, dialPlot1.getViewWidth(), 0.01);
      assertEquals("DialPlot", dialPlot1.getPlotType());
      assertEquals(0.5F, dialPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.0, dialPlot1.getViewX(), 0.01);
      assertEquals(0.0, dialPlot1.getViewY(), 0.01);
      assertEquals(1.0, dialPlot1.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isNotify());
      assertEquals(1.0F, dialPlot1.getBackgroundAlpha(), 0.01F);
      assertTrue(dialPlot1.isOutlineVisible());
      assertFalse(dialPlot1.fetchElementHintingFlag());
      assertFalse(dialPlot1.isSubplot());
      assertEquals(Double.NaN, double2, 0.01);
      assertTrue(dialPlot1.equals((Object)dialPlot0));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(dialPlot1, dialPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayer dialLayer0 = dialPlot0.getBackground();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialLayer0);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DialLayer dialLayer1 = dialPlot0.getBackground();
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialLayer1);
      assertTrue(dialPlot0.equals((Object)dialPlot1));
      assertNotSame(dialPlot0, dialPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      // Undeclared exception!
      try { 
        dialPlot0.addScale(1973, (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNotNull(dialPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = new JFreeChart("K3>v@*", dialPlot0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(jFreeChart0.getElementHinting());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNotNull(jFreeChart0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      ArcDialFrame arcDialFrame0 = (ArcDialFrame)dialPlot0.getDialFrame();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      int int0 = dialPlot0.getDatasetCount();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(0, int0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2275, (double) 10, (double) 0.5F, chartRenderingInfo0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(jFreeChart0.getElementHinting());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(2275, bufferedImage0.getHeight());
      assertNotNull(bufferedImage0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      
      ValueDataset valueDataset0 = dialPlot0.getDataset(0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(valueDataset0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      ValueDataset valueDataset1 = dialPlot0.getDataset(0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(valueDataset1);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      int int1 = dialPlot0.hashCode();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(int1 == int0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getFrame();
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)DialPlot.rectangleByRadius(rectangle2D_Double1, 1.0F, 0);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double2);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      
      dialPlot0.setBackground(arcDialFrame0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      dialPlot0.mapDatasetToScale(0, (-233));
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(jFreeChart0.getElementHinting());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(2275, bufferedImage0.getHeight());
      assertNotNull(sunGraphics2D0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      
      Point2D.Double point2D_Double0 = new Point2D.Double();
      assertNotNull(point2D_Double0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      
      PlotState plotState0 = new PlotState();
      assertNotNull(plotState0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      dialPlot0.draw(sunGraphics2D0, rectangle2D_Double2, point2D_Double0, plotState0, plotRenderingInfo0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertFalse(jFreeChart0.getElementHinting());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getWidth());
      assertEquals(2275, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(2275, bufferedImage0.getHeight());
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals((-10197866), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals((-10197866), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(2, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      
      double double0 = dialPlot0.getValue(87);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      DialPointer dialPointer0 = dialPlot0.getPointerForDataset(0);
      assertEquals("DialPlot", dialPlot0.getPlotType());
      assertNull(dialPlot0.getNoDataMessage());
      assertEquals(0.5F, dialPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(1.0, dialPlot0.getViewHeight(), 0.01);
      assertEquals(1.0F, dialPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, dialPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, dialPlot0.getViewX(), 0.01);
      assertEquals(1.0, dialPlot0.getViewWidth(), 0.01);
      assertTrue(dialPlot0.isOutlineVisible());
      assertEquals(0.0, dialPlot0.getViewY(), 0.01);
      assertFalse(dialPlot0.fetchElementHintingFlag());
      assertEquals(15, dialPlot0.getBackgroundImageAlignment());
      assertTrue(dialPlot0.isNotify());
      assertFalse(dialPlot0.isSubplot());
      assertNull(dialPointer0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      JFreeChart jFreeChart0 = new JFreeChart("K3>v@*", dialPlot0);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.getDatasetCount();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2275, (double) 10, (double) 0.5F, chartRenderingInfo0);
      dialPlot0.getDataset(0);
      dialPlot0.getDataset(0);
      dialPlot0.hashCode();
      dialPlot0.setBackground(dialFrame0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getFrame();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 1.0F, 0);
      dialPlot0.setBackground(dialFrame0);
      dialPlot0.mapDatasetToScale(0, (-233));
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      dialPlot0.draw(graphics2D0, rectangle2D1, point2D_Double0, plotState0, plotRenderingInfo0);
      dialPlot0.getValue(87);
      dialPlot0.getPointerForDataset(0);
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, (-868));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -868
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.setView((-719.1), 2.0, 0.0, 2.0);
      dialPlot0.getDialFrame();
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2711, (double) 1.0F, (-4984.5810345607), chartRenderingInfo0);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      // Undeclared exception!
      try { 
        bufferedImage0.getSubimage(15, (-2712), 15, 10);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DialPlot dialPlot0 = new DialPlot(defaultValueDataset0);
      dialPlot0.getViewWidth();
      defaultValueDataset0.equals((Object) null);
      StandardDialScale standardDialScale0 = new StandardDialScale();
      dialPlot0.getScaleForDataset(0);
      dialPlot0.addScale(387, standardDialScale0);
      standardDialScale0.hasListener(dialPlot0);
      dialPlot0.getValue(0);
      dialPlot0.getLayerIndex(standardDialScale0);
      dialPlot0.addLayer(standardDialScale0);
      DialLayerChangeEvent dialLayerChangeEvent0 = null;
      try {
        dialLayerChangeEvent0 = new DialLayerChangeEvent((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      int int0 = (-966);
      Font.getFont("frame");
      String string0 = "";
      DecimalFormatSymbols decimalFormatSymbols0 = mock(DecimalFormatSymbols.class, new ViolatedAssumptionAnswer());
      doReturn("frame").when(decimalFormatSymbols0).clone();
      DecimalFormat decimalFormat0 = null;
      try {
        decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.text.DecimalFormatSymbols
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Font.getFont("frame");
      DialPlot dialPlot0 = new DialPlot();
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(10, 10);
      dialPlot0.setDialFrame(arcDialFrame0);
      dialPlot0.getScale((-966));
      DialPointer.Pin dialPointer_Pin0 = new DialPointer.Pin((-966));
      dialPointer_Pin0.radius = 0.0;
      dialPlot0.getPointerIndex(dialPointer_Pin0);
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      DialCap dialCap0 = new DialCap();
      dialCap0.setOutlinePaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      dialPlot0.setCap(dialCap0);
      dialCap0.setOutlinePaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(364.0184278739716, 1.0F, 0.08, 1.0F);
      LegendTitle legendTitle0 = new LegendTitle(dialPlot0);
      JFreeChart jFreeChart0 = new JFreeChart(dialPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 843);
      chartPanel0.getFontMetrics(jFreeChart0.DEFAULT_TITLE_FONT);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      jFreeChart0.addProgressListener(chartPanel0);
      legendTitle0.arrange(graphics2D0, (RectangleConstraint) null);
      Rectangle2D rectangle2D0 = legendTitle0.getBounds();
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createUnion(rectangle2D0);
      DialPlot.rectangleByRadius(rectangle2D1, 0.08, 0.08);
      DialPointer.Pointer dialPointer_Pointer0 = new DialPointer.Pointer(421);
      dialPlot0.addPointer(dialPointer_Pointer0);
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(0, 1, (-1), 140);
      // Undeclared exception!
      try { 
        jFreeChart0.draw(graphics2D0, (Rectangle2D) rectangle0, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialPointer$Pointer", e);
      }
  }
}
