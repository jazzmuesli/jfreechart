/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:00:34 GMT 2019
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.GeneralPath;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.plot.dial.ArcDialFrame;
import org.jfree.chart.plot.dial.DialLayerChangeEvent;
import org.jfree.chart.plot.dial.DialLayerChangeListener;
import org.jfree.chart.plot.dial.DialPlot;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArcDialFrame_ESTest extends ArcDialFrame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = 346.098788;
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(346.098788, 346.098788);
      Stroke stroke0 = arcDialFrame0.getStroke();
      arcDialFrame0.setStroke(stroke0);
      arcDialFrame0.hashCode();
      arcDialFrame0.getInnerRadius();
      arcDialFrame0.getInnerRadius();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.hasListener(eventListener0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      double double1 = 1874.16877207366;
      double double2 = 364.54814554027;
      double double3 = 787.679079081;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-1223.05921), (double)1.0F, 1874.16877207366, 0.25).when(rectangle2D0).getCenterX();
      doReturn((double)1.0F, (double)10, (double)1.0F, 1354.413568009247).when(rectangle2D0).getCenterY();
      doReturn(0.25, 364.54814554027, 631.540861848, Double.NaN).when(rectangle2D0).getHeight();
      doReturn(Double.NaN, 0.25, (double)1.0F, 787.679079081).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: InternalError");
      
      } catch(InternalError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(4.0, 4.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.9, 0.9, (double)1.0F, 589.9701232).when(rectangle2D0).getCenterX();
      doReturn((double)10, (-1295.5964884719779), 0.9, (double)1.0F).when(rectangle2D0).getCenterY();
      doReturn((double)10, 589.9701232, 4.0, 2300.4).when(rectangle2D0).getHeight();
      doReturn(3080.55213, 2300.4, 589.9701232, (-1043.51997473603)).when(rectangle2D0).getWidth();
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      arcDialFrame0.equals(arcDialFrame0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.getOuterRadius();
      arcDialFrame0.getInnerRadius();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F, 777.25558, 0.02, (-1450.35)).when(rectangle2D1).getCenterX();
      doReturn(589.9701232, (-1777.8764207163), (-3534.56725839), (-1450.35)).when(rectangle2D1).getCenterY();
      doReturn(6010.3, (-5057.7583668), 343.92845031146, (double)1.0F).when(rectangle2D1).getHeight();
      doReturn(346.098788, 0.9, 1.0, 4.0).when(rectangle2D1).getWidth();
      arcDialFrame0.draw(graphics2D1, dialPlot1, rectangle2D1, rectangle2D1);
      // Undeclared exception!
      try { 
        arcDialFrame0.setOuterRadius((-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'radius' argument.
         //
         verifyException("org.jfree.chart.plot.dial.ArcDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      Paint paint0 = arcDialFrame0.getBackgroundPaint();
      arcDialFrame0.setBackgroundPaint(paint0);
      Stroke stroke0 = arcDialFrame0.getStroke();
      arcDialFrame0.setStroke(stroke0);
      arcDialFrame0.clone();
      arcDialFrame0.setExtent(0.0);
      arcDialFrame0.setForegroundPaint(paint0);
      arcDialFrame0.equals(stroke0);
      arcDialFrame0.isClippedToWindow();
      Paint paint1 = arcDialFrame0.getBackgroundPaint();
      arcDialFrame0.setBackgroundPaint(paint1);
      arcDialFrame0.isClippedToWindow();
      arcDialFrame0.getInnerRadius();
      arcDialFrame0.getOuterRadius();
      arcDialFrame0.getExtent();
      arcDialFrame0.getExtent();
      arcDialFrame0.setOuterRadius(0.0);
      arcDialFrame0.getForegroundPaint();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(1842.269426832, 1842.269426832);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.notifyListeners(dialLayerChangeEvent0);
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      // Undeclared exception!
      try { 
        arcDialFrame0.setStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(1819.856344, 1819.856344);
      arcDialFrame0.setExtent(1819.856344);
      ArcDialFrame arcDialFrame1 = new ArcDialFrame();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame1.removeChangeListener(dialLayerChangeListener0);
      Stroke stroke0 = arcDialFrame0.getStroke();
      arcDialFrame1.setStroke(stroke0);
      double double0 = (-3872.89699);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.notifyListeners(dialLayerChangeEvent0);
      ArcDialFrame arcDialFrame2 = new ArcDialFrame((-3872.89699), 0.0);
      Paint paint0 = arcDialFrame2.getForegroundPaint();
      arcDialFrame1.setBackgroundPaint(paint0);
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame2.removeChangeListener(dialLayerChangeListener1);
      arcDialFrame2.setExtent((-3872.89699));
      arcDialFrame0.equals(arcDialFrame1);
      Paint paint1 = null;
      arcDialFrame2.hashCode();
      // Undeclared exception!
      try { 
        arcDialFrame0.setForegroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      double double0 = 3538.7;
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.notifyListeners(dialLayerChangeEvent0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        arcDialFrame0.getWindow((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame1);
      
      arcDialFrame0.equals(arcDialFrame1);
      arcDialFrame0.setExtent((-1579.18));
      Color color0 = (Color)arcDialFrame0.getForegroundPaint();
      arcDialFrame0.setForegroundPaint(color0);
      arcDialFrame0.setStartAngle(3544.0378);
      arcDialFrame0.setForegroundPaint(color0);
      arcDialFrame0.setStartAngle(1260.4);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      arcDialFrame0.getWindow(rectangle2D0);
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      arcDialFrame0.equals(arcDialFrame2);
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      arcDialFrame0.getStroke();
      arcDialFrame0.setInnerRadius(0.0);
      arcDialFrame0.setStartAngle(1260.4);
      arcDialFrame0.getStartAngle();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      arcDialFrame0.getWindow(rectangle2D1);
      arcDialFrame0.getInnerRadius();
      arcDialFrame0.setStroke(basicStroke0);
      arcDialFrame0.getBackgroundPaint();
      ArcDialFrame arcDialFrame3 = new ArcDialFrame();
      ArcDialFrame arcDialFrame4 = (ArcDialFrame)arcDialFrame3.clone();
      arcDialFrame0.equals(arcDialFrame4);
      arcDialFrame0.clone();
      arcDialFrame0.setOuterRadius(0.0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame((-813.6261535455371), (-813.6261535455371));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D1);
      arcDialFrame0.setExtent((-813.6261535455371));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.hasListener(eventListener0);
      Paint paint0 = null;
      // Undeclared exception!
      try { 
        arcDialFrame0.setBackgroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(0.0, 0.0);
      arcDialFrame0.getStartAngle();
      Stroke stroke0 = arcDialFrame0.getStroke();
      arcDialFrame0.setStroke(stroke0);
      arcDialFrame0.setOuterRadius(0.0);
      arcDialFrame0.equals(stroke0);
      arcDialFrame0.getOuterRadius();
      Paint paint0 = arcDialFrame0.getForegroundPaint();
      arcDialFrame0.setForegroundPaint(paint0);
      arcDialFrame0.getStroke();
      arcDialFrame0.setStartAngle(0.0);
      arcDialFrame0.setInnerRadius(0.0);
      arcDialFrame0.setOuterRadius(0.0);
      arcDialFrame0.getBackgroundPaint();
      arcDialFrame0.setInnerRadius(0.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      Color color0 = (Color)arcDialFrame0.getForegroundPaint();
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-10197866), color0.getRGB());
      assertEquals(150, color0.getBlue());
      assertEquals(100, color0.getRed());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      arcDialFrame0.setForegroundPaint(color0);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-10197866), color0.getRGB());
      assertEquals(150, color0.getBlue());
      assertEquals(100, color0.getRed());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      
      arcDialFrame0.setOuterRadius(0.0);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Color color1 = (Color)arcDialFrame0.getForegroundPaint();
      assertSame(color1, color0);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(100, color1.getGreen());
      assertEquals(100, color1.getRed());
      assertEquals(150, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals(255, color1.getAlpha());
      assertEquals((-10197866), color1.getRGB());
      assertNotNull(color1);
      
      arcDialFrame0.setBackgroundPaint(color1);
      assertSame(color1, color0);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(100, color1.getGreen());
      assertEquals(100, color1.getRed());
      assertEquals(150, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals(255, color1.getAlpha());
      assertEquals((-10197866), color1.getRGB());
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setStroke(basicStroke0);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame1.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      arcDialFrame0.setOuterRadius(5067.631948035167);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.notifyListeners(dialLayerChangeEvent0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      boolean boolean0 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean0);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame1.getOuterRadius(), 0.01);
      
      arcDialFrame0.hashCode();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame2.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertTrue(arcDialFrame2.isVisible());
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertEquals(180.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame2);
      
      double double0 = arcDialFrame0.getInnerRadius();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.25, double0, 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Color color2 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertSame(color2, color0);
      assertSame(color2, color1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1, color2.getTransparency());
      assertEquals(255, color2.getAlpha());
      assertEquals((-10197866), color2.getRGB());
      assertEquals(100, color2.getGreen());
      assertEquals(150, color2.getBlue());
      assertEquals(100, color2.getRed());
      assertNotNull(color2);
      
      arcDialFrame0.setForegroundPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Color color3 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(color3, color2);
      assertNotSame(color3, color0);
      assertNotSame(color3, color1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(color3.equals((Object)color2));
      assertFalse(color3.equals((Object)color0));
      assertFalse(color3.equals((Object)color1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(128, color3.getGreen());
      assertEquals(128, color3.getRed());
      assertEquals(255, color3.getAlpha());
      assertEquals(128, color3.getBlue());
      assertEquals((-8355712), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      assertNotNull(color3);
      
      arcDialFrame0.setBackgroundPaint(color3);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(color3, color2);
      assertNotSame(color3, color0);
      assertNotSame(color3, color1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(color3.equals((Object)color2));
      assertFalse(color3.equals((Object)color0));
      assertFalse(color3.equals((Object)color1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(128, color3.getGreen());
      assertEquals(128, color3.getRed());
      assertEquals(255, color3.getAlpha());
      assertEquals(128, color3.getBlue());
      assertEquals((-8355712), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      
      arcDialFrame0.setInnerRadius(1.0F);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      
      double double1 = arcDialFrame0.getExtent();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(180.0, double1, 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getWidth();
      arcDialFrame0.draw(graphics2D1, dialPlot1, rectangle2D1, rectangle2D1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setBackgroundPaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setStartAngle(10);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(10.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      
      Color color4 = (Color)arcDialFrame0.getBackgroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(color4, color2);
      assertNotSame(color4, color3);
      assertNotSame(color4, color1);
      assertNotSame(color4, color0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(color4.equals((Object)color2));
      assertFalse(color4.equals((Object)color3));
      assertFalse(color4.equals((Object)color1));
      assertFalse(color4.equals((Object)color0));
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(10.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color4.getBlue());
      assertEquals(255, color4.getGreen());
      assertEquals(1, color4.getTransparency());
      assertEquals((-1), color4.getRGB());
      assertEquals(255, color4.getAlpha());
      assertEquals(255, color4.getRed());
      assertNotNull(color4);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.removeChangeListener(dialLayerChangeListener0);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setVisible(true);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      double double0 = arcDialFrame0.getExtent();
      assertEquals(180.0, double0, 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Color color0 = (Color)arcDialFrame0.getBackgroundPaint();
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      assertNotNull(color0);
      
      arcDialFrame0.setForegroundPaint(color0);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      
      arcDialFrame0.setStartAngle(180.0);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getStartAngle(), 0.01);
      
      arcDialFrame0.setBackgroundPaint(color0);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      
      // Undeclared exception!
      try { 
        arcDialFrame0.getOuterWindow((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      ArcDialFrame arcDialFrame1 = new ArcDialFrame(1343.74165996258, 1.0F);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1343.74165996258, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertTrue(arcDialFrame1.isVisible());
      assertNotNull(arcDialFrame1);
      
      arcDialFrame1.setVisible(false);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1343.74165996258, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertFalse(arcDialFrame1.isVisible());
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.notifyListeners(dialLayerChangeEvent0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame1.getWindow(rectangle2D1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1343.74165996258, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertFalse(arcDialFrame1.isVisible());
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      boolean boolean0 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean0);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1343.74165996258, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertFalse(arcDialFrame1.isVisible());
      
      boolean boolean1 = arcDialFrame0.isClippedToWindow();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setOuterRadius(0.02);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.02, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame1.setBackgroundPaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1343.74165996258, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertFalse(arcDialFrame1.isVisible());
      
      ArcDialFrame arcDialFrame2 = new ArcDialFrame();
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame1));
      assertEquals(180.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame2.isVisible());
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame2);
      
      boolean boolean2 = arcDialFrame0.equals(arcDialFrame2);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(180.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame2.isVisible());
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.02, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D2).getWidth();
      GeneralPath generalPath1 = (GeneralPath)arcDialFrame2.getOuterWindow(rectangle2D2);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(generalPath1, generalPath0);
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame1));
      assertFalse(generalPath1.equals((Object)generalPath0));
      assertEquals(180.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame2.isVisible());
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertEquals(1, generalPath1.getWindingRule());
      assertNotNull(generalPath1);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        arcDialFrame2.draw(graphics2D1, dialPlot1, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      
      double double0 = arcDialFrame0.getStartAngle();
      assertEquals(0.0, double0, 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(193.994944521044, 0.0);
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      
      arcDialFrame0.hashCode();
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setStroke(basicStroke0);
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      
      double double0 = (-315.312268663);
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(193.994944521044, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertNotNull(arcDialFrame1);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame1));
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertTrue(arcDialFrame2.isVisible());
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertEquals(193.994944521044, arcDialFrame2.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame2.getExtent(), 0.01);
      assertNotNull(arcDialFrame2);
      
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      Paint paint0 = null;
      arcDialFrame0.setExtent(2810.796073787489);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2810.796073787489, arcDialFrame0.getExtent(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getWidth();
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D1, rectangle2D1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(193.994944521044, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2810.796073787489, arcDialFrame0.getExtent(), 0.01);
      
      // Undeclared exception!
      try { 
        arcDialFrame0.setForegroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertNotNull(arcDialFrame0);
      
      boolean boolean0 = arcDialFrame0.isClippedToWindow();
      assertFalse(boolean0);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.addChangeListener(dialLayerChangeListener0);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getWindow(rectangle2D1);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      arcDialFrame0.setOuterRadius(1.0F);
      assertEquals(1.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.removeChangeListener(dialLayerChangeListener1);
      assertEquals(1.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      // Undeclared exception!
      try { 
        arcDialFrame0.draw(graphics2D1, dialPlot1, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      
      arcDialFrame0.hashCode();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      arcDialFrame0.setInnerRadius(2056.7);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      Color color0 = (Color)arcDialFrame0.getForegroundPaint();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(255, color0.getAlpha());
      assertEquals(100, color0.getRed());
      assertEquals(150, color0.getBlue());
      assertEquals((-10197866), color0.getRGB());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertNotNull(color0);
      
      arcDialFrame0.setBackgroundPaint(color0);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(255, color0.getAlpha());
      assertEquals(100, color0.getRed());
      assertEquals(150, color0.getBlue());
      assertEquals((-10197866), color0.getRGB());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      
      arcDialFrame0.setExtent(2056.7);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2056.7, arcDialFrame0.getExtent(), 0.01);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.hashCode();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2056.7, arcDialFrame0.getExtent(), 0.01);
      
      boolean boolean0 = arcDialFrame0.hasListener(eventListener0);
      assertFalse(boolean0);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2056.7, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.hashCode();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2056.7, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.setForegroundPaint(color0);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2056.7, arcDialFrame0.getExtent(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(100, color0.getRed());
      assertEquals(150, color0.getBlue());
      assertEquals((-10197866), color0.getRGB());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      
      double double0 = arcDialFrame0.getInnerRadius();
      assertEquals(2056.7, double0, 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2056.7, arcDialFrame0.getExtent(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2056.7, arcDialFrame0.getExtent(), 0.01);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setExtent(114.3);
      assertEquals(114.3, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      arcDialFrame0.setStroke(basicStroke0);
      assertEquals(114.3, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(2056.7, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      
      arcDialFrame0.setInnerRadius(631.540861848);
      assertEquals(631.540861848, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(114.3, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      Color color1 = (Color)arcDialFrame0.getForegroundPaint();
      assertSame(color1, color0);
      assertEquals(100, color1.getGreen());
      assertEquals(100, color1.getRed());
      assertEquals(150, color1.getBlue());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals((-10197866), color1.getRGB());
      assertEquals(631.540861848, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(114.3, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(color1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setStartAngle((-1328.02923073));
      assertEquals((-1328.02923073), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      
      arcDialFrame0.setStroke(basicStroke0);
      assertEquals((-1328.02923073), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      
      boolean boolean0 = arcDialFrame0.isClippedToWindow();
      assertFalse(boolean0);
      assertEquals((-1328.02923073), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      
      BasicStroke basicStroke1 = (BasicStroke)arcDialFrame0.getStroke();
      assertSame(basicStroke1, basicStroke0);
      assertEquals((-1328.02923073), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(2.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertNotNull(basicStroke1);
      
      arcDialFrame0.hashCode();
      assertEquals((-1328.02923073), arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(4704.5851808, 0.75);
      assertEquals(0.75, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(4704.5851808, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      ArcDialFrame arcDialFrame1 = new ArcDialFrame(4704.5851808, (-1039.61506629812));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(4704.5851808, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals((-1039.61506629812), arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame1);
      
      arcDialFrame1.setExtent((-1.0));
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertTrue(arcDialFrame1.isVisible());
      assertEquals((-1.0), arcDialFrame1.getExtent(), 0.01);
      assertEquals(4704.5851808, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      
      arcDialFrame1.hashCode();
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertTrue(arcDialFrame1.isVisible());
      assertEquals((-1.0), arcDialFrame1.getExtent(), 0.01);
      assertEquals(4704.5851808, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      
      boolean boolean0 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean0);
      assertEquals(0.75, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(4704.5851808, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertTrue(arcDialFrame1.isVisible());
      assertEquals((-1.0), arcDialFrame1.getExtent(), 0.01);
      assertEquals(4704.5851808, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertEquals(0.75, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(4704.5851808, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame2.isVisible());
      assertEquals(0.75, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertEquals(4704.5851808, arcDialFrame2.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame2);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.75, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(4704.5851808, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
      
      double double0 = arcDialFrame1.getInnerRadius();
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertNotSame(arcDialFrame1, arcDialFrame2);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame2));
      assertEquals(0.25, double0, 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertTrue(arcDialFrame1.isVisible());
      assertEquals((-1.0), arcDialFrame1.getExtent(), 0.01);
      assertEquals(4704.5851808, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      
      Color color0 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.75, arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(4704.5851808, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(100, color0.getGreen());
      assertEquals(100, color0.getRed());
      assertEquals((-10197866), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(150, color0.getBlue());
      assertNotNull(color0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(0.0, 0.0);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertNotNull(arcDialFrame0);
      
      arcDialFrame0.setOuterRadius(0.0);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertNotNull(arcDialFrame1);
      
      boolean boolean0 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertTrue(boolean0);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame1));
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame2.isVisible());
      assertEquals(0.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame2.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertNotNull(arcDialFrame2);
      
      boolean boolean1 = arcDialFrame0.equals(arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame2.isVisible());
      assertEquals(0.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame2.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame2.isClippedToWindow());
      
      double double0 = arcDialFrame0.getInnerRadius();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.25, double0, 0.01);
      assertEquals(0.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        arcDialFrame0.draw((Graphics2D) null, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.ArcDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(0.0, 1878.8411695506);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertNotNull(arcDialFrame0);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getWindow(rectangle2D0);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      arcDialFrame0.setStartAngle(0.0);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.setOuterRadius(0.0);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.setOuterRadius(1878.8411695506);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.hashCode();
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      Color color0 = (Color)arcDialFrame0.getBackgroundPaint();
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getGreen());
      assertNotNull(color0);
      
      double double0 = arcDialFrame0.getExtent();
      assertEquals(1878.8411695506, double0, 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      double double1 = arcDialFrame0.getOuterRadius();
      assertEquals(double1, double0, 0.01);
      assertEquals(1878.8411695506, double1, 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.setExtent(1878.8411695506);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.setStroke(basicStroke0);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      GeneralPath generalPath1 = (GeneralPath)arcDialFrame0.getWindow(rectangle2D1);
      assertNotSame(generalPath1, generalPath0);
      assertFalse(generalPath1.equals((Object)generalPath0));
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertEquals(1, generalPath1.getWindingRule());
      assertNotNull(generalPath1);
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(1878.8411695506, arcDialFrame1.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame1);
      
      Color color1 = (Color)arcDialFrame0.getBackgroundPaint();
      assertSame(color1, color0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(255, color1.getAlpha());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      assertEquals(128, color1.getRed());
      assertEquals(128, color1.getBlue());
      assertEquals(128, color1.getGreen());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      assertNotNull(color1);
      
      double double2 = arcDialFrame0.getInnerRadius();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(0.25, double2, 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D2).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D2).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D2).getWidth();
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D2, rectangle2D2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      double double3 = arcDialFrame0.getInnerRadius();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertNotEquals(double3, double0, 0.01);
      assertEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertEquals(0.25, double3, 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1878.8411695506, arcDialFrame0.getExtent(), 0.01);
      
      // Undeclared exception!
      try { 
        arcDialFrame0.setOuterRadius((-1102.172088));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'radius' argument.
         //
         verifyException("org.jfree.chart.plot.dial.ArcDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame((-4.0), (-500.0));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-500.0), arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-4.0), arcDialFrame0.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame0);
      
      double double0 = arcDialFrame0.getInnerRadius();
      assertEquals(0.25, double0, 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-500.0), arcDialFrame0.getExtent(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-4.0), arcDialFrame0.getStartAngle(), 0.01);
      
      // Undeclared exception!
      try { 
        arcDialFrame0.setInnerRadius((-500.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'radius' argument.
         //
         verifyException("org.jfree.chart.plot.dial.ArcDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame((-3345.27786), (-3345.27786));
      assertEquals((-3345.27786), arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3345.27786), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      Color color0 = (Color)arcDialFrame0.getBackgroundPaint();
      assertEquals((-3345.27786), arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3345.27786), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(128, color0.getRed());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertNotNull(color0);
      
      arcDialFrame0.setBackgroundPaint(color0);
      assertEquals((-3345.27786), arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3345.27786), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(128, color0.getRed());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      
      // Undeclared exception!
      try { 
        arcDialFrame0.setInnerRadius((-3345.27786));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'radius' argument.
         //
         verifyException("org.jfree.chart.plot.dial.ArcDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertNotNull(arcDialFrame0);
      
      double double0 = arcDialFrame0.getInnerRadius();
      assertEquals(0.25, double0, 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      Color color0 = (Color)arcDialFrame0.getForegroundPaint();
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(100, color0.getRed());
      assertEquals(150, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(100, color0.getGreen());
      assertEquals((-10197866), color0.getRGB());
      assertNotNull(color0);
      
      arcDialFrame0.setBackgroundPaint(color0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(100, color0.getRed());
      assertEquals(150, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(100, color0.getGreen());
      assertEquals((-10197866), color0.getRGB());
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertNotNull(arcDialFrame1);
      
      boolean boolean0 = arcDialFrame0.isClippedToWindow();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(boolean0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      arcDialFrame0.hashCode();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertTrue(arcDialFrame2.isVisible());
      assertNotNull(arcDialFrame2);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D0);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      double double1 = arcDialFrame0.getOuterRadius();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.75, double1, 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      
      Color color1 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertSame(color1, color0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(100, color1.getGreen());
      assertEquals(1, color1.getTransparency());
      assertEquals(255, color1.getAlpha());
      assertEquals((-10197866), color1.getRGB());
      assertEquals(150, color1.getBlue());
      assertEquals(100, color1.getRed());
      assertNotNull(color1);
      
      arcDialFrame0.setVisible(false);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      
      ArcDialFrame arcDialFrame3 = new ArcDialFrame();
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertEquals(0.0, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      assertNotNull(arcDialFrame3);
      
      arcDialFrame3.hashCode();
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertEquals(0.0, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      
      arcDialFrame3.setStartAngle(0.25);
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame3.hashCode();
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      
      boolean boolean1 = arcDialFrame3.hasListener(eventListener0);
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertTrue(boolean1 == boolean0);
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertFalse(boolean1);
      assertEquals(0.25, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      
      arcDialFrame3.hashCode();
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      
      boolean boolean2 = arcDialFrame0.equals(arcDialFrame3);
      assertNotSame(arcDialFrame0, arcDialFrame3);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame3));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertFalse(boolean2);
      assertFalse(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      
      arcDialFrame3.hashCode();
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      
      Color color2 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame3);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertSame(color2, color1);
      assertSame(color2, color0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame3));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(255, color2.getAlpha());
      assertEquals((-10197866), color2.getRGB());
      assertEquals(100, color2.getRed());
      assertEquals(150, color2.getBlue());
      assertEquals(100, color2.getGreen());
      assertEquals(1, color2.getTransparency());
      assertNotNull(color2);
      
      double double2 = arcDialFrame0.getInnerRadius();
      assertNotSame(arcDialFrame0, arcDialFrame3);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame3));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(0.25, double2, 0.01);
      assertFalse(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      
      boolean boolean3 = arcDialFrame0.isClippedToWindow();
      assertNotSame(arcDialFrame0, arcDialFrame3);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame3));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertFalse(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      
      ArcDialFrame arcDialFrame4 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame4);
      assertNotSame(arcDialFrame0, arcDialFrame3);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame4, arcDialFrame2);
      assertNotSame(arcDialFrame4, arcDialFrame3);
      assertNotSame(arcDialFrame4, arcDialFrame1);
      assertNotSame(arcDialFrame4, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame3));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame4.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame4.equals((Object)arcDialFrame3));
      assertFalse(arcDialFrame4.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame4.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame4.isClippedToWindow());
      assertEquals(0.0, arcDialFrame4.getStartAngle(), 0.01);
      assertFalse(arcDialFrame4.isVisible());
      assertEquals(0.25, arcDialFrame4.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame4.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame4.getExtent(), 0.01);
      assertNotNull(arcDialFrame4);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      GeneralPath generalPath1 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D1);
      assertNotSame(arcDialFrame0, arcDialFrame4);
      assertNotSame(arcDialFrame0, arcDialFrame3);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(generalPath1, generalPath0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame3));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame4));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(generalPath1.equals((Object)generalPath0));
      assertFalse(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(1, generalPath1.getWindingRule());
      assertNotNull(generalPath1);
      
      Color color3 = (Color)arcDialFrame3.getBackgroundPaint();
      assertNotSame(color3, color0);
      assertNotSame(color3, color1);
      assertNotSame(color3, color2);
      assertNotSame(arcDialFrame3, arcDialFrame0);
      assertNotSame(arcDialFrame3, arcDialFrame2);
      assertNotSame(arcDialFrame3, arcDialFrame4);
      assertNotSame(arcDialFrame3, arcDialFrame1);
      assertFalse(color3.equals((Object)color0));
      assertFalse(color3.equals((Object)color1));
      assertFalse(color3.equals((Object)color2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame4));
      assertFalse(arcDialFrame3.equals((Object)arcDialFrame1));
      assertEquals(128, color3.getGreen());
      assertEquals(128, color3.getBlue());
      assertEquals(128, color3.getRed());
      assertEquals(255, color3.getAlpha());
      assertEquals((-8355712), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      assertEquals(0.25, arcDialFrame3.getStartAngle(), 0.01);
      assertTrue(arcDialFrame3.isVisible());
      assertFalse(arcDialFrame3.isClippedToWindow());
      assertEquals(0.25, arcDialFrame3.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame3.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame3.getOuterRadius(), 0.01);
      assertNotNull(color3);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame0);
      
      Color color0 = (Color)arcDialFrame0.getForegroundPaint();
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals((-10197866), color0.getRGB());
      assertEquals(150, color0.getBlue());
      assertEquals(100, color0.getRed());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      arcDialFrame0.setForegroundPaint(color0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals((-10197866), color0.getRGB());
      assertEquals(150, color0.getBlue());
      assertEquals(100, color0.getRed());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      
      arcDialFrame0.setOuterRadius(0.0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      
      arcDialFrame0.setBackgroundPaint(color0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals((-10197866), color0.getRGB());
      assertEquals(150, color0.getBlue());
      assertEquals(100, color0.getRed());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setStroke(basicStroke0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertNotNull(arcDialFrame1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.setOuterRadius(5067.631948035167);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.notifyListeners(dialLayerChangeEvent0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      boolean boolean0 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean0);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      
      arcDialFrame0.hashCode();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame1));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame2.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame2.getStartAngle(), 0.01);
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertTrue(arcDialFrame2.isVisible());
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame2);
      
      double double0 = arcDialFrame0.getInnerRadius();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.25, double0, 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      Color color1 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertSame(color1, color0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(100, color1.getGreen());
      assertEquals(100, color1.getRed());
      assertEquals((-10197866), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(150, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertNotNull(color1);
      
      arcDialFrame0.setForegroundPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      Color color2 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(color2, color0);
      assertNotSame(color2, color1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(color2.equals((Object)color0));
      assertFalse(color2.equals((Object)color1));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals((-8355712), color2.getRGB());
      assertEquals(1, color2.getTransparency());
      assertEquals(255, color2.getAlpha());
      assertEquals(128, color2.getBlue());
      assertEquals(128, color2.getRed());
      assertEquals(128, color2.getGreen());
      assertNotNull(color2);
      
      arcDialFrame0.setBackgroundPaint(color2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(color2, color0);
      assertNotSame(color2, color1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(color2.equals((Object)color0));
      assertFalse(color2.equals((Object)color1));
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals((-8355712), color2.getRGB());
      assertEquals(1, color2.getTransparency());
      assertEquals(255, color2.getAlpha());
      assertEquals(128, color2.getBlue());
      assertEquals(128, color2.getRed());
      assertEquals(128, color2.getGreen());
      
      arcDialFrame0.setInnerRadius(1.0F);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      double double1 = arcDialFrame0.getExtent();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(180.0, double1, 0.01);
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      arcDialFrame0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.setBackgroundPaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      
      arcDialFrame0.setStartAngle(10);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(10.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      Color color3 = (Color)arcDialFrame0.getBackgroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(color3, color1);
      assertNotSame(color3, color2);
      assertNotSame(color3, color0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertFalse(color3.equals((Object)color1));
      assertFalse(color3.equals((Object)color2));
      assertFalse(color3.equals((Object)color0));
      assertEquals(1.0, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(5067.631948035167, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(10.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(255, color3.getRed());
      assertEquals(255, color3.getGreen());
      assertEquals((-1), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      assertEquals(255, color3.getAlpha());
      assertEquals(255, color3.getBlue());
      assertNotNull(color3);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertNotNull(arcDialFrame0);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D0);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      double double0 = arcDialFrame0.getOuterRadius();
      assertEquals(0.75, double0, 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      
      arcDialFrame0.setExtent((-3724.172556520978));
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      double double1 = arcDialFrame0.getExtent();
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-3724.172556520978), double1, 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setStartAngle((-3724.172556520978));
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame0.getStartAngle(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setStroke(basicStroke0);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      
      ArcDialFrame arcDialFrame1 = new ArcDialFrame((-3724.172556520978), 1354.413568009247);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals((-3724.172556520978), arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertNotNull(arcDialFrame1);
      
      boolean boolean0 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean0);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      
      BasicStroke basicStroke1 = (BasicStroke)arcDialFrame1.getStroke();
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertNotSame(basicStroke1, basicStroke0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertTrue(basicStroke1.equals((Object)basicStroke0));
      assertEquals((-3724.172556520978), arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(2.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke1);
      
      arcDialFrame1.setVisible(false);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals((-3724.172556520978), arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      
      arcDialFrame1.setStroke(basicStroke1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertNotSame(basicStroke1, basicStroke0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertTrue(basicStroke1.equals((Object)basicStroke0));
      assertEquals((-3724.172556520978), arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(2.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      
      arcDialFrame1.setStartAngle(0.75);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      boolean boolean1 = arcDialFrame1.hasListener((EventListener) null);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(boolean1 == boolean0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean1);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
      
      GeneralPath generalPath1 = (GeneralPath)arcDialFrame1.getOuterWindow(rectangle2D1);
      assertNotSame(generalPath1, generalPath0);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(generalPath1.equals((Object)generalPath0));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1, generalPath1.getWindingRule());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
      assertNotNull(generalPath1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D2).getWidth();
      GeneralPath generalPath2 = (GeneralPath)arcDialFrame1.getWindow(rectangle2D2);
      assertNotSame(generalPath2, generalPath1);
      assertNotSame(generalPath2, generalPath0);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(generalPath2.equals((Object)generalPath1));
      assertFalse(generalPath2.equals((Object)generalPath0));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1, generalPath2.getWindingRule());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
      assertNotNull(generalPath2);
      
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D3).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D3).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D3).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D3).getWidth();
      GeneralPath generalPath3 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D3);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(generalPath3, generalPath2);
      assertNotSame(generalPath3, generalPath0);
      assertNotSame(generalPath3, generalPath1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(generalPath3.equals((Object)generalPath2));
      assertFalse(generalPath3.equals((Object)generalPath0));
      assertFalse(generalPath3.equals((Object)generalPath1));
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1, generalPath3.getWindingRule());
      assertNotNull(generalPath3);
      
      Rectangle2D rectangle2D4 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D4).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D4).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D4).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D4).getWidth();
      arcDialFrame1.draw(graphics2D0, dialPlot0, rectangle2D4, rectangle2D4);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
      
      arcDialFrame0.setStroke(dialPlot0.DEFAULT_OUTLINE_STROKE);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame0.getStartAngle(), 0.01);
      
      boolean boolean2 = arcDialFrame1.isClippedToWindow();
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
      
      boolean boolean3 = arcDialFrame0.equals(basicStroke1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertNotSame(basicStroke1, basicStroke0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertTrue(basicStroke1.equals((Object)basicStroke0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals((-3724.172556520978), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals((-3724.172556520978), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(2.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      
      arcDialFrame1.setInnerRadius(0.9);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1354.413568009247, arcDialFrame1.getExtent(), 0.01);
      assertFalse(arcDialFrame1.isVisible());
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.9, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getStartAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame();
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertNotNull(arcDialFrame0);
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame1);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertTrue(boolean0);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      
      Color color0 = (Color)arcDialFrame0.getBackgroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertNotNull(color0);
      
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.setBackgroundPaint(color0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setBackgroundPaint(color0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      
      boolean boolean1 = arcDialFrame1.isClippedToWindow();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      
      boolean boolean2 = arcDialFrame1.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      
      arcDialFrame0.setStartAngle(1.5);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(1.5, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      arcDialFrame0.setOuterRadius(1.5);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(180.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(1.5, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(1.5, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(346.098788, 346.098788);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      BasicStroke basicStroke0 = (BasicStroke)arcDialFrame0.getStroke();
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      arcDialFrame0.setStroke(basicStroke0);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      
      arcDialFrame0.hashCode();
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      double double0 = arcDialFrame0.getInnerRadius();
      assertEquals(0.25, double0, 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      double double1 = arcDialFrame0.getInnerRadius();
      assertEquals(double1, double0, 0.01);
      assertEquals(0.25, double1, 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = arcDialFrame0.hasListener(eventListener0);
      assertFalse(boolean0);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      arcDialFrame0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(346.098788, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setExtent(40.1870776083812);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      ArcDialFrame arcDialFrame1 = new ArcDialFrame();
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertNotNull(arcDialFrame1);
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame1.removeChangeListener(dialLayerChangeListener0);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      
      boolean boolean1 = arcDialFrame0.equals(arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(boolean1 == boolean0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertFalse(boolean1);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(180.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      
      ArcDialFrame arcDialFrame2 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertNotSame(arcDialFrame2, arcDialFrame1);
      assertNotSame(arcDialFrame2, arcDialFrame0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame2.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame2.equals((Object)arcDialFrame0));
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame2.isClippedToWindow());
      assertEquals(40.1870776083812, arcDialFrame2.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame2.getInnerRadius(), 0.01);
      assertEquals(346.098788, arcDialFrame2.getStartAngle(), 0.01);
      assertEquals(0.75, arcDialFrame2.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame2.isVisible());
      assertNotNull(arcDialFrame2);
      
      double double2 = arcDialFrame0.getStartAngle();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame2));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(346.098788, double2, 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals(346.098788, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setStartAngle((-9.9337123));
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-9.9337123), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getWindow(rectangle2D1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-9.9337123), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      arcDialFrame0.setInnerRadius(0.25);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-9.9337123), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setStartAngle((-9.9337123));
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame0, arcDialFrame2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame2));
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertTrue(arcDialFrame0.isVisible());
      assertEquals(40.1870776083812, arcDialFrame0.getExtent(), 0.01);
      assertEquals((-9.9337123), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame1.setExtent(0.0);
      assertNotSame(arcDialFrame1, arcDialFrame2);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D2).getWidth();
      GeneralPath generalPath1 = (GeneralPath)arcDialFrame1.getWindow(rectangle2D2);
      assertNotSame(generalPath1, generalPath0);
      assertNotSame(arcDialFrame1, arcDialFrame2);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(generalPath1.equals((Object)generalPath0));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(1, generalPath1.getWindingRule());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertNotNull(generalPath1);
      
      Color color0 = (Color)arcDialFrame1.getForegroundPaint();
      assertNotSame(arcDialFrame1, arcDialFrame2);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame2));
      assertFalse(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(255, color0.getAlpha());
      assertEquals(100, color0.getGreen());
      assertEquals((-10197866), color0.getRGB());
      assertEquals(100, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(150, color0.getBlue());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertNotNull(color0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame((-524.283409), (-524.283409));
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertNotNull(arcDialFrame0);
      
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.removeChangeListener(dialLayerChangeListener0);
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      Color color0 = (Color)arcDialFrame0.getForegroundPaint();
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(255, color0.getAlpha());
      assertEquals((-10197866), color0.getRGB());
      assertEquals(100, color0.getRed());
      assertEquals(150, color0.getBlue());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertNotNull(color0);
      
      arcDialFrame0.setForegroundPaint(color0);
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(255, color0.getAlpha());
      assertEquals((-10197866), color0.getRGB());
      assertEquals(100, color0.getRed());
      assertEquals(150, color0.getBlue());
      assertEquals(100, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      
      double double0 = arcDialFrame0.getStartAngle();
      assertEquals((-524.283409), double0, 0.01);
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals((-524.283409), arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals((-524.283409), arcDialFrame1.getStartAngle(), 0.01);
      assertNotNull(arcDialFrame1);
      
      Color color1 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertSame(color1, color0);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(1, color1.getTransparency());
      assertEquals(255, color1.getAlpha());
      assertEquals(100, color1.getGreen());
      assertEquals((-10197866), color1.getRGB());
      assertEquals(100, color1.getRed());
      assertEquals(150, color1.getBlue());
      assertNotNull(color1);
      
      double double1 = arcDialFrame0.getExtent();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(double1, double0, 0.01);
      assertEquals((-524.283409), double1, 0.01);
      assertEquals((-524.283409), arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertEquals((-524.283409), arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertFalse(arcDialFrame0.isClippedToWindow());
      
      // Undeclared exception!
      try { 
        arcDialFrame0.setOuterRadius((-265.82550704290946));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'radius' argument.
         //
         verifyException("org.jfree.chart.plot.dial.ArcDialFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(0.0, 8.0);
      assertEquals(0.75, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame0);
      
      arcDialFrame0.setOuterRadius(220.1);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(220.1, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      GeneralPath generalPath0 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D0);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(220.1, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      arcDialFrame0.hashCode();
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(220.1, arcDialFrame0.getOuterRadius(), 0.01);
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setOuterRadius(0.0);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Color color0 = (Color)arcDialFrame0.getBackgroundPaint();
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getBlue());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertNotNull(color0);
      
      arcDialFrame0.setBackgroundPaint(color0);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getBlue());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      
      Color color1 = (Color)arcDialFrame0.getBackgroundPaint();
      assertSame(color1, color0);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(128, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      assertEquals(128, color1.getGreen());
      assertEquals(128, color1.getBlue());
      assertNotNull(color1);
      
      arcDialFrame0.setVisible(true);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setBackgroundPaint(color1);
      assertSame(color1, color0);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(128, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      assertEquals(128, color1.getGreen());
      assertEquals(128, color1.getBlue());
      
      arcDialFrame0.setExtent(8.0);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setStartAngle(0.0);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      ArcDialFrame arcDialFrame1 = (ArcDialFrame)arcDialFrame0.clone();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(arcDialFrame1, arcDialFrame0);
      assertTrue(arcDialFrame1.equals((Object)arcDialFrame0));
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(8.0, arcDialFrame1.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame1.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame1.isVisible());
      assertEquals(0.0, arcDialFrame1.getStartAngle(), 0.01);
      assertFalse(arcDialFrame1.isClippedToWindow());
      assertEquals(0.25, arcDialFrame1.getInnerRadius(), 0.01);
      assertNotNull(arcDialFrame1);
      
      double double0 = arcDialFrame0.getExtent();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertTrue(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(8.0, double0, 0.01);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(0.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      arcDialFrame0.setOuterRadius(8.0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(8.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      GeneralPath generalPath1 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D1);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(generalPath1, generalPath0);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(generalPath1.equals((Object)generalPath0));
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(8.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1, generalPath1.getWindingRule());
      assertNotNull(generalPath1);
      
      Color color2 = (Color)arcDialFrame0.getForegroundPaint();
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(color2, color0);
      assertNotSame(color2, color1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(color2.equals((Object)color0));
      assertFalse(color2.equals((Object)color1));
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(8.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color2.getAlpha());
      assertEquals(100, color2.getGreen());
      assertEquals(1, color2.getTransparency());
      assertEquals((-10197866), color2.getRGB());
      assertEquals(150, color2.getBlue());
      assertEquals(100, color2.getRed());
      assertNotNull(color2);
      
      arcDialFrame0.setForegroundPaint(color0);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertSame(color0, color1);
      assertNotSame(color0, color2);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(color0.equals((Object)color2));
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(8.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getBlue());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D2).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D2).getWidth();
      GeneralPath generalPath2 = (GeneralPath)arcDialFrame0.getOuterWindow(rectangle2D2);
      assertNotSame(arcDialFrame0, arcDialFrame1);
      assertNotSame(generalPath2, generalPath0);
      assertNotSame(generalPath2, generalPath1);
      assertFalse(arcDialFrame0.equals((Object)arcDialFrame1));
      assertFalse(generalPath2.equals((Object)generalPath0));
      assertFalse(generalPath2.equals((Object)generalPath1));
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
      assertEquals(0.0, arcDialFrame0.getStartAngle(), 0.01);
      assertEquals(8.0, arcDialFrame0.getOuterRadius(), 0.01);
      assertTrue(arcDialFrame0.isVisible());
      assertFalse(arcDialFrame0.isClippedToWindow());
      assertEquals(0.25, arcDialFrame0.getInnerRadius(), 0.01);
      assertEquals(1, generalPath2.getWindingRule());
      assertNotNull(generalPath2);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(0.0, 0.0);
      arcDialFrame0.setOuterRadius(4543.509186262);
      arcDialFrame0.hashCode();
      Stroke stroke0 = arcDialFrame0.getStroke();
      arcDialFrame0.setStroke(stroke0);
      Stroke stroke1 = arcDialFrame0.getStroke();
      arcDialFrame0.equals(stroke1);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.removeChangeListener(dialLayerChangeListener0);
      Paint paint0 = arcDialFrame0.getBackgroundPaint();
      arcDialFrame0.setForegroundPaint(paint0);
      arcDialFrame0.setExtent((-5035.4891633));
      arcDialFrame0.setBackgroundPaint(paint0);
      arcDialFrame0.setInnerRadius(0.0);
      arcDialFrame0.getOuterRadius();
      arcDialFrame0.getExtent();
      arcDialFrame0.clone();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      arcDialFrame0.getWindow(rectangle2D0);
      Object object0 = arcDialFrame0.clone();
      arcDialFrame0.equals(object0);
      arcDialFrame0.setExtent(8.0);
      arcDialFrame0.equals("");
      arcDialFrame0.setForegroundPaint(paint0);
      arcDialFrame0.isClippedToWindow();
      arcDialFrame0.getExtent();
      arcDialFrame0.getExtent();
      arcDialFrame0.setForegroundPaint(paint0);
      ArcDialFrame arcDialFrame1 = new ArcDialFrame(8.0, (-2669.0));
      arcDialFrame0.equals(arcDialFrame1);
      assertEquals(8.0, arcDialFrame0.getExtent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = 85.5;
      ArcDialFrame arcDialFrame0 = new ArcDialFrame(85.5, 3608.9129949);
      arcDialFrame0.clone();
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      arcDialFrame0.setOuterRadius(85.5);
      // Undeclared exception!
      try { 
        arcDialFrame0.setInnerRadius((-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'radius' argument.
         //
         verifyException("org.jfree.chart.plot.dial.ArcDialFrame", e);
      }
  }
}
