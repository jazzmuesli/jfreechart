/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:55:20 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.PieLabelRecord;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBox;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieLabelRecord_ESTest extends PieLabelRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = Integer.getInteger((String) null, 0);
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, (-1058.9356994922427), 0, textBox0, 56.53668649, 0, 0);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(integer0, 999, (-181.51013437), textBox0, (-1058.9356994922427), 510.04, 999);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord1);
      assertEquals((-181.51013437), pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(999.0, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals((-710.9779841161214), pieLabelRecord1.getUpperY(), 0.01);
      assertEquals(510.04, pieLabelRecord1.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1058.9356994922427), pieLabelRecord0.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, Double.NaN, Double.NaN, textBox0, Double.NaN, 1130.964911, 1130.964911);
      int int0 = pieLabelRecord0.compareTo(pieLabelRecord0);
      assertEquals(Double.NaN, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(Double.NaN, pieLabelRecord0.getAllocatedY(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getGap(), 0.01);
      assertEquals(Double.NaN, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0, int0);
      assertEquals(Double.NaN, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2143.6988), 0.0, textBox0, 0.0, 0.0, 0.0);
      double double0 = pieLabelRecord0.getUpperY();
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-2143.6988), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(513);
      TextBox textBox0 = new TextBox("");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, (-1665.334685), (-1665.334685), textBox0, 0.0, 513, 0.0);
      double double0 = pieLabelRecord0.getUpperY();
      assertEquals((-1665.334685), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(513.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1665.334685), double0, 0.01);
      assertEquals((-1665.334685), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextBox textBox0 = new TextBox("(%SK0");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-633.67768652084), 0, textBox0, 0, (-2997.1), (-2361.8864023));
      double double0 = pieLabelRecord0.getLowerY();
      assertEquals((-2361.8864023), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-2997.1), pieLabelRecord0.getGap(), 0.01);
      assertEquals((-633.67768652084), pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = Integer.getInteger("task", (-3935));
      TextBox textBox0 = new TextBox("task");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, (-3935), (-3935), textBox0, (-3935), 359.639282, 359.639282);
      double double0 = pieLabelRecord0.getLowerY();
      assertEquals((-3935.0), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1967.5), double0, 0.01);
      assertEquals((-3935.0), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(359.639282, pieLabelRecord0.getGap(), 0.01);
      assertEquals(359.639282, pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(513);
      TextBox textBox0 = new TextBox("");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, (-1665.334685), (-1665.334685), textBox0, 0.0, 513, 0.0);
      double double0 = pieLabelRecord0.getLinkPercent();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(513.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals((-1665.334685), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1665.334685), pieLabelRecord0.getLowerY(), 0.01);
      assertEquals((-1665.334685), pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 263);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 263, 0.0, textBox0, 0.0, 0.0, 263);
      double double0 = pieLabelRecord0.getLinkPercent();
      assertEquals(263.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(263.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = Integer.valueOf(2159);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0.0, 2550.67095, textBox0, 2159, 0.0, (-2846.2851));
      double double0 = pieLabelRecord0.getLabelHeight();
      assertEquals(2550.67095, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(2159.0, double0, 0.01);
      assertEquals((-2846.2851), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(3630.17095, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = Integer.getInteger("<haUd!NEX'XS", 0);
      TextBox textBox0 = new TextBox(".c");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 1750.0, textBox0, (-1729.6112821694185), 1750.0, (-1729.6112821694185));
      double double0 = pieLabelRecord0.getLabelHeight();
      assertEquals(1750.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals((-1729.6112821694185), double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1750.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(885.1943589152908, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals((-1729.6112821694185), pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextBox textBox0 = new TextBox((TextBlock) null);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2361.8864023), (-2361.8864023), textBox0, (-2361.8864023), 1130.964911, 1130.964911);
      textBox0.setShadowYOffset((-2231.567450639));
      pieLabelRecord0.getLabel();
      assertEquals((-2361.8864023), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1180.94320115), pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getGap(), 0.01);
      assertEquals((-2361.8864023), pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = Integer.getInteger("<haUd!NEX'XS", 0);
      TextBox textBox0 = new TextBox(".c");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 1750.0, textBox0, (-1729.6112821694185), 1750.0, (-1729.6112821694185));
      pieLabelRecord0.getLabel();
      assertEquals(1750.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1729.6112821694185), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(1750.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(2614.8056410847094, pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-2146575134));
      TextBox textBox0 = new TextBox("");
      textBox0.setShadowXOffset((-2146575134));
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, (-2146575134), (-2146575134), textBox0, 0.5, 1130.964911, 0.5);
      pieLabelRecord0.getLabel();
      assertEquals(0.5, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-2.146575134E9), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-2.146575134E9), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getGap(), 0.01);
      assertEquals((-2.14657513375E9), pieLabelRecord0.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 0.0, textBox0, 0.0, (-18.1270067535), (-4705.12670208933));
      pieLabelRecord0.getKey();
      assertEquals((-4705.12670208933), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-18.1270067535), pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1));
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 3202.4041110169046, (-1632.045), textBox0, (-1632.045), 3202.4041110169046, (-1632.045));
      double double0 = pieLabelRecord0.getGap();
      assertEquals((-1632.045), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(3202.4041110169046, double0, 0.01);
      assertEquals((-816.0225), pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(3202.4041110169046, pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1632.045), pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2552.8085830995346), (-350.76321112679), textBox0, (-1033.21468), (-350.76321112679), 0.0);
      double double0 = pieLabelRecord0.getGap();
      assertEquals((-2552.8085830995346), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(165.84412887321002, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-350.76321112679), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-350.76321112679), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-2990));
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 1372.0988, 0.0, textBox0, 1463.42, 459.0, 1463.42);
      double double0 = pieLabelRecord0.getBaseY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getAllocatedY(), 0.01);
      assertEquals(1372.0988, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(459.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(1463.42, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(731.71, pieLabelRecord0.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = Integer.getInteger("task", (-3935));
      TextBox textBox0 = new TextBox("task");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, (-3935), (-3935), textBox0, (-3935), 359.639282, 359.639282);
      double double0 = pieLabelRecord0.getBaseY();
      assertEquals(359.639282, pieLabelRecord0.getGap(), 0.01);
      assertEquals((-3935.0), double0, 0.01);
      assertEquals(359.639282, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-3935.0), pieLabelRecord0.getAngle(), 0.01);
      assertEquals((-1967.5), pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = Integer.getInteger("<haUd!NEX'XS", 0);
      TextBox textBox0 = new TextBox(".c");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 1750.0, textBox0, (-1729.6112821694185), 1750.0, (-1729.6112821694185));
      double double0 = pieLabelRecord0.getAngle();
      assertEquals((-1729.6112821694185), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(1750.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(1750.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(885.1943589152908, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2143.6988), 0.0, textBox0, 0.0, 0.0, 0.0);
      double double0 = pieLabelRecord0.getAngle();
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-2143.6988), double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 730.21749829, 0.0, textBox0, (-2137.27178), 0.0, 0.8);
      double double0 = pieLabelRecord0.getAllocatedY();
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(730.21749829, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.8, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1068.63589), pieLabelRecord0.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1));
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 3202.4041110169046, (-1632.045), textBox0, (-1632.045), 3202.4041110169046, (-1632.045));
      double double0 = pieLabelRecord0.getAllocatedY();
      assertEquals(3202.4041110169046, pieLabelRecord0.getGap(), 0.01);
      assertEquals((-1632.045), double0, 0.01);
      assertEquals((-1632.045), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1632.045), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-2448.0675), pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(3202.4041110169046, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 241.0, textBox0, 0.0, 241.0, 0.0);
      // Undeclared exception!
      try { 
        pieLabelRecord0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextBox textBox0 = new TextBox((TextBlock) null);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2361.8864023), (-2361.8864023), textBox0, (-2361.8864023), 1130.964911, 1130.964911);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord((Comparable) null, (-3542.82960345), 1130.964911, textBox0, 1.7976931348623157E308, (-2361.8864023), 1310.46439678);
      // Undeclared exception!
      try { 
        pieLabelRecord0.equals(pieLabelRecord1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 230);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 230, 0.0, textBox0, 0.0, 0.0, 230);
      Comparable comparable0 = pieLabelRecord0.getKey();
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(comparable0, 2.0, 983.0, textBox0, (-1.0), 1, (double) integer0);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord1);
      assertEquals(982.5, pieLabelRecord1.getUpperY(), 0.01);
      assertEquals(983.0, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(2.0, pieLabelRecord1.getAngle(), 0.01);
      assertEquals(230.0, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(1.0, pieLabelRecord1.getGap(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TextBox textBox0 = new TextBox((TextBlock) null);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2361.8864023), (-2361.8864023), textBox0, (-2361.8864023), 1130.964911, 1130.964911);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 0.0, 1130.964911, textBox0, 1310.46439678, 1199.58474233, 0.0);
      boolean boolean0 = pieLabelRecord1.equals(pieLabelRecord0);
      assertEquals(1199.58474233, pieLabelRecord1.getGap(), 0.01);
      assertEquals(1130.964911, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(475.73271261, pieLabelRecord1.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getAngle(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-2361.8864023), pieLabelRecord0.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextBox textBox0 = new TextBox((TextBlock) null);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2361.8864023), (-2361.8864023), textBox0, (-2361.8864023), 1130.964911, 1130.964911);
      boolean boolean0 = pieLabelRecord0.equals(pieLabelRecord0);
      assertEquals((-2361.8864023), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getGap(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getLinkPercent(), 0.01);
      assertTrue(boolean0);
      assertEquals((-2361.8864023), pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1180.94320115), pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 2.0, (TextBox) null, 2.0, 0.0, 0);
      boolean boolean0 = pieLabelRecord0.equals(integer0);
      assertEquals(2.0, pieLabelRecord0.getBaseY(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 2.0, (TextBox) null, 2.0, 0.0, 0);
      pieLabelRecord0.setBaseY(3035.881088);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 3393.5741202485005, 1130.964911, (TextBox) null, 1.0, 0, 2.0);
      int int0 = pieLabelRecord0.compareTo(pieLabelRecord1);
      assertEquals(3035.881088, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TextBox textBox0 = new TextBox((TextBlock) null);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-2361.8864023), (-2361.8864023), textBox0, (-2361.8864023), 1130.964911, 1130.964911);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 0.0, 1130.964911, textBox0, 1310.46439678, 1199.58474233, 0.0);
      int int0 = pieLabelRecord0.compareTo(pieLabelRecord1);
      assertEquals(1130.964911, pieLabelRecord1.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord1.getAngle(), 0.01);
      assertEquals((-2361.8864023), pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1199.58474233, pieLabelRecord1.getGap(), 0.01);
      assertEquals(1130.964911, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals((-1), int0);
      assertEquals(1786.1971093900002, pieLabelRecord1.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 2.0, (TextBox) null, 2.0, 0.0, 0);
      int int0 = pieLabelRecord0.compareTo(pieLabelRecord0);
      assertEquals(2.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0, int0);
      assertEquals(3.0, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 230);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 230, 0.0, textBox0, 0.0, 0.0, 230);
      int int0 = pieLabelRecord0.compareTo("");
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(230.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(230.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0, int0);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 2.0, (TextBox) null, 2.0, 0.0, 0);
      double double0 = pieLabelRecord0.getLowerY();
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(2.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 230);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 230, 0.0, textBox0, 0.0, 0.0, 230);
      pieLabelRecord0.setAllocatedY(2654.573457);
      assertEquals(2654.573457, pieLabelRecord0.getAllocatedY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = Integer.getInteger("<haUd!NEX'XS", 4);
      TextBox textBox0 = new TextBox(".c");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 4, 1750.0, textBox0, (-1729.6112821694185), 1750.0, (-1729.6112821694185));
      double double0 = pieLabelRecord0.getAngle();
      assertEquals((-1729.6112821694185), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(885.1943589152908, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals(1750.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(4.0, double0, 0.01);
      assertEquals(1750.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = Integer.getInteger("<haUd!NEX'XS", 4);
      TextBox textBox0 = new TextBox(".c");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 4, 1750.0, textBox0, (-1729.6112821694185), 1750.0, (-1729.6112821694185));
      double double0 = pieLabelRecord0.getLinkPercent();
      assertEquals(1750.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals((-1729.6112821694185), double0, 0.01);
      assertEquals(1750.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(2614.8056410847094, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(4.0, pieLabelRecord0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 2.0, (TextBox) null, 2.0, 0.0, 0);
      pieLabelRecord0.getLabel();
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(2.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(3.0, pieLabelRecord0.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 230);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 230, 0.0, textBox0, 0.0, 0.0, 230);
      pieLabelRecord0.toString();
      assertEquals(230.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(230.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Integer integer0 = Integer.getInteger("<haUd!NEX'XS", 4);
      TextBox textBox0 = new TextBox(".c");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 4, 1750.0, textBox0, (-1729.6112821694185), 1750.0, (-1729.6112821694185));
      double double0 = pieLabelRecord0.getAllocatedY();
      assertEquals(4.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(1750.0, double0, 0.01);
      assertEquals(1750.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(885.1943589152908, pieLabelRecord0.getUpperY(), 0.01);
      assertEquals((-1729.6112821694185), pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(1750.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 230);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 230, 0.0, textBox0, 0.0, 0.0, 230);
      double double0 = pieLabelRecord0.getLabelHeight();
      assertEquals(230.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(230.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 230);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 230, 0.0, textBox0, 0.0, 0.0, 230);
      double double0 = pieLabelRecord0.getGap();
      assertEquals(230.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(230.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLowerY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLabelHeight(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getBaseY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 2.0, (TextBox) null, 2.0, 0.0, 0);
      double double0 = pieLabelRecord0.getBaseY();
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(2.0, double0, 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
      assertEquals(3.0, pieLabelRecord0.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(integer0, 0, 2.0, (TextBox) null, 2.0, 0.0, 0);
      double double0 = pieLabelRecord0.getUpperY();
      assertEquals(3.0, double0, 0.01);
      assertEquals(2.0, pieLabelRecord0.getBaseY(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getAngle(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getLinkPercent(), 0.01);
      assertEquals(0.0, pieLabelRecord0.getGap(), 0.01);
  }
}
