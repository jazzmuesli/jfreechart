/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:01:54 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.needle.LineNeedle;
import org.jfree.chart.needle.MeterNeedle;
import org.jfree.chart.needle.MiddlePinNeedle;
import org.jfree.chart.needle.PinNeedle;
import org.jfree.chart.needle.PlumNeedle;
import org.jfree.chart.needle.PointerNeedle;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CompassPlot_ESTest extends CompassPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setRevolutionDistance((-414.2886405));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      PinNeedle pinNeedle0 = new PinNeedle();
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0, (MeterNeedle) pinNeedle0);
      compassPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      LegendTitle legendTitle0 = new LegendTitle(compassPlot0);
      compassPlot0.setInsets(legendTitle0.DEFAULT_PADDING, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        compassPlot0.draw((Graphics2D) null, rectangle2D_Double0, (Point2D) null, plotState0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-5.0));
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      compassPlot0.setSeriesNeedle(1, (MeterNeedle) plumNeedle0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setSeriesNeedle(1084, 6);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      // Undeclared exception!
      try { 
        compassPlot0.setSeriesNeedle(9999, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9999
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot((ValueDataset) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0);
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0);
      compassPlot0.setSeriesOutlineStroke(1, candlestickRenderer0.DEFAULT_STROKE);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      SystemColor systemColor0 = SystemColor.controlText;
      compassPlot0.setSeriesOutlinePaint(1, systemColor0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setSeriesPaint(1, (Paint) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot((ValueDataset) null);
      Color color0 = (Color)SymbolAxis.DEFAULT_GRID_BAND_PAINT;
      compassPlot0.setRoseHighlightPaint(color0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      PiePlot piePlot0 = new PiePlot();
      compassPlot0.setRoseCenterPaint(piePlot0.DEFAULT_LABEL_SHADOW_PAINT);
      compassPlot0.getRoseCenterPaint();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      // Undeclared exception!
      try { 
        compassPlot0.setLabelType((-1503));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MeterPlot.setLabelType(int): unrecognised type.
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.revolutionDistance = 0.0;
      compassPlot0.getRevolutionDistance();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.revolutionDistance = (-1961.21737);
      compassPlot0.getRevolutionDistance();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      Stroke stroke0 = compassPlot0.getOutlineStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, compassPlot0.DEFAULT_BACKGROUND_PAINT, compassPlot0.DEFAULT_OUTLINE_STROKE, compassPlot0.DEFAULT_OUTLINE_PAINT, stroke0, 1.0F);
      Font font0 = categoryMarker0.getLabelFont();
      compassPlot0.setLabelFont(font0);
      compassPlot0.getLabelFont();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1.0));
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setDrawBorder(true);
      compassPlot0.getDrawBorder();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(3361.75469495464);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      // Undeclared exception!
      try { 
        compassPlot0.setSeriesNeedle(769);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised type.
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      // Undeclared exception!
      try { 
        compassPlot0.setRosePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      // Undeclared exception!
      try { 
        compassPlot0.setRoseHighlightPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(360.0);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      // Undeclared exception!
      try { 
        compassPlot0.setRoseCenterPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      // Undeclared exception!
      try { 
        compassPlot0.setLabelFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setDrawingSupplier((DrawingSupplier) null);
      // Undeclared exception!
      try { 
        compassPlot0.clone();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'object' argument.
         //
         verifyException("org.jfree.chart.util.ObjectUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0);
      LineNeedle lineNeedle0 = new LineNeedle();
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0, (MeterNeedle) lineNeedle0);
      JFreeChart jFreeChart0 = new JFreeChart("T4D\"-{/H1Ft", compassPlot0.DEFAULT_LABEL_FONT, compassPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(0, 0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      PlotState plotState0 = new PlotState();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      compassPlot0.draw(graphics2D0, rectangle0, point2D_Double0, plotState0, plotRenderingInfo0);
      assertFalse(compassPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setDrawBorder(true);
      JFreeChart jFreeChart0 = new JFreeChart("T4D\"-{/H1Ft", compassPlot0.DEFAULT_LABEL_FONT, compassPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(0, 0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      PlotState plotState0 = new PlotState();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      compassPlot0.draw(graphics2D0, rectangle0, point2D_Double0, plotState0, plotRenderingInfo0);
      assertEquals(1, CompassPlot.VALUE_LABELS);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0, (MeterNeedle) null);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot((ValueDataset) null);
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      compassPlot0.addDataset((ValueDataset) null, (MeterNeedle) pointerNeedle0);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      // Undeclared exception!
      try { 
        compassPlot0.setSeriesNeedle((-3509), (MeterNeedle) middlePinNeedle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3509
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Float float0 = new Float(0.0F);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) float0);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      // Undeclared exception!
      try { 
        compassPlot0.setSeriesNeedle((-84), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -84
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setSeriesOutlineStroke(1, compassPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setSeriesPaint(0, (Paint) null);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot((ValueDataset) null);
      compassPlot0.setRevolutionDistance(0.5);
      assertEquals(0.5, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      compassPlot0.setRevolutionDistance((double) areaRenderer0.ZERO);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot((ValueDataset) null);
      CompassPlot compassPlot1 = (CompassPlot)compassPlot0.clone();
      assertEquals(360.0, compassPlot1.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      PinNeedle pinNeedle0 = new PinNeedle();
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0, (MeterNeedle) pinNeedle0);
      CompassPlot compassPlot1 = new CompassPlot(defaultValueDataset0);
      boolean boolean0 = compassPlot0.equals(compassPlot1);
      assertFalse(compassPlot1.getDrawBorder());
      assertFalse(boolean0);
      assertEquals(360.0, compassPlot1.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      CompassPlot compassPlot1 = new CompassPlot();
      assertTrue(compassPlot1.equals((Object)compassPlot0));
      
      compassPlot0.setNoDataMessageFont(compassPlot1.DEFAULT_LABEL_FONT);
      boolean boolean0 = compassPlot0.equals(compassPlot1);
      assertFalse(compassPlot1.equals((Object)compassPlot0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      CompassPlot compassPlot1 = (CompassPlot)compassPlot0.clone();
      boolean boolean0 = compassPlot0.equals(compassPlot1);
      assertEquals(360.0, compassPlot1.getRevolutionDistance(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      boolean boolean0 = compassPlot0.equals(compassPlot0);
      assertFalse(compassPlot0.getDrawBorder());
      assertTrue(boolean0);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      boolean boolean0 = compassPlot0.equals((Object) null);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      Font font0 = compassPlot0.getCompassFont(256);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(25.6F, font0.getSize2D(), 0.01F);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0);
      LineNeedle lineNeedle0 = new LineNeedle();
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0, (MeterNeedle) lineNeedle0);
      JFreeChart jFreeChart0 = new JFreeChart("", compassPlot0.DEFAULT_LABEL_FONT, compassPlot0, true);
      jFreeChart0.createBufferedImage(10, 10);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-2925.9));
      PinNeedle pinNeedle0 = new PinNeedle();
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0, (MeterNeedle) pinNeedle0);
      compassPlot0.addDataset((ValueDataset) defaultValueDataset0);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setSeriesNeedle(1732, (MeterNeedle) null);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      // Undeclared exception!
      try { 
        compassPlot0.setSeriesNeedle(908, 198);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised type.
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Float float0 = new Float((-941.6211995));
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) float0);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setSeriesNeedle(6, 9);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setSeriesNeedle(8);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setSeriesNeedle(7, 7);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setSeriesNeedle(1084, 5);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setSeriesNeedle(4);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setSeriesNeedle(45, 3);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setSeriesNeedle(1262, 2);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) integer0);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setSeriesNeedle(1);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      compassPlot0.setSeriesOutlineStroke(0, xYShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      SystemColor systemColor0 = SystemColor.controlText;
      compassPlot0.setSeriesOutlinePaint(0, systemColor0);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      compassPlot0.setSeriesOutlinePaint(10, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      Color color0 = (Color)CategoryPlot.DEFAULT_CROSSHAIR_PAINT;
      compassPlot0.setSeriesOutlinePaint((-2336), color0);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      String[] stringArray0 = new String[4];
      SymbolAxis symbolAxis0 = new SymbolAxis("bP/CY8Q", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      Paint paint0 = combinedDomainXYPlot0.getDomainGridlinePaint();
      compassPlot0.setSeriesPaint((-330), paint0);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      // Undeclared exception!
      try { 
        compassPlot0.setLabelType(1900);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MeterPlot.setLabelType(int): unrecognised type.
         //
         verifyException("org.jfree.chart.plot.CompassPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setLabelType(1);
      int int0 = compassPlot0.getLabelType();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Integer integer0 = (Integer)Plot.ZERO;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) integer0);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.setLabelType(0);
      assertEquals(0, compassPlot0.getLabelType());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot((ValueDataset) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1);
      compassPlot0.setSeriesOutlineStroke((-1021), candlestickRenderer0.DEFAULT_STROKE);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) integer0);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      compassPlot0.getDatasets();
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      Color color0 = Color.LIGHT_GRAY;
      compassPlot0.setRosePaint(color0);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      double double0 = compassPlot0.getRevolutionDistance();
      assertEquals(360.0, double0, 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.getLegendItems();
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      int int0 = compassPlot0.getLabelType();
      assertEquals(0, int0);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.zoom(15);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      Color color0 = (Color)compassPlot0.getRosePaint();
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.getPlotType();
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      boolean boolean0 = compassPlot0.getDrawBorder();
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      compassPlot0.setLabelFont(compassPlot0.DEFAULT_LABEL_FONT);
      compassPlot0.getLabelFont();
      assertFalse(compassPlot0.getDrawBorder());
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      Font font0 = compassPlot0.getLabelFont();
      assertFalse(compassPlot0.getDrawBorder());
      assertNull(font0);
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      Color color0 = (Color)compassPlot0.getRoseHighlightPaint();
      assertEquals(360.0, compassPlot0.getRevolutionDistance(), 0.01);
      assertEquals(0, color0.getBlue());
  }
}
