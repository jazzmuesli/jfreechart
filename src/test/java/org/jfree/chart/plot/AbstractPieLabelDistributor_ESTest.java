/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:35:59 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.PieLabelDistributor;
import org.jfree.chart.plot.PieLabelRecord;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractPieLabelDistributor_ESTest extends AbstractPieLabelDistributor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.distributeLabels(0, (-2411.97615043));
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-1120));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord(4278);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-1));
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-1818));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getItemCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(255);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord(255);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 255, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(255);
      int int0 = pieLabelDistributor0.getItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-1013));
      // Undeclared exception!
      try { 
        pieLabelDistributor0.addPieLabelRecord((PieLabelRecord) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'record' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(255);
      pieLabelDistributor0.clear();
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }
}
