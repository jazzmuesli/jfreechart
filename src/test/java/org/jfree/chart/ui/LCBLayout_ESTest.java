/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:41:08 GMT 2019
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Canvas;
import java.awt.Component;
import java.awt.Container;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ui.LCBLayout;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LCBLayout_ESTest extends LCBLayout_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      // Undeclared exception!
      try { 
        lCBLayout0.preferredLayoutSize((Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      // Undeclared exception!
      try { 
        lCBLayout0.minimumLayoutSize((Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      // Undeclared exception!
      try { 
        lCBLayout0.layoutContainer((Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LCBLayout lCBLayout0 = null;
      try {
        lCBLayout0 = new LCBLayout((-2049));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(2);
      lCBLayout0.removeLayoutComponent("BQt/ZLQG3", (Component) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(6);
      Canvas canvas0 = new Canvas();
      lCBLayout0.addLayoutComponent((Component) canvas0);
      assertEquals(0.5F, canvas0.getAlignmentX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(6);
      Canvas canvas0 = new Canvas();
      lCBLayout0.addLayoutComponent("", (Component) canvas0);
      assertEquals(0, canvas0.getHeight());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      lCBLayout0.removeLayoutComponent((Component) null);
  }
}
