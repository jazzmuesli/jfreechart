/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:32:22 GMT 2019
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.AWTKeyStroke;
import java.awt.BasicStroke;
import java.awt.Font;
import java.awt.geom.AffineTransform;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Map;
import javax.swing.border.StrokeBorder;
import javax.swing.border.TitledBorder;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ui.FontDisplayField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FontDisplayField_ESTest extends FontDisplayField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, AWTKeyStroke> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AWTKeyStroke>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(2701);
      Font font1 = font0.deriveFont(affineTransform0);
      FontDisplayField fontDisplayField0 = new FontDisplayField(font1);
      Font font2 = fontDisplayField0.getDisplayFont();
      assertTrue(font2.isPlain());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicStroke basicStroke0 = new BasicStroke();
      StrokeBorder strokeBorder0 = new StrokeBorder(basicStroke0);
      TitledBorder titledBorder0 = new TitledBorder(strokeBorder0, ";RA");
      Font font0 = titledBorder0.getTitleFont();
      FontDisplayField fontDisplayField0 = new FontDisplayField(font0);
      Font font1 = fontDisplayField0.getDisplayFont();
      assertFalse(font1.isPlain());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Font font0 = new Font("DefaultIntervalCategoryDataset.getValue(): category index out of range.", 2, 2);
      FontDisplayField fontDisplayField0 = new FontDisplayField(font0);
      Font font1 = fontDisplayField0.getDisplayFont();
      assertEquals(2, font1.getStyle());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont("", 100, 0);
      FontDisplayField fontDisplayField0 = new FontDisplayField(font0);
      Font font1 = fontDisplayField0.getDisplayFont();
      assertEquals(0.0F, font1.getSize2D(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Font font0 = new Font("B{@", (-58), (-1239));
      FontDisplayField fontDisplayField0 = new FontDisplayField(font0);
      Font font1 = fontDisplayField0.getDisplayFont();
      assertFalse(font1.isBold());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FontDisplayField fontDisplayField0 = new FontDisplayField((Font) null);
      fontDisplayField0.setDisplayFont((Font) null);
      assertFalse(fontDisplayField0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FontDisplayField fontDisplayField0 = new FontDisplayField((Font) null);
      Font font0 = fontDisplayField0.getDisplayFont();
      assertNull(font0);
  }
}
