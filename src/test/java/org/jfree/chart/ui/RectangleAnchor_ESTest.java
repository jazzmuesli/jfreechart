/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:43:52 GMT 2019
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.Size2D;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RectangleAnchor_ESTest extends RectangleAnchor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Size2D size2D0 = new Size2D();
      size2D0.width = 235.79567;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, 0.0, 0.0, rectangleAnchor0);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals((-235.79567), rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.valueOf("RIGHT");
      Size2D size2D0 = new Size2D(1.0, 1.0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, (-1854.185107747675), 0.0, rectangleAnchor0);
      assertEquals((-0.5), rectangle2D_Double0.y, 0.01);
      assertEquals((-1855.185107747675), rectangle2D_Double0.x, 0.01);
      assertNotNull(rectangle2D_Double0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Size2D size2D0 = new Size2D(0.0, 3336.6066902);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, 0.0, 281.3, rectangleAnchor0);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(281.29999999999995, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Size2D size2D0 = new Size2D((-1272.0454870561), 0.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, (-1272.0454870561), (-1272.0454870561), rectangleAnchor0);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-1272.0454870561), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-2544.0909741122), rectangle2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Size2D size2D0 = new Size2D((-3170.64), 2798.82362313);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, (-3170.64), 2798.82362313, rectangleAnchor0);
      assertNotNull(rectangle2D0);
      assertEquals(1399.411811565, rectangle2D0.getCenterY(), 0.01);
      assertEquals((-3170.64), rectangle2D0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Size2D size2D0 = new Size2D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, (-1.0), 488.1366319112049, rectangleAnchor0);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(488.1366319112049, rectangle2D_Double0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Size2D size2D0 = new Size2D((-584.9323300507826), (-1176.063080694));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, (-1176.063080694), (-257.96), rectangleAnchor0);
      assertNotNull(rectangle2D0);
      assertEquals((-1434.023080694), rectangle2D0.getMaxY(), 0.01);
      assertEquals((-1176.063080694), rectangle2D0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Size2D size2D0 = new Size2D(1.0, 1.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, 0.0, 0.0, rectangleAnchor0);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.5, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.5, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Size2D size2D0 = new Size2D((-3181.6845), 24.65693780386349);
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 235.2590791, 0.0, rectangleAnchor0);
      assertNotNull(rectangle2D0);
      assertEquals(235.2590791, rectangle2D0.getCenterX(), 0.01);
      assertEquals(12.328468901931744, rectangle2D0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RectangleAnchor[] rectangleAnchorArray0 = RectangleAnchor.values();
      assertEquals(9, rectangleAnchorArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        rectangleAnchor0.getAnchorPoint((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rectangle' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      // Undeclared exception!
      try { 
        RectangleAnchor.createRectangle((Size2D) null, (-1354.1118), (-1354.1118), rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Size2D size2D0 = new Size2D((-491.15), (-491.15));
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, (-491.15), (-631.5), (RectangleAnchor) null);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, 0.0, 0.0, rectangleAnchor0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Size2D size2D0 = new Size2D(0.0, 0.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.valueOf("TOP_LEFT");
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, 0.0, rectangleAnchor0);
      assertEquals(0.0, rectangle2D0.getMinY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Size2D size2D0 = new Size2D(0.0, 0.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, 44.8916396, 0.0, rectangleAnchor0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(44.8916396, rectangle2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, (-906.49385284), rectangleAnchor0);
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor0.getAnchorPoint(rectangle2D0);
      assertEquals((-906.49385284), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor0.getAnchorPoint(rectangle2D_Float0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Size2D size2D0 = new Size2D(0.0, 0.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, (-1.0), 0.0, rectangleAnchor0);
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.valueOf("TOP_LEFT");
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor1.getAnchorPoint(rectangle2D0);
      assertEquals((-1.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)RectangleAnchor.createRectangle(size2D0, 0.0, 0.0, rectangleAnchor0);
      assertNotNull(rectangle2D_Double0);
      
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      rectangleAnchor0.getAnchorPoint(rectangle0);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 1.0F, 901.5F, 0.0F);
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor0.getAnchorPoint(rectangle2D0);
      assertEquals(1.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, (-906.49385284), rectangleAnchor0);
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.valueOf("BOTTOM");
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor1.getAnchorPoint(rectangle2D0);
      assertEquals((-906.49385284), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.valueOf("TOP");
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor0.getAnchorPoint(rectangle0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor0.getAnchorPoint(rectangle2D_Float0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Point2D.Double point2D_Double0 = (Point2D.Double)rectangleAnchor0.getAnchorPoint(rectangle2D_Float0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }
}
