/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:58:08 GMT 2019
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.annotations.XYImageAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.ui.RectangleAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYImageAnnotation_ESTest extends XYImageAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(2138224947).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(2138224947).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      doReturn("", "").when(image0).toString();
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, (-234.0898046035), image0);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertNotNull(xYImageAnnotation0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.removeChangeListener(annotationChangeListener0);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      
      xYImageAnnotation0.fireAnnotationChanged();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      
      xYImageAnnotation0.setNotify(false);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      
      xYImageAnnotation0.hashCode();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      
      double double0 = xYImageAnnotation0.getY();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-234.0898046035), double0, 0.01);
      
      Image image1 = xYImageAnnotation0.getImage();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertSame(image1, image0);
      assertNotNull(image1);
      
      Image image2 = xYImageAnnotation0.getImage();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotNull(image2);
      
      double double1 = xYImageAnnotation0.getX();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      double double2 = xYImageAnnotation0.getX();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      RectangleAnchor rectangleAnchor0 = xYImageAnnotation0.getImageAnchor();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor0);
      
      double double3 = xYImageAnnotation0.getY();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotEquals(double3, double2, 0.01);
      assertEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertEquals((-234.0898046035), double3, 0.01);
      
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.LEFT;
      XYImageAnnotation xYImageAnnotation1 = new XYImageAnnotation(0.0, (-234.0898046035), image2, rectangleAnchor1);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNotNull(xYImageAnnotation1);
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      boolean boolean0 = xYImageAnnotation0.equals(xYImageAnnotation1);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(boolean0);
      
      XYImageAnnotation xYImageAnnotation2 = new XYImageAnnotation(0.0, (-234.0898046035), image2);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertTrue(xYImageAnnotation2.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertNull(xYImageAnnotation2.getURL());
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotNull(xYImageAnnotation2);
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      
      xYImageAnnotation1.notifyListeners((AnnotationChangeEvent) null);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      boolean boolean1 = xYImageAnnotation0.equals(xYImageAnnotation2);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertTrue(xYImageAnnotation2.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertNull(xYImageAnnotation2.getURL());
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      XYImageAnnotation xYImageAnnotation3 = new XYImageAnnotation((-234.0898046035), (-234.0898046035), image2);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotNull(xYImageAnnotation3);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      
      XYImageAnnotation xYImageAnnotation4 = (XYImageAnnotation)xYImageAnnotation3.clone();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertTrue(xYImageAnnotation4.getNotify());
      assertNull(xYImageAnnotation4.getURL());
      assertNull(xYImageAnnotation4.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation4.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation4.getY(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation4.getX(), 0.01);
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation1);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotNull(xYImageAnnotation4);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation4.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation1));
      
      boolean boolean2 = xYImageAnnotation2.equals(xYImageAnnotation4);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertTrue(xYImageAnnotation2.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertNull(xYImageAnnotation2.getURL());
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertTrue(xYImageAnnotation4.getNotify());
      assertNull(xYImageAnnotation4.getURL());
      assertNull(xYImageAnnotation4.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation4.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation4.getY(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation4.getX(), 0.01);
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation1);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation4.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation1));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      AnnotationChangeListener annotationChangeListener1 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation3.addChangeListener(annotationChangeListener1);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation4));
      
      boolean boolean3 = xYImageAnnotation1.equals(image1);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertSame(image1, image0);
      assertSame(image1, image2);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(boolean3);
      
      xYImageAnnotation0.hashCode();
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      
      boolean boolean4 = xYImageAnnotation2.equals((Object) null);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertTrue(xYImageAnnotation2.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertNull(xYImageAnnotation2.getURL());
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      
      boolean boolean5 = xYImageAnnotation3.equals((Object) null);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation4));
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean1);
      assertFalse(boolean5);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_RIGHT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 1.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotSame(axisLocation1, axisLocation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(axisLocation0, axisLocation1);
      assertFalse(axisLocation1.equals((Object)axisLocation0));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(axisLocation0.equals((Object)axisLocation1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(1.0, (-33.870454224), image0, rectangleAnchor0);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      boolean boolean0 = xYImageAnnotation0.equals(xYImageAnnotation0);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
      assertTrue(boolean0);
      
      boolean boolean1 = xYImageAnnotation0.equals(rectangleAnchor0);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      xYImageAnnotation0.setURL("");
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
      
      xYImageAnnotation0.setNotify(true);
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
      
      boolean boolean2 = xYImageAnnotation0.hasListener((EventListener) null);
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      xYImageAnnotation0.setNotify(true);
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
      
      xYImageAnnotation0.hashCode();
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-33.870454224), xYImageAnnotation0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(2146258106, 0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn((-1072), 0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation((-2755.972696771), 0.0, image0);
      assertEquals((-2755.972696771), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotNull(xYImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYImageAnnotation0.hasListener(eventListener0);
      assertEquals((-2755.972696771), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertFalse(boolean0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D1).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(3219.5422, (double)1.0F).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      RectangleAnchor rectangleAnchor0 = xYImageAnnotation0.getImageAnchor();
      assertEquals((-2755.972696771), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.draw(graphics2D1, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 355, plotRenderingInfo0);
      assertEquals((-2755.972696771), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      XYPlot xYPlot1 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation1).when(xYPlot1).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot1).getOrientation();
      doReturn(axisLocation0).when(xYPlot1).getRangeAxisLocation();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.draw(graphics2D0, xYPlot1, rectangle2D1, valueAxis1, valueAxis1, 500, plotRenderingInfo1);
      assertEquals((-2755.972696771), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotSame(axisLocation0, axisLocation1);
      assertNotSame(axisLocation1, axisLocation0);
      assertFalse(axisLocation0.equals((Object)axisLocation1));
      assertFalse(axisLocation1.equals((Object)axisLocation0));
      
      RectangleAnchor rectangleAnchor1 = xYImageAnnotation0.getImageAnchor();
      assertEquals((-2755.972696771), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertSame(rectangleAnchor1, rectangleAnchor0);
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(59).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation((-3656.8083133), (-1370.2256), image0, rectangleAnchor0);
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertNotNull(xYImageAnnotation0);
      
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((-2651.6683), 1.5707963267948966).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, (-2754), (PlotRenderingInfo) null);
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      
      xYImageAnnotation0.addEntity(plotRenderingInfo0, shape0, (-2754), "", "");
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      
      double double0 = xYImageAnnotation0.getY();
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1370.2256), double0, 0.01);
      
      XYImageAnnotation xYImageAnnotation1 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-3656.8083133), xYImageAnnotation1.getX(), 0.01);
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals((-1370.2256), xYImageAnnotation1.getY(), 0.01);
      assertNull(xYImageAnnotation1.getURL());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation1);
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation((-1.0), (-1.0), image0, rectangleAnchor0);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-1.0), xYImageAnnotation0.getX(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.removeChangeListener(annotationChangeListener0);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-1.0), xYImageAnnotation0.getX(), 0.01);
      
      String string0 = "8JOD;U[KDEZ[";
      xYImageAnnotation0.setToolTipText("8JOD;U[KDEZ[");
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals("8JOD;U[KDEZ[", xYImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-1.0), xYImageAnnotation0.getX(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      // Undeclared exception!
      try { 
        xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, 0.0, image0);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      double double0 = xYImageAnnotation0.getY();
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYImageAnnotation0.setURL("");
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals("", xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      // Undeclared exception!
      try { 
        xYImageAnnotation0.draw(graphics2D0, xYPlot0, (Rectangle2D) null, valueAxis0, valueAxis0, 23, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(974.1, 1742.8428880281, image0);
      assertEquals(974.1, xYImageAnnotation0.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1742.8428880281, xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNotNull(xYImageAnnotation0);
      
      boolean boolean0 = xYImageAnnotation0.equals("ps@");
      assertEquals(974.1, xYImageAnnotation0.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1742.8428880281, xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertFalse(boolean0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_LEFT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 768, plotRenderingInfo0);
      assertEquals(974.1, xYImageAnnotation0.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1742.8428880281, xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertSame(axisLocation0, axisLocation1);
      assertSame(axisLocation1, axisLocation0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(image0).toString();
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, 0.0, image0);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNotNull(xYImageAnnotation0);
      
      double double0 = xYImageAnnotation0.getX();
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(0.0, double0, 0.01);
      
      Image image1 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation1 = new XYImageAnnotation(0.0, 0.0, image1);
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertNull(xYImageAnnotation1.getURL());
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotNull(xYImageAnnotation1);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      boolean boolean0 = xYImageAnnotation0.equals(xYImageAnnotation1);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertNull(xYImageAnnotation1.getURL());
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(boolean0);
      
      Image image2 = xYImageAnnotation0.getImage();
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(image2, image1);
      assertSame(image2, image0);
      assertNotNull(image2);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(image2.equals((Object)image1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(1.0, (-1.0), image0);
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotNull(xYImageAnnotation0);
      
      Image image1 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      XYImageAnnotation xYImageAnnotation1 = new XYImageAnnotation(0.0, (-1.0), image1, rectangleAnchor0);
      assertNull(xYImageAnnotation1.getURL());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotNull(xYImageAnnotation1);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      boolean boolean0 = xYImageAnnotation0.equals(xYImageAnnotation1);
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(boolean0);
      
      boolean boolean1 = xYImageAnnotation1.equals(rectangleAnchor0);
      assertNull(xYImageAnnotation1.getURL());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      xYImageAnnotation0.notifyListeners((AnnotationChangeEvent) null);
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      
      boolean boolean2 = xYImageAnnotation1.equals(xYImageAnnotation0);
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      double double0 = xYImageAnnotation1.getX();
      assertNull(xYImageAnnotation1.getURL());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertEquals(0.0, double0, 0.01);
      
      XYImageAnnotation xYImageAnnotation2 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(1.0, xYImageAnnotation2.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation2.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation2.getURL());
      assertTrue(xYImageAnnotation2.getNotify());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotNull(xYImageAnnotation2);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      
      double double1 = xYImageAnnotation0.getY();
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-1.0), double1, 0.01);
      
      xYImageAnnotation0.hashCode();
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      
      xYImageAnnotation0.hashCode();
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(image0).toString();
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(844.315393, 844.315393, image0);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNotNull(xYImageAnnotation0);
      
      boolean boolean0 = xYImageAnnotation0.equals("~+--1!,");
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertFalse(boolean0);
      
      xYImageAnnotation0.setNotify(false);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.addChangeListener(annotationChangeListener0);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.notifyListeners(annotationChangeEvent0);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      
      XYImageAnnotation xYImageAnnotation1 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(844.315393, xYImageAnnotation1.getY(), 0.01);
      assertEquals(844.315393, xYImageAnnotation1.getX(), 0.01);
      assertFalse(xYImageAnnotation1.getNotify());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation1);
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      xYImageAnnotation0.hashCode();
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      
      Image image1 = xYImageAnnotation0.getImage();
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertSame(image1, image0);
      assertNotNull(image1);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      
      XYImageAnnotation xYImageAnnotation2 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(844.315393, xYImageAnnotation2.getX(), 0.01);
      assertEquals(844.315393, xYImageAnnotation2.getY(), 0.01);
      assertFalse(xYImageAnnotation2.getNotify());
      assertNull(xYImageAnnotation2.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation2);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      
      boolean boolean1 = xYImageAnnotation0.equals(xYImageAnnotation2);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(844.315393, xYImageAnnotation2.getX(), 0.01);
      assertEquals(844.315393, xYImageAnnotation2.getY(), 0.01);
      assertFalse(xYImageAnnotation2.getNotify());
      assertNull(xYImageAnnotation2.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      XYImageAnnotation xYImageAnnotation3 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(844.315393, xYImageAnnotation3.getX(), 0.01);
      assertFalse(xYImageAnnotation3.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(844.315393, xYImageAnnotation3.getY(), 0.01);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotNull(xYImageAnnotation3);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      
      RectangleAnchor rectangleAnchor0 = xYImageAnnotation0.getImageAnchor();
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor0);
      
      boolean boolean2 = xYImageAnnotation0.equals(xYImageAnnotation1);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(844.315393, xYImageAnnotation1.getY(), 0.01);
      assertEquals(844.315393, xYImageAnnotation1.getX(), 0.01);
      assertFalse(xYImageAnnotation1.getNotify());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation2);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation3));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.RIGHT;
      XYImageAnnotation xYImageAnnotation4 = new XYImageAnnotation(844.315393, 1.0, image1, rectangleAnchor1);
      assertTrue(xYImageAnnotation4.getNotify());
      assertEquals(1.0, xYImageAnnotation4.getY(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, xYImageAnnotation4.getImageAnchor());
      assertNull(xYImageAnnotation4.getURL());
      assertEquals(844.315393, xYImageAnnotation4.getX(), 0.01);
      assertNull(xYImageAnnotation4.getToolTipText());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertNotNull(xYImageAnnotation4);
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      
      boolean boolean3 = xYImageAnnotation0.equals(xYImageAnnotation4);
      assertTrue(xYImageAnnotation4.getNotify());
      assertEquals(1.0, xYImageAnnotation4.getY(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, xYImageAnnotation4.getImageAnchor());
      assertNull(xYImageAnnotation4.getURL());
      assertEquals(844.315393, xYImageAnnotation4.getX(), 0.01);
      assertNull(xYImageAnnotation4.getToolTipText());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertSame(image1, image0);
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      
      double double0 = xYImageAnnotation4.getX();
      assertTrue(xYImageAnnotation4.getNotify());
      assertEquals(1.0, xYImageAnnotation4.getY(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, xYImageAnnotation4.getImageAnchor());
      assertNull(xYImageAnnotation4.getURL());
      assertEquals(844.315393, xYImageAnnotation4.getX(), 0.01);
      assertNull(xYImageAnnotation4.getToolTipText());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(844.315393, xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(844.315393, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertSame(image1, image0);
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertEquals(844.315393, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      XYImageAnnotation xYImageAnnotation0 = null;
      try {
        xYImageAnnotation0 = new XYImageAnnotation(2350.576169708864, 0.0, (Image) null, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(1.0E-100, 817.3587618649, image0, rectangleAnchor0);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(1.0E-100, xYImageAnnotation0.getX(), 0.01);
      assertEquals(RectangleAnchor.TOP_RIGHT, xYImageAnnotation0.getImageAnchor());
      assertEquals(817.3587618649, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotNull(xYImageAnnotation0);
      
      double double0 = xYImageAnnotation0.getY();
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(1.0E-100, xYImageAnnotation0.getX(), 0.01);
      assertEquals(RectangleAnchor.TOP_RIGHT, xYImageAnnotation0.getImageAnchor());
      assertEquals(817.3587618649, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(817.3587618649, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(3049.499397, 0.0, image0, rectangleAnchor0);
      assertEquals(3049.499397, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      XYImageAnnotation xYImageAnnotation1 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertEquals(3049.499397, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation1.getImageAnchor());
      assertTrue(xYImageAnnotation1.getNotify());
      assertNull(xYImageAnnotation1.getURL());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertEquals(3049.499397, xYImageAnnotation1.getX(), 0.01);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation1);
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      double double0 = xYImageAnnotation0.getX();
      assertEquals(3049.499397, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertEquals(3049.499397, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation((-1143.08007984802), 0.14, image0, rectangleAnchor0);
      assertEquals(RectangleAnchor.BOTTOM_LEFT, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-1143.08007984802), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(0.14, xYImageAnnotation0.getY(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      XYImageAnnotation xYImageAnnotation1 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertEquals(RectangleAnchor.BOTTOM_LEFT, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-1143.08007984802), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(0.14, xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation1.getURL());
      assertEquals((-1143.08007984802), xYImageAnnotation1.getX(), 0.01);
      assertNull(xYImageAnnotation1.getToolTipText());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.14, xYImageAnnotation1.getY(), 0.01);
      assertEquals(RectangleAnchor.BOTTOM_LEFT, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation1);
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      double double0 = xYImageAnnotation0.getX();
      assertEquals(RectangleAnchor.BOTTOM_LEFT, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals((-1143.08007984802), xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(0.14, xYImageAnnotation0.getY(), 0.01);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertEquals((-1143.08007984802), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Image image0 = null;
      XYImageAnnotation xYImageAnnotation0 = null;
      try {
        xYImageAnnotation0 = new XYImageAnnotation(943.5086329948026, 0.0, (Image) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(3596.2333272950427, 3596.2333272950427, image0, rectangleAnchor0);
      assertEquals(3596.2333272950427, xYImageAnnotation0.getX(), 0.01);
      assertEquals(3596.2333272950427, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation0.getImageAnchor());
      assertNotNull(xYImageAnnotation0);
      
      boolean boolean0 = xYImageAnnotation0.equals("org.jfree.chart.annotations.XYImageAnnotation");
      assertEquals(3596.2333272950427, xYImageAnnotation0.getX(), 0.01);
      assertEquals(3596.2333272950427, xYImageAnnotation0.getY(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation0.getImageAnchor());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, 0.0, image0);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      XYImageAnnotation xYImageAnnotation1 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation1);
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      double double0 = xYImageAnnotation0.getY();
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, 0.0, image0, rectangleAnchor0);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotNull(xYImageAnnotation0);
      
      double double0 = xYImageAnnotation0.getX();
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(1.0, 1.0, image0);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(1.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      RectangleAnchor rectangleAnchor0 = xYImageAnnotation0.getImageAnchor();
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(1.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(1.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation((-1.0), (-1.0), image0, rectangleAnchor0);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1.0), xYImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.removeChangeListener(annotationChangeListener0);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1.0), xYImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      
      String string0 = "8JOD;U[KDEZ[";
      xYImageAnnotation0.setToolTipText("8JOD;U[KDEZ[");
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals("8JOD;U[KDEZ[", xYImageAnnotation0.getToolTipText());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1.0), xYImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYImageAnnotation0.getY(), 0.01);
      
      AnnotationChangeListener annotationChangeListener1 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(311.3260166685953, 1.0, image0);
      assertEquals(311.3260166685953, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(1.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNotNull(xYImageAnnotation0);
      
      Graphics2D graphics2D0 = null;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = null;
      int int0 = (-370);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot1 = null;
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.removeChangeListener((AnnotationChangeListener) null);
      assertEquals(311.3260166685953, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(1.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNull(xYImageAnnotation0.getToolTipText());
      
      // Undeclared exception!
      try { 
        xYImageAnnotation0.draw((Graphics2D) null, (XYPlot) null, rectangle2D1, (ValueAxis) null, (ValueAxis) null, 6, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(3607.3990065468497, 3607.3990065468497, image0, rectangleAnchor0);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(3607.3990065468497, xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.BOTTOM_RIGHT, xYImageAnnotation0.getImageAnchor());
      assertEquals(3607.3990065468497, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNotNull(xYImageAnnotation0);
      
      boolean boolean0 = xYImageAnnotation0.equals("3<mVx~m\"f?");
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals(3607.3990065468497, xYImageAnnotation0.getY(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.BOTTOM_RIGHT, xYImageAnnotation0.getImageAnchor());
      assertEquals(3607.3990065468497, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation((-1609.9162449397083), 3.141592653589793, image0);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertNotNull(xYImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYImageAnnotation0.hasListener(eventListener0);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertFalse(boolean0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.removeChangeListener(annotationChangeListener0);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      
      xYImageAnnotation0.setNotify(false);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      
      XYImageAnnotation xYImageAnnotation1 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(3.141592653589793, xYImageAnnotation1.getY(), 0.01);
      assertEquals((-1609.9162449397083), xYImageAnnotation1.getX(), 0.01);
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertFalse(xYImageAnnotation1.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation1);
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      
      boolean boolean1 = xYImageAnnotation1.equals(xYImageAnnotation1);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals(3.141592653589793, xYImageAnnotation1.getY(), 0.01);
      assertEquals((-1609.9162449397083), xYImageAnnotation1.getX(), 0.01);
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertFalse(xYImageAnnotation1.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation1.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      AnnotationChangeListener annotationChangeListener1 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.removeChangeListener(annotationChangeListener1);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      
      XYImageAnnotation xYImageAnnotation2 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1609.9162449397083), xYImageAnnotation2.getX(), 0.01);
      assertNull(xYImageAnnotation2.getURL());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertEquals(3.141592653589793, xYImageAnnotation2.getY(), 0.01);
      assertFalse(xYImageAnnotation2.getNotify());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotNull(xYImageAnnotation2);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      
      AnnotationChangeEvent annotationChangeEvent1 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation2.notifyListeners(annotationChangeEvent1);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1609.9162449397083), xYImageAnnotation2.getX(), 0.01);
      assertNull(xYImageAnnotation2.getURL());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertEquals(3.141592653589793, xYImageAnnotation2.getY(), 0.01);
      assertFalse(xYImageAnnotation2.getNotify());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      
      RectangleAnchor rectangleAnchor0 = xYImageAnnotation0.getImageAnchor();
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor0);
      
      Image image1 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation3 = new XYImageAnnotation((-1609.9162449397083), 3.141592653589793, image1);
      assertEquals(3.141592653589793, xYImageAnnotation3.getY(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals((-1609.9162449397083), xYImageAnnotation3.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertNotNull(xYImageAnnotation3);
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      
      AnnotationChangeEvent annotationChangeEvent2 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation3.notifyListeners(annotationChangeEvent2);
      assertEquals(3.141592653589793, xYImageAnnotation3.getY(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals((-1609.9162449397083), xYImageAnnotation3.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      
      xYImageAnnotation3.setNotify(true);
      assertEquals(3.141592653589793, xYImageAnnotation3.getY(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals((-1609.9162449397083), xYImageAnnotation3.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      
      boolean boolean2 = xYImageAnnotation0.equals(xYImageAnnotation3);
      assertEquals(3.141592653589793, xYImageAnnotation3.getY(), 0.01);
      assertTrue(xYImageAnnotation3.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals((-1609.9162449397083), xYImageAnnotation3.getX(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals((-1609.9162449397083), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(3.141592653589793, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      doReturn("", "").when(image0).toString();
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, (-234.0898046035), image0);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.removeChangeListener(annotationChangeListener0);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      
      xYImageAnnotation0.fireAnnotationChanged();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      
      xYImageAnnotation0.setNotify(false);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      
      xYImageAnnotation0.hashCode();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      
      double double0 = xYImageAnnotation0.getY();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals((-234.0898046035), double0, 0.01);
      
      Image image1 = xYImageAnnotation0.getImage();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertSame(image1, image0);
      assertNotNull(image1);
      
      Image image2 = xYImageAnnotation0.getImage();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotNull(image2);
      
      double double1 = xYImageAnnotation0.getX();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      double double2 = xYImageAnnotation0.getX();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      RectangleAnchor rectangleAnchor0 = xYImageAnnotation0.getImageAnchor();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor0);
      
      double double3 = xYImageAnnotation0.getX();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNotEquals(double3, double0, 0.01);
      assertEquals(double3, double2, 0.01);
      assertEquals(double3, double1, 0.01);
      assertEquals(0.0, double3, 0.01);
      
      double double4 = xYImageAnnotation0.getY();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertEquals(double4, double0, 0.01);
      assertEquals((-234.0898046035), double4, 0.01);
      
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.LEFT;
      XYImageAnnotation xYImageAnnotation1 = new XYImageAnnotation(0.0, 0.0, image2, rectangleAnchor1);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotNull(xYImageAnnotation1);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      
      boolean boolean0 = xYImageAnnotation0.equals(xYImageAnnotation1);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(boolean0);
      
      XYImageAnnotation xYImageAnnotation2 = new XYImageAnnotation(0.0, (-234.0898046035), image2);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertTrue(xYImageAnnotation2.getNotify());
      assertNull(xYImageAnnotation2.getURL());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotNull(xYImageAnnotation2);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      
      xYImageAnnotation1.notifyListeners((AnnotationChangeEvent) null);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      
      boolean boolean1 = xYImageAnnotation0.equals(xYImageAnnotation2);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertTrue(xYImageAnnotation2.getNotify());
      assertNull(xYImageAnnotation2.getURL());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      XYImageAnnotation xYImageAnnotation3 = new XYImageAnnotation((-234.0898046035), (-234.0898046035), image2);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertTrue(xYImageAnnotation3.getNotify());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotNull(xYImageAnnotation3);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      
      XYImageAnnotation xYImageAnnotation4 = (XYImageAnnotation)xYImageAnnotation3.clone();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertTrue(xYImageAnnotation3.getNotify());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertTrue(xYImageAnnotation4.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation4.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation4.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation4.getY(), 0.01);
      assertNull(xYImageAnnotation4.getURL());
      assertNull(xYImageAnnotation4.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation3);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotNull(xYImageAnnotation4);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation4.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation2));
      
      boolean boolean2 = xYImageAnnotation2.equals(xYImageAnnotation4);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertTrue(xYImageAnnotation2.getNotify());
      assertNull(xYImageAnnotation2.getURL());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertTrue(xYImageAnnotation3.getNotify());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertTrue(xYImageAnnotation4.getNotify());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation4.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation4.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation4.getY(), 0.01);
      assertNull(xYImageAnnotation4.getURL());
      assertNull(xYImageAnnotation4.getToolTipText());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation4, xYImageAnnotation3);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation4));
      assertTrue(xYImageAnnotation4.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation4.equals((Object)xYImageAnnotation2));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      AnnotationChangeListener annotationChangeListener1 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation3.addChangeListener(annotationChangeListener1);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertTrue(xYImageAnnotation3.getNotify());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation4));
      
      boolean boolean3 = xYImageAnnotation1.equals(image1);
      assertEquals(RectangleAnchor.LEFT, xYImageAnnotation1.getImageAnchor());
      assertNull(xYImageAnnotation1.getToolTipText());
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals(0.0, xYImageAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYImageAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertEquals(0.0F, image1.getAccelerationPriority(), 0.01F);
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation1, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertSame(image1, image0);
      assertSame(image1, image2);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation1.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertFalse(boolean3);
      
      xYImageAnnotation0.hashCode();
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      
      boolean boolean4 = xYImageAnnotation2.equals((Object) null);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation2.getToolTipText());
      assertTrue(xYImageAnnotation2.getNotify());
      assertNull(xYImageAnnotation2.getURL());
      assertEquals(0.0, xYImageAnnotation2.getX(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation2.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation2.getImageAnchor());
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation2, xYImageAnnotation4);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation3));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation1));
      assertTrue(xYImageAnnotation2.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation2.equals((Object)xYImageAnnotation4));
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      
      boolean boolean5 = xYImageAnnotation3.equals((Object) null);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation3.getURL());
      assertNull(xYImageAnnotation3.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation3.getImageAnchor());
      assertTrue(xYImageAnnotation3.getNotify());
      assertEquals((-234.0898046035), xYImageAnnotation3.getY(), 0.01);
      assertEquals((-234.0898046035), xYImageAnnotation3.getX(), 0.01);
      assertEquals(0.0F, image2.getAccelerationPriority(), 0.01F);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation3, xYImageAnnotation2);
      assertSame(image2, image0);
      assertSame(image2, image1);
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation0));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation3.equals((Object)xYImageAnnotation2));
      assertTrue(xYImageAnnotation3.equals((Object)xYImageAnnotation4));
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5 == boolean1);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_RIGHT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertEquals((-234.0898046035), xYImageAnnotation0.getY(), 0.01);
      assertFalse(xYImageAnnotation0.getNotify());
      assertNotSame(axisLocation1, axisLocation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation4);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation3);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation2);
      assertNotSame(axisLocation0, axisLocation1);
      assertFalse(axisLocation1.equals((Object)axisLocation0));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation1));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation4));
      assertFalse(xYImageAnnotation0.equals((Object)xYImageAnnotation3));
      assertTrue(xYImageAnnotation0.equals((Object)xYImageAnnotation2));
      assertFalse(axisLocation0.equals((Object)axisLocation1));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(197).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(197).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, 0.0, image0);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertNotNull(xYImageAnnotation0);
      
      double double0 = xYImageAnnotation0.getY();
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertNull(xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F, 1.0E-8).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYImageAnnotation0.setURL("");
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo0).getOwner();
      xYImageAnnotation0.draw(graphics2D0, xYPlot0, (Rectangle2D) null, valueAxis0, valueAxis0, 23, plotRenderingInfo0);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYImageAnnotation0.hasListener(eventListener0);
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertFalse(boolean0);
      
      boolean boolean1 = xYImageAnnotation0.equals("");
      assertEquals(0.0, xYImageAnnotation0.getY(), 0.01);
      assertEquals(RectangleAnchor.CENTER, xYImageAnnotation0.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals("", xYImageAnnotation0.getURL());
      assertNull(xYImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYImageAnnotation0.getX(), 0.01);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(59).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation((-3656.8083133), (-1370.2256), image0, rectangleAnchor0);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getToolTipText());
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertNotNull(xYImageAnnotation0);
      
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(entityCollection0).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.setToolTipText("iY1[QD$(614");
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals("iY1[QD$(614", xYImageAnnotation0.getToolTipText());
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((-2651.6683), 1.5707963267948966).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, (-2754), (PlotRenderingInfo) null);
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals("iY1[QD$(614", xYImageAnnotation0.getToolTipText());
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      
      xYImageAnnotation0.addEntity(plotRenderingInfo0, shape0, (-2754), "", "/fJgx:E7RAr$ZLDzK");
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals("iY1[QD$(614", xYImageAnnotation0.getToolTipText());
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      
      double double0 = xYImageAnnotation0.getY();
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals("iY1[QD$(614", xYImageAnnotation0.getToolTipText());
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertEquals((-1370.2256), double0, 0.01);
      
      XYImageAnnotation xYImageAnnotation1 = (XYImageAnnotation)xYImageAnnotation0.clone();
      assertNull(xYImageAnnotation1.getURL());
      assertTrue(xYImageAnnotation1.getNotify());
      assertEquals((-3656.8083133), xYImageAnnotation1.getX(), 0.01);
      assertEquals((-1370.2256), xYImageAnnotation1.getY(), 0.01);
      assertEquals("iY1[QD$(614", xYImageAnnotation1.getToolTipText());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation1.getImageAnchor());
      assertTrue(xYImageAnnotation0.getNotify());
      assertEquals((-1370.2256), xYImageAnnotation0.getY(), 0.01);
      assertEquals("iY1[QD$(614", xYImageAnnotation0.getToolTipText());
      assertEquals((-3656.8083133), xYImageAnnotation0.getX(), 0.01);
      assertNull(xYImageAnnotation0.getURL());
      assertEquals(RectangleAnchor.TOP, xYImageAnnotation0.getImageAnchor());
      assertNotSame(xYImageAnnotation1, xYImageAnnotation0);
      assertNotSame(xYImageAnnotation0, xYImageAnnotation1);
      assertNotNull(xYImageAnnotation1);
      assertTrue(xYImageAnnotation1.equals((Object)xYImageAnnotation0));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn((-1), 0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn((-1), 0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(1380.935, (-3546.9324071), image0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-1), (double)(-1)).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      Object object0 = xYImageAnnotation0.clone();
      xYImageAnnotation0.equals(object0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      xYImageAnnotation0.hashCode();
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.addChangeListener(annotationChangeListener0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D1).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot1 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot1).getDomainAxisLocation();
      doReturn(plotOrientation1).when(xYPlot1).getOrientation();
      doReturn(axisLocation0).when(xYPlot1).getRangeAxisLocation();
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.notifyListeners(annotationChangeEvent0);
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYImageAnnotation0.setURL("org.jfree.chart.ui.RectangleInsets");
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo1).getOwner();
      // Undeclared exception!
      try { 
        xYImageAnnotation0.draw(graphics2D1, xYPlot1, (Rectangle2D) null, valueAxis1, valueAxis1, 0, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_RIGHT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
  }
}
