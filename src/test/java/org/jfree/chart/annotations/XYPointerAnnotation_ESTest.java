/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:51:04 GMT 2019
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.text.TextUtils;
import org.jfree.chart.ui.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class XYPointerAnnotation_ESTest extends XYPointerAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("N8PqhUG@*GSPz2+@V]", 3246.25, 3246.25, 3246.25);
      xYPointerAnnotation0.setNotify(false);
      Stroke stroke0 = xYPointerAnnotation0.getOutlineStroke();
      xYPointerAnnotation0.setOutlineStroke(stroke0);
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.removeChangeListener(annotationChangeListener0);
      AnnotationChangeListener annotationChangeListener1 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.removeChangeListener(annotationChangeListener1);
      AnnotationChangeListener annotationChangeListener2 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.removeChangeListener(annotationChangeListener2);
      xYPointerAnnotation0.setTipRadius(192.16510615212002);
      xYPointerAnnotation0.setBaseRadius(3246.25);
      xYPointerAnnotation0.setOutlineVisible(false);
      xYPointerAnnotation0.getAngle();
      xYPointerAnnotation0.getArrowWidth();
      xYPointerAnnotation0.notifyListeners((AnnotationChangeEvent) null);
      xYPointerAnnotation0.getLabelOffset();
      xYPointerAnnotation0.setTipRadius(3.0);
      Object object0 = xYPointerAnnotation0.clone();
      xYPointerAnnotation0.equals(object0);
      xYPointerAnnotation0.setAngle(0.0);
      xYPointerAnnotation0.setTipRadius(192.16510615212002);
      Paint paint0 = xYPointerAnnotation0.getOutlinePaint();
      xYPointerAnnotation0.setArrowPaint(paint0);
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      xYPointerAnnotation1.setRotationAngle(26.404143642240527);
      xYPointerAnnotation1.setArrowWidth(10.0);
      xYPointerAnnotation1.setFont(xYPointerAnnotation0.DEFAULT_FONT);
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.equals("`KfA$l\"k?I})LjHt&");
      XYPointerAnnotation xYPointerAnnotation2 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      xYPointerAnnotation1.equals(xYPointerAnnotation2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = (-1939.90362197);
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 584.278921635053, 100.0, (-1939.90362197));
      xYPointerAnnotation0.equals("");
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.equals("poly");
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.setY(0.0);
      xYPointerAnnotation0.setURL("poly");
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("", (-1939.90362197), 0.0, 0.0);
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation1.removeChangeListener(annotationChangeListener0);
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.setArrowWidth(30.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowLength();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((double)10, (-130.704)).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 2044.1407, 100.0, (-1939.90362197));
      xYPointerAnnotation0.equals("");
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.equals("poly");
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.setY(0.0);
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation1.getOutlineStroke();
      xYPointerAnnotation1.setArrowStroke(basicStroke0);
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.setArrowWidth(30.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowLength();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(2933.8735, 14.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      xYPointerAnnotation0.getArrowPaint();
      xYPointerAnnotation0.setAngle((-1939.90362197));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("mHEsHMK", 2941.554598121, 2941.554598121, 2941.554598121);
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      xYPointerAnnotation0.setLabelOffset((-262.127264577));
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.fireAnnotationChanged();
      xYPointerAnnotation1.setArrowLength(2941.554598121);
      xYPointerAnnotation0.clone();
      xYPointerAnnotation0.hasListener(eventListener0);
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.getArrowWidth();
      xYPointerAnnotation0.equals("mHEsHMK");
      xYPointerAnnotation0.setAngle((-3103.269));
      xYPointerAnnotation0.setArrowWidth((-3103.269));
      xYPointerAnnotation0.setAngle((-3103.269));
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      xYPointerAnnotation0.setPaint(color0);
      xYPointerAnnotation0.getAngle();
      xYPointerAnnotation0.setAngle(0.0);
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.getTipRadius();
      xYPointerAnnotation0.clone();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 2044.1407, 100.0, (-1939.90362197));
      xYPointerAnnotation0.equals("");
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.equals("poly");
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.setY(0.0);
      Object object0 = xYPointerAnnotation0.clone();
      xYPointerAnnotation0.equals(object0);
      xYPointerAnnotation0.setArrowWidth(30.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowLength();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      xYPointerAnnotation0.getArrowPaint();
      xYPointerAnnotation0.setAngle((-1939.90362197));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("5", 2541.428718889316, 2541.428718889316, 2541.428718889316);
      xYPointerAnnotation0.setArrowWidth(2541.428718889316);
      Object object0 = xYPointerAnnotation0.clone();
      xYPointerAnnotation0.equals(object0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.hasListener(eventListener0);
      xYPointerAnnotation0.setLabelOffset(3674.223);
      xYPointerAnnotation0.equals("5");
      xYPointerAnnotation0.clone();
      xYPointerAnnotation0.equals(object0);
      Paint paint0 = xYPointerAnnotation0.getPaint();
      xYPointerAnnotation0.setPaint(paint0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, (-2146510694), (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 99.3294831976, 99.3294831976, 99.3294831976);
      Stroke stroke0 = xYPointerAnnotation0.getArrowStroke();
      xYPointerAnnotation0.setX(180.0);
      xYPointerAnnotation0.setArrowStroke(stroke0);
      Paint paint0 = xYPointerAnnotation0.getPaint();
      xYPointerAnnotation0.setBackgroundPaint(paint0);
      xYPointerAnnotation0.setArrowLength(99.3294831976);
      xYPointerAnnotation0.getTipRadius();
      xYPointerAnnotation0.getArrowWidth();
      xYPointerAnnotation0.getArrowStroke();
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.removeChangeListener(annotationChangeListener0);
      xYPointerAnnotation0.getArrowLength();
      xYPointerAnnotation0.getArrowStroke();
      xYPointerAnnotation0.setToolTipText("P*HhE$^r?/P|V");
      xYPointerAnnotation0.setLabelOffset(99.3294831976);
      xYPointerAnnotation0.getTipRadius();
      xYPointerAnnotation0.setTipRadius(99.3294831976);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_LEFT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      Object object0 = xYPointerAnnotation0.clone();
      xYPointerAnnotation0.equals(object0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("2_", 0.0, 0.0, 0.0);
      TextUtils.setUseDrawRotatedStringWorkaround(false);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.equals("2_");
      xYPointerAnnotation0.notifyListeners(annotationChangeEvent0);
      xYPointerAnnotation0.hashCode();
      xYPointerAnnotation0.equals(xYPointerAnnotation0);
      xYPointerAnnotation0.setTipRadius(0.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowWidth();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(3.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(1946.663649).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw((Graphics2D) null, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 193, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("2_", 0.0, 0.0, 0.0);
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("(ftxxEA}^", 5.0, 3.0, 30.0);
      TextUtils.setUseDrawRotatedStringWorkaround(false);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation1.equals("2_");
      xYPointerAnnotation1.notifyListeners(annotationChangeEvent0);
      xYPointerAnnotation1.hashCode();
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.setTipRadius(0.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowWidth();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((-3161.56031)).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((double)10).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation1.getArrowPaint();
      // Undeclared exception!
      try { 
        xYPointerAnnotation1.draw((Graphics2D) null, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 193, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.1, 0.0, 0.1);
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.addChangeListener(annotationChangeListener0);
      xYPointerAnnotation0.getAngle();
      xYPointerAnnotation0.getArrowStroke();
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      xYPointerAnnotation1.setLabelOffset((-1818.209111700191));
      xYPointerAnnotation0.getAngle();
      xYPointerAnnotation0.hashCode();
      xYPointerAnnotation0.getBaseRadius();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.setArrowPaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPointerAnnotation0.getArrowWidth();
      xYPointerAnnotation0.equals("");
      xYPointerAnnotation0.hashCode();
      xYPointerAnnotation0.clone();
      xYPointerAnnotation0.getArrowWidth();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = (-1939.90362197);
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 2044.1407, 100.0, (-1939.90362197));
      xYPointerAnnotation0.equals("");
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.isOutlineVisible();
      xYPointerAnnotation0.setAngle(30.0);
      xYPointerAnnotation0.setY(0.0);
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      xYPointerAnnotation1.setBaseRadius(0.0);
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.setArrowWidth(30.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowLength();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.getArrowPaint();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("stroke", 0.0, 0.0, (-95.1014744426));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      
      Color color0 = (Color)xYPointerAnnotation0.getPaint();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setBackgroundPaint(color0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      
      xYPointerAnnotation0.setArrowLength((-1818.209111700191));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      
      xYPointerAnnotation0.setBaseRadius(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      
      xYPointerAnnotation0.setArrowWidth(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setBaseRadius((-95.1014744426));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      double double0 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-95.1014744426), double1, 0.01);
      
      Color color1 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertSame(color1, color0);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(255, color1.getAlpha());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getBlue());
      assertEquals(0, color1.getRed());
      assertEquals(1, color1.getTransparency());
      assertNotNull(color1);
      
      double double2 = xYPointerAnnotation0.getArrowLength();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1818.209111700191), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-95.1014744426), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-1818.209111700191), double2, 0.01);
      
      xYPointerAnnotation0.getArrowStroke();
      xYPointerAnnotation0.equals(xYPointerAnnotation0);
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      xYPointerAnnotation0.setNotify(true);
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(xYPointerAnnotation0.DEFAULT_FONT, (Font) null).when(graphics2D0).getFont();
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics();
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn(fontRenderContext0, (FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_RIGHT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      xYPointerAnnotation0.setLabelOffset(10);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.setNotify(false);
      xYPointerAnnotation0.equals("stroke");
      xYPointerAnnotation0.getArrowPaint();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((-1558.4524), 4.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("2_", 0.0, 0.0, 0.0);
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("(ftxxEA}^", 5.0, 3.0, 30.0);
      TextUtils.setUseDrawRotatedStringWorkaround(false);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation1.equals("2_");
      xYPointerAnnotation1.notifyListeners(annotationChangeEvent0);
      xYPointerAnnotation1.hashCode();
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.setTipRadius(0.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowWidth();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation1.draw((Graphics2D) null, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 193, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("stroke", 0.0, 0.0, (-95.1014744426));
      xYPointerAnnotation0.hashCode();
      Paint paint0 = xYPointerAnnotation0.getPaint();
      xYPointerAnnotation0.setBackgroundPaint(paint0);
      xYPointerAnnotation0.setArrowLength((-1818.209111700191));
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.setArrowWidth(0.0);
      xYPointerAnnotation0.setBaseRadius((-95.1014744426));
      xYPointerAnnotation0.getLabelOffset();
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.getArrowPaint();
      xYPointerAnnotation0.getArrowLength();
      xYPointerAnnotation0.getArrowStroke();
      xYPointerAnnotation0.equals(xYPointerAnnotation0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(graphics2D0).getFont();
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_RIGHT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      xYPointerAnnotation0.setLabelOffset(10);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.setNotify(false);
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("stroke", 0.0, 0.0, (-95.1014744426));
      xYPointerAnnotation0.hashCode();
      Paint paint0 = xYPointerAnnotation0.getPaint();
      xYPointerAnnotation0.setBackgroundPaint(paint0);
      xYPointerAnnotation0.setArrowLength((-1818.209111700191));
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.setArrowWidth(0.0);
      xYPointerAnnotation0.setBaseRadius((-95.1014744426));
      xYPointerAnnotation0.getLabelOffset();
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.getArrowPaint();
      xYPointerAnnotation0.getArrowLength();
      xYPointerAnnotation0.getArrowStroke();
      xYPointerAnnotation0.equals(xYPointerAnnotation0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      xYPointerAnnotation0.setLabelOffset(10);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.hashCode();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("2_", 0.0, 0.0, 0.0);
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("", 5.0, 3.0, 30.0);
      TextUtils.setUseDrawRotatedStringWorkaround(false);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation1.equals("2_");
      xYPointerAnnotation1.notifyListeners(annotationChangeEvent0);
      xYPointerAnnotation1.hashCode();
      xYPointerAnnotation0.equals(xYPointerAnnotation1);
      xYPointerAnnotation0.setTipRadius(0.0);
      xYPointerAnnotation0.setBaseRadius(0.0);
      xYPointerAnnotation0.getArrowWidth();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_RIGHT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation1.draw((Graphics2D) null, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 193, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, 1.5707963267948966, 1.5707963267948966);
      Stroke stroke0 = xYPointerAnnotation0.getArrowStroke();
      xYPointerAnnotation0.setOutlineStroke(stroke0);
      TextUtils.setDrawStringsWithFontAttributes(false);
      xYPointerAnnotation0.clone();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.setText("");
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.hasListener(eventListener0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw((Graphics2D) null, xYPlot0, rectangle2D0, (ValueAxis) null, (ValueAxis) null, 250, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("r2l8", 0.0, 0.0, 0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      Color color0 = (Color)xYPointerAnnotation0.getOutlinePaint();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setOutlinePaint(color0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("r2l8", 30.0, 418.5, 0.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(418.5, xYPointerAnnotation1.getY(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.removeChangeListener(annotationChangeListener0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation1.setOutlineStroke(basicStroke0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(418.5, xYPointerAnnotation1.getY(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      xYPointerAnnotation1.setToolTipText("eEwNPJ&}\r{");
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(418.5, xYPointerAnnotation1.getY(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      
      AnnotationChangeListener annotationChangeListener1 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation1.removeChangeListener(annotationChangeListener1);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(418.5, xYPointerAnnotation1.getY(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      
      BasicStroke basicStroke1 = (BasicStroke)xYPointerAnnotation1.getArrowStroke();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(basicStroke1, basicStroke0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(basicStroke1.equals((Object)basicStroke0));
      assertEquals(418.5, xYPointerAnnotation1.getY(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertNotNull(basicStroke1);
      
      XYPointerAnnotation xYPointerAnnotation2 = (XYPointerAnnotation)xYPointerAnnotation1.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertEquals(418.5, xYPointerAnnotation1.getY(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation2.getToolTipText());
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(418.5, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getAngle(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation2.getText());
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertNotNull(xYPointerAnnotation2);
      
      xYPointerAnnotation1.setY(10.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke1);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(basicStroke1, basicStroke0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertTrue(basicStroke1.equals((Object)basicStroke0));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      
      double double0 = xYPointerAnnotation1.getArrowWidth();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation1.getLabelOffset();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertEquals(double1, double0, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, double1, 0.01);
      
      double double2 = xYPointerAnnotation1.getArrowWidth();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, double2, 0.01);
      
      double double3 = xYPointerAnnotation0.getArrowLength();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(5.0, double3, 0.01);
      
      xYPointerAnnotation0.setLabelOffset((-1872.471469368));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-1872.471469368), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.setTipRadius(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-1872.471469368), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.setArrowLength(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-1872.471469368), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation1.hashCode();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      
      double double4 = xYPointerAnnotation1.getArrowWidth();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals(double4, double0, 0.01);
      assertEquals(double4, double1, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertEquals(double4, double2, 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, double4, 0.01);
      
      double double5 = xYPointerAnnotation0.getTipRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertNotEquals(double5, double0, 0.01);
      assertNotEquals(double5, double2, 0.01);
      assertNotEquals(double5, double3, 0.01);
      assertNotEquals(double5, double1, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-1872.471469368), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, double5, 0.01);
      
      xYPointerAnnotation1.setArrowWidth((-4366.7591));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals((-4366.7591), xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      
      XYPointerAnnotation xYPointerAnnotation3 = (XYPointerAnnotation)xYPointerAnnotation1.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertTrue(xYPointerAnnotation3.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation0));
      assertEquals((-4366.7591), xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation3.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation3.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation3.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation3.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation3.isOutlineVisible());
      assertTrue(xYPointerAnnotation3.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation3.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation3.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation3.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation3.getURL());
      assertEquals(0.0, xYPointerAnnotation3.getAngle(), 0.01);
      assertEquals((-4366.7591), xYPointerAnnotation3.getArrowWidth(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation3.getText());
      assertEquals(30.0, xYPointerAnnotation3.getX(), 0.01);
      assertNotNull(xYPointerAnnotation3);
      
      boolean boolean0 = xYPointerAnnotation2.equals(xYPointerAnnotation0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("r2l8", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-1872.471469368), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-4366.7591), xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation1.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals("eEwNPJ&}\r{", xYPointerAnnotation2.getToolTipText());
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(418.5, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getAngle(), 0.01);
      assertEquals("r2l8", xYPointerAnnotation2.getText());
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("stroke", 0.0, 0.0, 0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setRotationAngle(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.addEntity(plotRenderingInfo0, shape0, 13, "", "");
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setBaseRadius((-761.923266));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals((-761.923266), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      
      Color color0 = (Color)xYPointerAnnotation0.getOutlinePaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals((-761.923266), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals((-761.923266), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("", (-2798.1240503148), 3.0, 0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals((-2798.1240503148), xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNotNull(xYPointerAnnotation1);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals((-761.923266), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("stroke", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals((-2798.1240503148), xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("0!PZWK", (-1382.0), 8.0, (-1658.807495123761));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(8.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("0!PZWK", xYPointerAnnotation0.getText());
      assertEquals((-1658.807495123761), xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals((-1382.0), xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 32, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("t#3DA59D[X]D", 3484.0, 3484.0, 3484.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("t#3DA59D[X]D", 0.0, 10.0, 3484.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3484.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation1.getOutlineStroke();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3484.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.setOutlineStroke(basicStroke0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3484.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      
      xYPointerAnnotation0.setLabelOffset(5.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      double double0 = xYPointerAnnotation0.getArrowLength();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(5.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, double1, 0.01);
      
      xYPointerAnnotation1.setY(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3484.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      
      xYPointerAnnotation1.setAngle((-141.88648));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals((-141.88648), xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      
      xYPointerAnnotation0.setFont(valueAxis0.DEFAULT_AXIS_LABEL_FONT);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation1.setBaseRadius((-936.602361));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals((-936.602361), xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals((-141.88648), xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      
      double double2 = xYPointerAnnotation0.getTipRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, double2, 0.01);
      
      xYPointerAnnotation0.setArrowStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setTipRadius(0.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      boolean boolean0 = xYPointerAnnotation0.equals((Object) null);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setArrowPaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw((Graphics2D) null, (XYPlot) null, rectangle2D0, valueAxis1, valueAxis1, 10, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("7n`/", 3620.523738442, 3168.1610838955, 3168.1610838955);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNotNull(xYPointerAnnotation0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.addChangeListener(annotationChangeListener0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      
      double double0 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, double0, 0.01);
      
      xYPointerAnnotation0.setTipRadius(3620.523738442);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      
      xYPointerAnnotation0.setNotify(false);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      
      xYPointerAnnotation0.setArrowWidth(0.0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      double double1 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, double1, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("paint", 0.0, 10.0, 10.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNotNull(xYPointerAnnotation1);
      
      xYPointerAnnotation1.setArrowWidth(2949.43536432);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation1.getArrowStroke();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation1.setTipRadius(876.1303768779);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(876.1303768779, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(876.1303768779, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      
      double double2 = xYPointerAnnotation0.getArrowLength();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(5.0, double2, 0.01);
      
      double double3 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, double3, 0.01);
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertNotNull(color0);
      
      xYPointerAnnotation1.setX(3.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(876.1303768779, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      
      XYPointerAnnotation xYPointerAnnotation2 = (XYPointerAnnotation)xYPointerAnnotation1.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertTrue(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(10.0, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getX(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation2.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertEquals(876.1303768779, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertEquals("paint", xYPointerAnnotation2.getText());
      assertEquals(876.1303768779, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNotNull(xYPointerAnnotation2);
      
      double double4 = xYPointerAnnotation1.getLabelOffset();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertEquals(double4, double0, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertEquals(double4, double1, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals(876.1303768779, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(3.0, double4, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation3 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation2));
      assertTrue(xYPointerAnnotation3.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation1));
      assertEquals(3620.523738442, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation0.getText());
      assertEquals(3168.1610838955, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation3.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation3.getURL());
      assertNull(xYPointerAnnotation3.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation3.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation3.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation3.getArrowWidth(), 0.01);
      assertEquals(3168.1610838955, xYPointerAnnotation3.getY(), 0.01);
      assertFalse(xYPointerAnnotation3.getNotify());
      assertEquals(3168.1610838955, xYPointerAnnotation3.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation3.isOutlineVisible());
      assertEquals(3620.523738442, xYPointerAnnotation3.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation3.getLabelOffset(), 0.01);
      assertEquals(3620.523738442, xYPointerAnnotation3.getX(), 0.01);
      assertEquals("7n`/", xYPointerAnnotation3.getText());
      assertNotNull(xYPointerAnnotation3);
      
      double double5 = xYPointerAnnotation1.getBaseRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotEquals(double5, double0, 0.01);
      assertNotEquals(double5, double3, 0.01);
      assertNotEquals(double5, double1, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertNotEquals(double5, double2, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation3));
      assertEquals(876.1303768779, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(30.0, double5, 0.01);
      
      BasicStroke basicStroke1 = (BasicStroke)xYPointerAnnotation1.getArrowStroke();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertSame(basicStroke1, basicStroke0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation3));
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(876.1303768779, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("paint", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(2949.43536432, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNotNull(basicStroke1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, 0.0, 75.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(75.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      Color color0 = (Color)xYPointerAnnotation0.getPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(75.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16777216), color0.getRGB());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setPaint(color0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(75.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16777216), color0.getRGB());
      
      xYPointerAnnotation0.setTipRadius(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(75.0, xYPointerAnnotation0.getAngle(), 0.01);
      
      TextUtils.setUseFontMetricsGetStringBounds(true);
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(75.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(75.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      xYPointerAnnotation0.setAngle(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      
      double double0 = xYPointerAnnotation0.getArrowLength();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(5.0, double0, 0.01);
      
      xYPointerAnnotation0.setURL("2J?U-^=F|(~pPZ");
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setAngle(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      xYPointerAnnotation0.setArrowLength(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      
      double double1 = xYPointerAnnotation0.getAngle();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, double1, 0.01);
      
      Color color1 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertSame(color1, color0);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(1, color1.getTransparency());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getRed());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getBlue());
      assertEquals(255, color1.getAlpha());
      assertNotNull(color1);
      
      xYPointerAnnotation0.setLabelOffset(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      
      double double2 = xYPointerAnnotation0.getTipRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, double2, 0.01);
      
      BasicStroke basicStroke1 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertSame(basicStroke1, basicStroke0);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertNotNull(basicStroke1);
      
      double double3 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertEquals(double3, double2, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, double3, 0.01);
      
      xYPointerAnnotation0.setBaseRadius(2845.2283624330885);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(2845.2283624330885, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      
      Color color2 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertSame(color2, color1);
      assertSame(color2, color0);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("2J?U-^=F|(~pPZ", xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(2845.2283624330885, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(1, color2.getTransparency());
      assertEquals((-16777216), color2.getRGB());
      assertEquals(255, color2.getAlpha());
      assertEquals(0, color2.getRed());
      assertEquals(0, color2.getBlue());
      assertEquals(0, color2.getGreen());
      assertNotNull(color2);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("Zo.f?vRD:!2/{/}K", 0.0, 1377.68, 0.0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setOutlineStroke(basicStroke0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertNotNull(color0);
      
      double double0 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, double0, 0.01);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      
      xYPointerAnnotation0.setLabelOffset((-862.20408094484));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      
      double double1 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals((-862.20408094484), double1, 0.01);
      
      boolean boolean0 = xYPointerAnnotation0.equals("Zo.f?vRD:!2/{/}K");
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setArrowWidth(0.0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      
      BasicStroke basicStroke1 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertSame(basicStroke1, basicStroke0);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertNotNull(basicStroke1);
      
      double double2 = xYPointerAnnotation0.getTipRadius();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, double2, 0.01);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      
      BasicStroke basicStroke2 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertSame(basicStroke2, basicStroke1);
      assertSame(basicStroke2, basicStroke0);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0F, basicStroke2.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke2.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke2.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke2.getEndCap());
      assertEquals(0, basicStroke2.getLineJoin());
      assertNotNull(basicStroke2);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("Zo.f?vRD:!2/{/}K", 10.0, 270.0, 0.0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      xYPointerAnnotation1.setOutlineStroke(basicStroke1);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(basicStroke1, basicStroke2);
      assertSame(basicStroke1, basicStroke0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      
      boolean boolean1 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(boolean1 == boolean0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(boolean1);
      
      boolean boolean2 = xYPointerAnnotation1.equals(basicStroke2);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(basicStroke2, basicStroke1);
      assertSame(basicStroke2, basicStroke0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0F, basicStroke2.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke2.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke2.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke2.getEndCap());
      assertEquals(0, basicStroke2.getLineJoin());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(boolean2);
      
      double double3 = xYPointerAnnotation1.getArrowWidth();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(3.0, double3, 0.01);
      
      xYPointerAnnotation1.hashCode();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      
      xYPointerAnnotation1.hashCode();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      
      double double4 = xYPointerAnnotation1.getLabelOffset();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertEquals(double4, double3, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertEquals(double4, double0, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(3.0, double4, 0.01);
      
      xYPointerAnnotation1.setArrowStroke(basicStroke0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(basicStroke0, basicStroke2);
      assertSame(basicStroke0, basicStroke1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      
      xYPointerAnnotation1.setArrowStroke(basicStroke0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(basicStroke0, basicStroke2);
      assertSame(basicStroke0, basicStroke1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-862.20408094484), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1377.68, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(270.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("Zo.f?vRD:!2/{/}K", xYPointerAnnotation1.getText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("}VY", (-2786.98046), 286.4814076761553, 0.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("B0Y", 0.0, 30.0, 0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      assertNotNull(xYPointerAnnotation1);
      
      XYPointerAnnotation xYPointerAnnotation2 = new XYPointerAnnotation("}VY", (-180.0), 0.0, 5.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation2.getAngle(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals("}VY", xYPointerAnnotation2.getText());
      assertEquals((-180.0), xYPointerAnnotation2.getX(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertNotNull(xYPointerAnnotation2);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation2.getArrowStroke();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation2.getAngle(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals("}VY", xYPointerAnnotation2.getText());
      assertEquals((-180.0), xYPointerAnnotation2.getX(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setOutlineStroke(basicStroke0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation2.getAngle(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals("}VY", xYPointerAnnotation2.getText());
      assertEquals((-180.0), xYPointerAnnotation2.getX(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      
      TextAnchor textAnchor0 = xYPointerAnnotation1.getRotationAnchor();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      assertFalse(textAnchor0.isHalfAscent());
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
      assertFalse(textAnchor0.isRight());
      assertFalse(textAnchor0.isLeft());
      assertFalse(textAnchor0.isBottom());
      assertFalse(textAnchor0.isTop());
      assertTrue(textAnchor0.isHorizontalCenter());
      assertFalse(textAnchor0.isBaseline());
      assertTrue(textAnchor0.isVerticalCenter());
      assertNotNull(textAnchor0);
      
      xYPointerAnnotation0.setRotationAnchor(textAnchor0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      assertFalse(textAnchor0.isHalfAscent());
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
      assertFalse(textAnchor0.isRight());
      assertFalse(textAnchor0.isLeft());
      assertFalse(textAnchor0.isBottom());
      assertFalse(textAnchor0.isTop());
      assertTrue(textAnchor0.isHorizontalCenter());
      assertFalse(textAnchor0.isBaseline());
      assertTrue(textAnchor0.isVerticalCenter());
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation1.setTextAnchor(xYPointerAnnotation0.DEFAULT_TEXT_ANCHOR);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      
      xYPointerAnnotation0.removeChangeListener(annotationChangeListener0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      
      TextAnchor textAnchor1 = xYPointerAnnotation0.getRotationAnchor();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(textAnchor1, textAnchor0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(textAnchor1.isBottom());
      assertFalse(textAnchor1.isTop());
      assertTrue(textAnchor1.isHorizontalCenter());
      assertFalse(textAnchor1.isHalfAscent());
      assertFalse(textAnchor1.isLeft());
      assertEquals("TextAnchor.CENTER", textAnchor1.toString());
      assertFalse(textAnchor1.isBaseline());
      assertFalse(textAnchor1.isRight());
      assertTrue(textAnchor1.isVerticalCenter());
      assertNotNull(textAnchor1);
      
      xYPointerAnnotation0.setRotationAnchor(textAnchor1);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(textAnchor1, textAnchor0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(textAnchor1.isBottom());
      assertFalse(textAnchor1.isTop());
      assertTrue(textAnchor1.isHorizontalCenter());
      assertFalse(textAnchor1.isHalfAscent());
      assertFalse(textAnchor1.isLeft());
      assertEquals("TextAnchor.CENTER", textAnchor1.toString());
      assertFalse(textAnchor1.isBaseline());
      assertFalse(textAnchor1.isRight());
      assertTrue(textAnchor1.isVerticalCenter());
      
      double double0 = xYPointerAnnotation0.getTipRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getAngle();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, double1, 0.01);
      
      double double2 = xYPointerAnnotation1.getArrowLength();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      assertEquals(5.0, double2, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation3 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation2));
      assertTrue(xYPointerAnnotation3.equals((Object)xYPointerAnnotation0));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation3.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation3.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation3.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation3.getNotify());
      assertEquals(0.0, xYPointerAnnotation3.getAngle(), 0.01);
      assertEquals(286.4814076761553, xYPointerAnnotation3.getY(), 0.01);
      assertNull(xYPointerAnnotation3.getToolTipText());
      assertEquals("}VY", xYPointerAnnotation3.getText());
      assertFalse(xYPointerAnnotation3.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation3.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation3.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation3.getURL());
      assertEquals(5.0, xYPointerAnnotation3.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation3.getBaseRadius(), 0.01);
      assertNotNull(xYPointerAnnotation3);
      
      xYPointerAnnotation0.setArrowPaint(xYPointerAnnotation1.DEFAULT_PAINT);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals("}VY", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(286.4814076761553, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-2786.98046), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      
      xYPointerAnnotation1.setArrowLength(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      
      double double3 = xYPointerAnnotation1.getArrowLength();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertNotEquals(double3, double2, 0.01);
      assertEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      assertEquals(0.0, double3, 0.01);
      
      double double4 = xYPointerAnnotation1.getArrowLength();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation3));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertEquals(double4, double1, 0.01);
      assertEquals(double4, double3, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("B0Y", xYPointerAnnotation1.getText());
      assertEquals(0.0, double4, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation1.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = 523.0;
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("&", (-1.0), 523.0, (-1.0));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setURL("&");
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      xYPointerAnnotation0.setTipRadius(523.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      xYPointerAnnotation0.setTipRadius((-1803.9067086298342));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals((-1803.9067086298342), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      xYPointerAnnotation0.setArrowWidth(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals((-1803.9067086298342), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals((-1803.9067086298342), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("&", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals((-1.0), xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals((-1803.9067086298342), xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals("&", xYPointerAnnotation1.getURL());
      assertEquals((-1.0), xYPointerAnnotation1.getX(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals((-1803.9067086298342), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("&", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals((-1.0), xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals((-1803.9067086298342), xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals("&", xYPointerAnnotation1.getURL());
      assertEquals((-1.0), xYPointerAnnotation1.getX(), 0.01);
      assertTrue(boolean0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      xYPointerAnnotation0.setURL("");
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1.0), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-1.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(523.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals((-1803.9067086298342), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("&", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("state", 0.0, (-1887.253), 0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setBackgroundPaint(color0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      
      boolean boolean0 = xYPointerAnnotation0.equals(basicStroke0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertFalse(boolean0);
      
      boolean boolean1 = xYPointerAnnotation0.equals("state");
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertTrue(boolean1 == boolean0);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertFalse(boolean1);
      
      double double0 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, double0, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals("state", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals((-1887.253), xYPointerAnnotation1.getY(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      
      BasicStroke basicStroke1 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(basicStroke1, basicStroke0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertNotNull(basicStroke1);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke1);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(basicStroke1, basicStroke0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      
      xYPointerAnnotation0.setURL("");
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      
      xYPointerAnnotation0.setAngle(10.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(10.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      
      xYPointerAnnotation0.setLabelOffset(478.1101164);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(478.1101164, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(10.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      
      double double1 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(478.1101164, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(10.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, double1, 0.01);
      
      xYPointerAnnotation0.setAngle(2558.7207);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(2558.7207, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(478.1101164, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      
      xYPointerAnnotation0.setTipRadius(30.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(2558.7207, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(478.1101164, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      
      double double2 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(2558.7207, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(478.1101164, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, double2, 0.01);
      
      xYPointerAnnotation0.setAngle(2735.0712977263374);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(478.1101164, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2735.0712977263374, xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.setTipRadius(1473.0009122);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(478.1101164, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(1473.0009122, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2735.0712977263374, xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.setLabelOffset(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(1473.0009122, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2735.0712977263374, xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(1473.0009122, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2735.0712977263374, xYPointerAnnotation0.getAngle(), 0.01);
      
      double double3 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double3, double0, 0.01);
      assertEquals(double3, double2, 0.01);
      assertEquals(double3, double1, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getURL());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("state", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1887.253), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(1473.0009122, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2735.0712977263374, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, double3, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, 1.0, 1946.663649);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      Paint paint0 = xYPointerAnnotation0.getBackgroundPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(paint0);
      
      xYPointerAnnotation0.setBackgroundPaint((Paint) null);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      
      xYPointerAnnotation0.setLabelOffset(1016.7);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      
      double double0 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1016.7, double0, 0.01);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYPointerAnnotation0.hasListener(eventListener0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setArrowLength((-131.17715793153));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      
      double double1 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, double1, 0.01);
      
      double double2 = xYPointerAnnotation0.getAngle();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1946.663649, double2, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(1.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(1946.663649, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertNotNull(xYPointerAnnotation1);
      
      boolean boolean1 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(boolean1 == boolean0);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(1.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(1946.663649, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertTrue(boolean1);
      
      XYPointerAnnotation xYPointerAnnotation2 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation2.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertTrue(xYPointerAnnotation2.getNotify());
      assertEquals((-131.17715793153), xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals(1.0, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getX(), 0.01);
      assertEquals("", xYPointerAnnotation2.getText());
      assertNotNull(xYPointerAnnotation2);
      
      XYPointerAnnotation xYPointerAnnotation3 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation2);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertTrue(xYPointerAnnotation3.equals((Object)xYPointerAnnotation2));
      assertTrue(xYPointerAnnotation3.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation3.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation3.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation3.getToolTipText());
      assertNull(xYPointerAnnotation3.getURL());
      assertEquals(30.0, xYPointerAnnotation3.getBaseRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation3.getTipRadius(), 0.01);
      assertTrue(xYPointerAnnotation3.getNotify());
      assertEquals(1.0, xYPointerAnnotation3.getY(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation3.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation3.getText());
      assertFalse(xYPointerAnnotation3.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation3.getArrowWidth(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation3.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation3.getX(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation3.getArrowLength(), 0.01);
      assertNotNull(xYPointerAnnotation3);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      xYPointerAnnotation0.setBaseRadius((-131.17715793153));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      
      XYPointerAnnotation xYPointerAnnotation4 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation4);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation4, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation4, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation4, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation4, xYPointerAnnotation3);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertTrue(xYPointerAnnotation4.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation4.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation4.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation4.equals((Object)xYPointerAnnotation3));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation4.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation4.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation4.isOutlineVisible());
      assertTrue(xYPointerAnnotation4.getNotify());
      assertNull(xYPointerAnnotation4.getURL());
      assertEquals((-131.17715793153), xYPointerAnnotation4.getArrowLength(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation4.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation4.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation4.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation4.getText());
      assertNull(xYPointerAnnotation4.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation4.getRotationAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation4.getY(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation4.getBaseRadius(), 0.01);
      assertNotNull(xYPointerAnnotation4);
      
      BasicStroke basicStroke1 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation4);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertSame(basicStroke1, basicStroke0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation4));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation3));
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-131.17715793153), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-131.17715793153), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(1946.663649, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1016.7, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("AvM4C<]C}", 0.0, (-90.0), 1019.470153342555);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      assertTrue(textAnchor0.isVerticalCenter());
      assertTrue(textAnchor0.isHorizontalCenter());
      assertFalse(textAnchor0.isBaseline());
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
      assertFalse(textAnchor0.isTop());
      assertFalse(textAnchor0.isLeft());
      assertFalse(textAnchor0.isHalfAscent());
      assertFalse(textAnchor0.isBottom());
      assertFalse(textAnchor0.isRight());
      assertNotNull(textAnchor0);
      
      xYPointerAnnotation0.setRotationAnchor(textAnchor0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertTrue(textAnchor0.isVerticalCenter());
      assertTrue(textAnchor0.isHorizontalCenter());
      assertFalse(textAnchor0.isBaseline());
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
      assertFalse(textAnchor0.isTop());
      assertFalse(textAnchor0.isLeft());
      assertFalse(textAnchor0.isHalfAscent());
      assertFalse(textAnchor0.isBottom());
      assertFalse(textAnchor0.isRight());
      
      xYPointerAnnotation0.setNotify(true);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      
      double double0 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertEquals(30.0, double0, 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      
      xYPointerAnnotation0.setArrowWidth((-1776.409467));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-1776.409467), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setArrowLength((-90.0));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-1776.409467), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-90.0), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-1776.409467), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-90.0), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertNotNull(color0);
      
      double double1 = xYPointerAnnotation0.getAngle();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-1776.409467), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-90.0), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertEquals(1019.470153342555, double1, 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-1776.409467), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-90.0), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-1776.409467), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1019.470153342555, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-90.0), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("AvM4C<]C}", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals((-1776.409467), xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(1019.470153342555, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("AvM4C<]C}", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals((-90.0), xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNotNull(xYPointerAnnotation1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("org.jfree.chart.annotations.XYPointerAnnotation", 1.0E-8, 1.0E-8, 1.0E-8);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setArrowWidth(1.0E-8);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      TextUtils.setUseFontMetricsGetStringBounds(false);
      double double0 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      assertEquals(30.0, double0, 0.01);
      
      TextUtils.setDrawStringsWithFontAttributes(false);
      xYPointerAnnotation0.fireAnnotationChanged();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setArrowLength(897.197148301);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setOutlineVisible(true);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setBaseRadius(Double.NaN);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(Double.NaN, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYPointerAnnotation0.hasListener(eventListener0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(Double.NaN, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(1.0E-8, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setAngle(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(Double.NaN, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      double double1 = xYPointerAnnotation0.getTipRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(Double.NaN, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      assertEquals(10.0, double1, 0.01);
      
      boolean boolean1 = xYPointerAnnotation0.equals("org.jfree.chart.annotations.XYPointerAnnotation");
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(boolean1 == boolean0);
      assertEquals(Double.NaN, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      assertFalse(boolean1);
      
      xYPointerAnnotation0.setLabelOffset(1.0E-8);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(Double.NaN, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(1.0E-8, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setRotationAngle(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(Double.NaN, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(1.0E-8, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(897.197148301, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(1.0E-8, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("org.jfree.chart.annotations.XYPointerAnnotation", xYPointerAnnotation0.getText());
      
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.setArrowPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, 0.0, 0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setOutlinePaint(color0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      
      xYPointerAnnotation0.setLabelOffset(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      xYPointerAnnotation0.setTipRadius(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setLabelOffset(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      double double0 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getTipRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(0.0, double1, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation2 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation2.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getY(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals("", xYPointerAnnotation2.getText());
      assertNotNull(xYPointerAnnotation2);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setTipRadius(3.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      
      xYPointerAnnotation0.setArrowLength(1.0E-5);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(1.0E-5, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getTipRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("{*Y", (-417.4207567), (-417.4207567), 0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("{*Y", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setLabelOffset(0.14);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.14, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("{*Y", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      TextUtils.setDrawStringsWithFontAttributes(true);
      xYPointerAnnotation0.setText("");
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.14, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      xYPointerAnnotation0.setLabelOffset((-2203.179865735382));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      xYPointerAnnotation0.setOutlineVisible(true);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("{*Y", (-519.3452010231448), 3.0, 0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals("{*Y", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals((-519.3452010231448), xYPointerAnnotation1.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      TextUtils.setUseDrawRotatedStringWorkaround(true);
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("{*Y", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals((-519.3452010231448), xYPointerAnnotation1.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(boolean0);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      double double0 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(3.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getTipRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, double1, 0.01);
      
      xYPointerAnnotation1.setArrowPaint(xYPointerAnnotation0.DEFAULT_PAINT);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("{*Y", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals((-519.3452010231448), xYPointerAnnotation1.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      
      double double2 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-417.4207567), xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-417.4207567), xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("M)T", 0.0, 0.0, 0.0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      assertFalse(font0.isBold());
      assertFalse(font0.isTransformed());
      assertTrue(font0.isPlain());
      assertFalse(font0.isItalic());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(10, font0.getSize());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertNotNull(font0);
      
      xYPointerAnnotation0.setFont(font0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(font0.isBold());
      assertFalse(font0.isTransformed());
      assertTrue(font0.isPlain());
      assertFalse(font0.isItalic());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(10, font0.getSize());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      
      xYPointerAnnotation0.setArrowWidth((-3672.0));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      double double0 = xYPointerAnnotation0.getAngle();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      xYPointerAnnotation0.setBaseRadius(0.0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getOutlineStroke();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      double double1 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, double1, 0.01);
      
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      
      double double2 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3672.0), double2, 0.01);
      
      BasicStroke basicStroke1 = (BasicStroke)xYPointerAnnotation0.getOutlineStroke();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertSame(basicStroke1, basicStroke0);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.5F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0, basicStroke1.getLineJoin());
      assertNotNull(basicStroke1);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke1);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertSame(basicStroke1, basicStroke0);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.5F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0, basicStroke1.getLineJoin());
      
      xYPointerAnnotation0.setTipRadius((-3672.0));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      double double3 = xYPointerAnnotation0.getTipRadius();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3672.0), double3, 0.01);
      
      double double4 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(double4, double2, 0.01);
      assertEquals(double4, double3, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3672.0), double4, 0.01);
      
      xYPointerAnnotation0.setAngle((-599.9));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-599.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-599.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      
      double double5 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(double5, double2, 0.01);
      assertEquals(double5, double4, 0.01);
      assertNotEquals(double5, double1, 0.01);
      assertEquals(double5, double3, 0.01);
      assertNotEquals(double5, double0, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-599.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3672.0), double5, 0.01);
      
      double double6 = xYPointerAnnotation0.getArrowLength();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotEquals(double6, double2, 0.01);
      assertNotEquals(double6, double0, 0.01);
      assertNotEquals(double6, double3, 0.01);
      assertNotEquals(double6, double4, 0.01);
      assertNotEquals(double6, double1, 0.01);
      assertNotEquals(double6, double5, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-599.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(5.0, double6, 0.01);
      
      xYPointerAnnotation0.setAngle((-3672.0));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getAngle(), 0.01);
      
      double double7 = xYPointerAnnotation0.getArrowLength();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotEquals(double7, double3, 0.01);
      assertEquals(double7, double6, 0.01);
      assertNotEquals(double7, double1, 0.01);
      assertNotEquals(double7, double5, 0.01);
      assertNotEquals(double7, double0, 0.01);
      assertNotEquals(double7, double2, 0.01);
      assertNotEquals(double7, double4, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(5.0, double7, 0.01);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-3672.0), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      
      xYPointerAnnotation0.setArrowWidth(3.0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-3672.0), xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-3672.0), xYPointerAnnotation0.getAngle(), 0.01);
      
      BasicStroke basicStroke2 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertSame(basicStroke2, basicStroke1);
      assertSame(basicStroke2, basicStroke0);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("M)T", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-3672.0), xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-3672.0), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0, basicStroke2.getLineJoin());
      assertEquals(0.5F, basicStroke2.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke2.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke2.getEndCap());
      assertEquals(10.0F, basicStroke2.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke2);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("xXY1 lJ5.-#Z3Ii", 5.0, 5.0, 5.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setBaseRadius(3214.10559827207);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertTrue(boolean0);
      
      xYPointerAnnotation0.addChangeListener((AnnotationChangeListener) null);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      
      xYPointerAnnotation0.fireAnnotationChanged();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      
      xYPointerAnnotation0.setLabelOffset(728.2);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(728.2, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(728.2, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      
      double double0 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(728.2, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getArrowLength();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(728.2, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(5.0, double1, 0.01);
      
      double double2 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("xXY1 lJ5.-#Z3Ii", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(728.2, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(728.2, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 193.04854379596603, (-1.0), 193.04854379596603);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(193.04854379596603, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(193.04854379596603, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      double double0 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(193.04854379596603, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(193.04854379596603, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(30.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, 0.0, (-2586.067372043));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2586.067372043), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      double double0 = xYPointerAnnotation0.getArrowLength();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2586.067372043), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(5.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2586.067372043), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, double1, 0.01);
      
      double double2 = xYPointerAnnotation0.getAngle();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2586.067372043), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals((-2586.067372043), double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("paint", 0.0, 0.0, 1165.403784);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals("paint", xYPointerAnnotation0.getText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(1165.403784, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      double double0 = xYPointerAnnotation0.getAngle();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals("paint", xYPointerAnnotation0.getText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(1165.403784, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(1165.403784, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 856.753990576612, 2281.275, 856.753990576612);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(2281.275, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.fireAnnotationChanged();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(2281.275, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      
      xYPointerAnnotation0.setArrowLength(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(2281.275, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      
      double double0 = xYPointerAnnotation0.getTipRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(2281.275, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, double0, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("", 856.753990576612, 0.0, 3.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(856.753990576612, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertNotNull(xYPointerAnnotation1);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(856.753990576612, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(2281.275, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(856.753990576612, xYPointerAnnotation1.getX(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("Null 'location' for index 0 not permitted.", 1.0E-8, 1.0E-8, 0.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("Null 'location' for index 0 not permitted.", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setURL("i");
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(1.0E-8, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals("i", xYPointerAnnotation0.getURL());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("Null 'location' for index 0 not permitted.", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.setArrowStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = null;
      double double0 = (-2569.8538511754505);
      XYPointerAnnotation xYPointerAnnotation0 = null;
      try {
        xYPointerAnnotation0 = new XYPointerAnnotation((String) null, (-2569.8538511754505), (-2569.8538511754505), 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("{KpUt$&r?OMcXPj", 508.04325481169764, (-2584.441413845111), 508.04325481169764);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(508.04325481169764, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("{KpUt$&r?OMcXPj", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2584.441413845111), xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(508.04325481169764, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      boolean boolean0 = xYPointerAnnotation0.equals((Object) null);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(508.04325481169764, xYPointerAnnotation0.getX(), 0.01);
      assertEquals("{KpUt$&r?OMcXPj", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2584.441413845111), xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(508.04325481169764, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, 0.0, 0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setArrowLength((-1932.149219));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      boolean boolean0 = xYPointerAnnotation0.hasListener((EventListener) null);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(boolean0);
      
      double double0 = xYPointerAnnotation0.getAngle();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, double0, 0.01);
      
      double double1 = xYPointerAnnotation0.getLabelOffset();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, double1, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertNotNull(xYPointerAnnotation1);
      
      Color color1 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(color1, color0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-1932.149219), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0, color1.getRed());
      assertEquals(0, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getGreen());
      assertEquals(255, color1.getAlpha());
      assertNotNull(color1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 1.0, (-5761.9), (-5761.9));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setBaseRadius((-5761.9));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-5761.9), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = xYPointerAnnotation0.getTextAnchor();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-5761.9), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(textAnchor0.isLeft());
      assertFalse(textAnchor0.isBottom());
      assertFalse(textAnchor0.isRight());
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
      assertFalse(textAnchor0.isHalfAscent());
      assertFalse(textAnchor0.isBaseline());
      assertTrue(textAnchor0.isVerticalCenter());
      assertTrue(textAnchor0.isHorizontalCenter());
      assertFalse(textAnchor0.isTop());
      assertNotNull(textAnchor0);
      
      xYPointerAnnotation0.setTextAnchor(textAnchor0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-5761.9), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(textAnchor0.isLeft());
      assertFalse(textAnchor0.isBottom());
      assertFalse(textAnchor0.isRight());
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
      assertFalse(textAnchor0.isHalfAscent());
      assertFalse(textAnchor0.isBaseline());
      assertTrue(textAnchor0.isVerticalCenter());
      assertTrue(textAnchor0.isHorizontalCenter());
      assertFalse(textAnchor0.isTop());
      
      xYPointerAnnotation0.setOutlinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-5761.9), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setPaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-5761.9), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.setOutlinePaint(valueAxis0.DEFAULT_TICK_LABEL_PAINT);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-5761.9), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(1.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-5761.9), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-5761.9), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, (-2356), plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 3.0, 0.14, 3.0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.14, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setTipRadius(3.0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.14, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getTipRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("d^2_B'", 0.0, 0.0, 0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("d^2_B'", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setLabelOffset((-2151.0));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-2151.0), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("d^2_B'", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation(";s&&p66)Hl:Soq^@", 350.778804926976, 350.778804926976, 350.778804926976);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(";s&&p66)Hl:Soq^@", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(350.778804926976, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNotNull(xYPointerAnnotation0);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(350.778804926976, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(";s&&p66)Hl:Soq^@", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(350.778804926976, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(350.778804926976, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(";s&&p66)Hl:Soq^@", xYPointerAnnotation1.getText());
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertNotNull(xYPointerAnnotation1);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(350.778804926976, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(";s&&p66)Hl:Soq^@", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(350.778804926976, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(350.778804926976, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(";s&&p66)Hl:Soq^@", xYPointerAnnotation1.getText());
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(350.778804926976, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("#4rL&*<Y2_;gT@tw", 0.0, (-1438.10187), 3288.95078);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("#4rL&*<Y2_;gT@tw", xYPointerAnnotation0.getText());
      assertEquals((-1438.10187), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3288.95078, xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals("#4rL&*<Y2_;gT@tw", xYPointerAnnotation0.getText());
      assertEquals((-1438.10187), xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3288.95078, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("Xuy\"5/ge=&qTb^GT H", 0.18, (-2307.94472520381), 0.18);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.18, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.18, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-2307.94472520381), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("Xuy\"5/ge=&qTb^GT H", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNotNull(xYPointerAnnotation0);
      
      double double0 = xYPointerAnnotation0.getArrowLength();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.18, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.18, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-2307.94472520381), xYPointerAnnotation0.getY(), 0.01);
      assertEquals("Xuy\"5/ge=&qTb^GT H", xYPointerAnnotation0.getText());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("*U}{=!u", 0.0, 0.0, 0.1);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("*U}{=!u", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.1, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      double double0 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("*U}{=!u", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.1, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("org.jfree.chart.axis.SymbolAxis", 2600.0, 2600.0, 2600.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("org.jfree.chart.axis.SymbolAxis", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(2600.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(2600.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2600.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      double double0 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("org.jfree.chart.axis.SymbolAxis", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(2600.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(2600.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2600.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("t#3DA59D[X]D", 3484.0, 3484.0, 3484.0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3484.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3484.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      double double0 = 0.0;
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("t#3DA59D[X]D", 0.0, 10.0, 3484.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3484.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation1.getOutlineStroke();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(3484.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("t#3DA59D[X]D", xYPointerAnnotation1.getText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, (XYPlot) null, rectangle2D0, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = "_;C";
      double double0 = (-2558.13429883);
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("_;C", (-2558.13429883), (-2558.13429883), (-2558.13429883));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("_;C", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2558.13429883), xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYPointerAnnotation0.hasListener(eventListener0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("_;C", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2558.13429883), xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(boolean0);
      
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.notifyListeners(annotationChangeEvent0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("_;C", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2558.13429883), xYPointerAnnotation0.getAngle(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.hashCode();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getX(), 0.01);
      assertEquals((-2558.13429883), xYPointerAnnotation0.getY(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("_;C", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-2558.13429883), xYPointerAnnotation0.getAngle(), 0.01);
      
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, (ValueAxis) null, (ValueAxis) null, 0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("'Rlem", 0.0, 1619.278454628085, 0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals("'Rlem", xYPointerAnnotation0.getText());
      assertEquals(1619.278454628085, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNotNull(xYPointerAnnotation0);
      
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setArrowPaint(color0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals("'Rlem", xYPointerAnnotation0.getText());
      assertEquals(1619.278454628085, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("\"DH;w", 1644.7257784567257, (-46.47339372941615), (-46.47339372941615));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(1644.7257784567257, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("\"DH;w", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-46.47339372941615), xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-46.47339372941615), xYPointerAnnotation0.getY(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      Paint paint0 = xYPointerAnnotation0.getBackgroundPaint();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(1644.7257784567257, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("\"DH;w", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-46.47339372941615), xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-46.47339372941615), xYPointerAnnotation0.getY(), 0.01);
      assertNull(paint0);
      
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.setArrowPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 10.0, 10.0, 0.08);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.08, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("date", 10.0, 5.0, 3.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals("date", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getY(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertNotNull(xYPointerAnnotation1);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation1.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals("date", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getY(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.08, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals("date", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getY(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      
      xYPointerAnnotation1.setArrowWidth((-1687.0539));
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals("date", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals((-1687.0539), xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getY(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("TextAnchor.CENTER_LEFT", (-0.38391113), (-938.959414863), (-938.959414863));
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("TextAnchor.CENTER_LEFT", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals((-938.959414863), xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-938.959414863), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-0.38391113), xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setY(0.0);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("TextAnchor.CENTER_LEFT", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-938.959414863), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-0.38391113), xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      xYPointerAnnotation0.setArrowLength((-938.959414863));
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("TextAnchor.CENTER_LEFT", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-938.959414863), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-938.959414863), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-0.38391113), xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      
      double double0 = xYPointerAnnotation0.getArrowLength();
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("TextAnchor.CENTER_LEFT", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-938.959414863), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-938.959414863), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-0.38391113), xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals((-938.959414863), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("n<sxP/{):wk,gCg4", 5.0, 5.0, 5.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getX(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("n<sxP/{):wk,gCg4", xYPointerAnnotation0.getText());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNotNull(xYPointerAnnotation0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 1, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 2044.1407, 100.0, (-1939.90362197));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      boolean boolean0 = xYPointerAnnotation0.equals("");
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(boolean0);
      
      double double0 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(30.0, double0, 0.01);
      
      xYPointerAnnotation0.setAngle(30.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      
      boolean boolean1 = xYPointerAnnotation0.equals("poly");
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(boolean1 == boolean0);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertFalse(boolean1);
      
      xYPointerAnnotation0.setAngle(30.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      
      xYPointerAnnotation0.setURL("poly");
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      
      xYPointerAnnotation0.setY(0.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      
      boolean boolean2 = xYPointerAnnotation0.equals(xYPointerAnnotation0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertTrue(boolean2);
      
      xYPointerAnnotation0.setArrowWidth(30.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setBaseRadius(0.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      double double1 = xYPointerAnnotation0.getArrowLength();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(5.0, double1, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 135.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYPointerAnnotation0.setBackgroundPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo0).getOwner();
      xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("poly", xYPointerAnnotation0.getURL());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertNotNull(color0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("F|", 847.5490572071575, 3214.10559827207, (-2203.179865735382));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.notifyListeners(annotationChangeEvent0);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.setArrowLength((-2203.179865735382));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.setRotationAngle(2541.428718889316);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2541.428718889316, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      
      xYPointerAnnotation0.setURL("CDqd)*;>7:h,ObZZh");
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2541.428718889316, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2541.428718889316, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(2541.428718889316, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation1.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("F|", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      xYPointerAnnotation0.setBaseRadius((-2017.015130632));
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2541.428718889316, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2017.015130632), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2541.428718889316, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2017.015130632), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(2541.428718889316, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation1.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("F|", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation1.getArrowLength(), 0.01);
      assertFalse(boolean0);
      
      boolean boolean1 = xYPointerAnnotation0.equals("F|");
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(boolean1 == boolean0);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2541.428718889316, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2017.015130632), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      assertFalse(boolean1);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation1.getArrowStroke();
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation0.getURL());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals("F|", xYPointerAnnotation0.getText());
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2541.428718889316, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-2017.015130632), xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(2541.428718889316, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3214.10559827207, xYPointerAnnotation1.getY(), 0.01);
      assertEquals("CDqd)*;>7:h,ObZZh", xYPointerAnnotation1.getURL());
      assertEquals((-2203.179865735382), xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(847.5490572071575, xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals("F|", xYPointerAnnotation1.getText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals((-2203.179865735382), xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("HH:mm", 0.0, 0.0, 0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertNotNull(xYPointerAnnotation0);
      
      xYPointerAnnotation0.setTipRadius(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      double double0 = xYPointerAnnotation0.getTipRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, double0, 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      double double1 = xYPointerAnnotation0.getTipRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, double1, 0.01);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.removeChangeListener(annotationChangeListener0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      
      double double2 = xYPointerAnnotation0.getTipRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, double2, 0.01);
      
      double double3 = xYPointerAnnotation0.getArrowLength();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, double3, 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setArrowStroke(basicStroke0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setOutlinePaint(color0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("HH:mm", (-1815.942), 0.0, 2647.209832);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals((-1815.942), xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("HH:mm", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation1.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      XYPointerAnnotation xYPointerAnnotation2 = (XYPointerAnnotation)xYPointerAnnotation1.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertTrue(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertEquals((-1815.942), xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("HH:mm", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals((-1815.942), xYPointerAnnotation2.getX(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation2.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation2.getText());
      assertTrue(xYPointerAnnotation2.getNotify());
      assertNotNull(xYPointerAnnotation2);
      
      xYPointerAnnotation1.setBackgroundPaint(xYPointerAnnotation0.DEFAULT_PAINT);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-1815.942), xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("HH:mm", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation1.getAngle(), 0.01);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation2);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals((-1815.942), xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("HH:mm", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals((-1815.942), xYPointerAnnotation2.getX(), 0.01);
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation2.getAngle(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation2.getText());
      assertTrue(xYPointerAnnotation2.getNotify());
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setAngle(4.9E-324);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      
      xYPointerAnnotation0.setBaseRadius(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      
      double double4 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double4, double2, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, double4, 0.01);
      
      double double5 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double5, double4, 0.01);
      assertEquals(double5, double2, 0.01);
      assertEquals(double5, double0, 0.01);
      assertNotEquals(double5, double3, 0.01);
      assertEquals(double5, double1, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, double5, 0.01);
      
      double double6 = xYPointerAnnotation0.getTipRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(double6, double0, 0.01);
      assertEquals(double6, double1, 0.01);
      assertNotEquals(double6, double3, 0.01);
      assertEquals(double6, double2, 0.01);
      assertEquals(double6, double5, 0.01);
      assertNotEquals(double6, double4, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, double6, 0.01);
      
      double double7 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(double7, double2, 0.01);
      assertEquals(double7, double5, 0.01);
      assertNotEquals(double7, double4, 0.01);
      assertNotEquals(double7, double3, 0.01);
      assertEquals(double7, double0, 0.01);
      assertEquals(double7, double1, 0.01);
      assertEquals(double7, double6, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0.0, double7, 0.01);
      
      double double8 = xYPointerAnnotation1.getLabelOffset();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertNotEquals(double8, double2, 0.01);
      assertNotEquals(double8, double5, 0.01);
      assertNotEquals(double8, double3, 0.01);
      assertNotEquals(double8, double1, 0.01);
      assertEquals(double8, double4, 0.01);
      assertNotEquals(double8, double7, 0.01);
      assertNotEquals(double8, double0, 0.01);
      assertNotEquals(double8, double6, 0.01);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals((-1815.942), xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("HH:mm", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(3.0, double8, 0.01);
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      
      boolean boolean1 = xYPointerAnnotation1.equals("HH:mm");
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(boolean1 == boolean0);
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals((-1815.942), xYPointerAnnotation1.getX(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertNull(xYPointerAnnotation1.getURL());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals("HH:mm", xYPointerAnnotation1.getText());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2647.209832, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(boolean1);
      
      double double9 = xYPointerAnnotation0.getArrowLength();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double9, double6, 0.01);
      assertNotEquals(double9, double0, 0.01);
      assertNotEquals(double9, double5, 0.01);
      assertNotEquals(double9, double7, 0.01);
      assertNotEquals(double9, double1, 0.01);
      assertNotEquals(double9, double4, 0.01);
      assertEquals(double9, double3, 0.01);
      assertNotEquals(double9, double8, 0.01);
      assertNotEquals(double9, double2, 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, double9, 0.01);
      
      Color color1 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertSame(color1, color0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("HH:mm", xYPointerAnnotation0.getText());
      assertEquals(4.9E-324, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(0, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(0, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getGreen());
      assertNotNull(color1);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 2044.1407, 100.0, (-1939.90362197));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      boolean boolean0 = xYPointerAnnotation0.equals("");
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setOutlineVisible(true);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      double double0 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(30.0, double0, 0.01);
      
      xYPointerAnnotation0.setAngle(30.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      boolean boolean1 = xYPointerAnnotation0.equals("poly");
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertTrue(boolean1 == boolean0);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(boolean1);
      
      xYPointerAnnotation0.setAngle(30.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(100.0, xYPointerAnnotation0.getY(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      xYPointerAnnotation0.setY(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(2044.1407, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      boolean boolean2 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertTrue(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals("", xYPointerAnnotation1.getText());
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(30.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals(2044.1407, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertTrue(boolean2);
      
      xYPointerAnnotation0.setArrowWidth(30.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      xYPointerAnnotation0.setBaseRadius(0.0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      double double1 = xYPointerAnnotation0.getArrowLength();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(5.0, double1, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 30.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setAngle((-1939.90362197));
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(2044.1407, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-1939.90362197), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertTrue(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, 0.0, 0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertNotNull(xYPointerAnnotation0);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      xYPointerAnnotation0.setLabelOffset(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.setTipRadius(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation1.getY(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getAngle(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertFalse(boolean0);
      
      xYPointerAnnotation0.setLabelOffset(0.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      
      xYPointerAnnotation0.hashCode();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      
      double double0 = xYPointerAnnotation0.getArrowWidth();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(3.0, double0, 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPointerAnnotation0.getArrowStroke();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      xYPointerAnnotation0.setTipRadius(3.0);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      
      boolean boolean1 = xYPointerAnnotation0.equals("");
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(boolean1 == boolean0);
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertFalse(boolean1);
      
      xYPointerAnnotation0.setArrowLength(1.0E-5);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(1.0E-5, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      
      Color color0 = (Color)xYPointerAnnotation0.getArrowPaint();
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(0.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(1.0E-5, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(3.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals("", xYPointerAnnotation0.getText());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("mHEsHMK", 2941.554598121, 2941.554598121, 2941.554598121);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertNotNull(xYPointerAnnotation0);
      
      XYPointerAnnotation xYPointerAnnotation1 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getAngle(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation1.getY(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("mHEsHMK", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation1.getAngle(), 0.01);
      assertNotNull(xYPointerAnnotation1);
      
      xYPointerAnnotation0.setLabelOffset((-262.127264577));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      xYPointerAnnotation0.fireAnnotationChanged();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      XYPointerAnnotation xYPointerAnnotation2 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertTrue(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation2.getX(), 0.01);
      assertEquals("mHEsHMK", xYPointerAnnotation2.getText());
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(2941.554598121, xYPointerAnnotation2.getAngle(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertNotNull(xYPointerAnnotation2);
      
      boolean boolean0 = xYPointerAnnotation0.equals(xYPointerAnnotation1);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation1, xYPointerAnnotation0);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation1.equals((Object)xYPointerAnnotation0));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation1.getX(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation1.getY(), 0.01);
      assertTrue(xYPointerAnnotation1.getNotify());
      assertEquals("mHEsHMK", xYPointerAnnotation1.getText());
      assertFalse(xYPointerAnnotation1.isOutlineVisible());
      assertEquals(10.0, xYPointerAnnotation1.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation1.getRotationAngle(), 0.01);
      assertEquals(3.0, xYPointerAnnotation1.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation1.getURL());
      assertEquals(5.0, xYPointerAnnotation1.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation1.getBaseRadius(), 0.01);
      assertNull(xYPointerAnnotation1.getToolTipText());
      assertEquals(3.0, xYPointerAnnotation1.getLabelOffset(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation1.getAngle(), 0.01);
      assertFalse(boolean0);
      
      boolean boolean1 = xYPointerAnnotation0.equals("mHEsHMK");
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertTrue(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertTrue(boolean1 == boolean0);
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertFalse(boolean1);
      
      xYPointerAnnotation0.setAngle((-3103.269));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals(3.0, xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setArrowWidth((-3103.269));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      xYPointerAnnotation0.setAngle((-3103.269));
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      xYPointerAnnotation0.setPaint(color0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      
      double double0 = xYPointerAnnotation0.getAngle();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals((-3103.269), double0, 0.01);
      
      xYPointerAnnotation0.setAngle(0.0);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      
      boolean boolean2 = xYPointerAnnotation0.equals(xYPointerAnnotation2);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation0);
      assertNotSame(xYPointerAnnotation2, xYPointerAnnotation1);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation2.equals((Object)xYPointerAnnotation1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation2.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation2.getX(), 0.01);
      assertEquals("mHEsHMK", xYPointerAnnotation2.getText());
      assertEquals(0.0, xYPointerAnnotation2.getRotationAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation2.getTipRadius(), 0.01);
      assertNull(xYPointerAnnotation2.getURL());
      assertFalse(xYPointerAnnotation2.isOutlineVisible());
      assertEquals(30.0, xYPointerAnnotation2.getBaseRadius(), 0.01);
      assertTrue(xYPointerAnnotation2.getNotify());
      assertEquals(5.0, xYPointerAnnotation2.getArrowLength(), 0.01);
      assertEquals(3.0, xYPointerAnnotation2.getArrowWidth(), 0.01);
      assertNull(xYPointerAnnotation2.getToolTipText());
      assertEquals(2941.554598121, xYPointerAnnotation2.getAngle(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation2.getLabelOffset(), 0.01);
      assertFalse(boolean2);
      
      double double1 = xYPointerAnnotation0.getBaseRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotEquals(double1, double0, 0.01);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(30.0, double1, 0.01);
      
      double double2 = xYPointerAnnotation0.getTipRadius();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, double2, 0.01);
      
      XYPointerAnnotation xYPointerAnnotation3 = (XYPointerAnnotation)xYPointerAnnotation0.clone();
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(0.0, XYTextAnnotation.DEFAULT_ROTATION_ANGLE, 0.01);
      assertEquals(30.0, XYPointerAnnotation.DEFAULT_BASE_RADIUS, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_ARROW_WIDTH, 0.01);
      assertEquals(10.0, XYPointerAnnotation.DEFAULT_TIP_RADIUS, 0.01);
      assertEquals(5.0, XYPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
      assertEquals(3.0, XYPointerAnnotation.DEFAULT_LABEL_OFFSET, 0.01);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation3);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation0, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation2);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation1);
      assertNotSame(xYPointerAnnotation3, xYPointerAnnotation0);
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation1));
      assertFalse(xYPointerAnnotation0.equals((Object)xYPointerAnnotation2));
      assertTrue(xYPointerAnnotation3.equals((Object)xYPointerAnnotation0));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation2));
      assertFalse(xYPointerAnnotation3.equals((Object)xYPointerAnnotation1));
      assertEquals(2941.554598121, xYPointerAnnotation0.getY(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation0.getX(), 0.01);
      assertEquals(0.0, xYPointerAnnotation0.getAngle(), 0.01);
      assertEquals(10.0, xYPointerAnnotation0.getTipRadius(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation0.getLabelOffset(), 0.01);
      assertNull(xYPointerAnnotation0.getToolTipText());
      assertEquals(0.0, xYPointerAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYPointerAnnotation0.isOutlineVisible());
      assertNull(xYPointerAnnotation0.getURL());
      assertEquals("mHEsHMK", xYPointerAnnotation0.getText());
      assertTrue(xYPointerAnnotation0.getNotify());
      assertEquals(5.0, xYPointerAnnotation0.getArrowLength(), 0.01);
      assertEquals(30.0, xYPointerAnnotation0.getBaseRadius(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation0.getArrowWidth(), 0.01);
      assertEquals(10.0, xYPointerAnnotation3.getTipRadius(), 0.01);
      assertEquals(0.0, xYPointerAnnotation3.getAngle(), 0.01);
      assertEquals("mHEsHMK", xYPointerAnnotation3.getText());
      assertEquals(2941.554598121, xYPointerAnnotation3.getX(), 0.01);
      assertEquals(2941.554598121, xYPointerAnnotation3.getY(), 0.01);
      assertEquals((-262.127264577), xYPointerAnnotation3.getLabelOffset(), 0.01);
      assertTrue(xYPointerAnnotation3.getNotify());
      assertNull(xYPointerAnnotation3.getURL());
      assertEquals(5.0, xYPointerAnnotation3.getArrowLength(), 0.01);
      assertNull(xYPointerAnnotation3.getToolTipText());
      assertFalse(xYPointerAnnotation3.isOutlineVisible());
      assertEquals(0.0, xYPointerAnnotation3.getRotationAngle(), 0.01);
      assertEquals((-3103.269), xYPointerAnnotation3.getArrowWidth(), 0.01);
      assertEquals(30.0, xYPointerAnnotation3.getBaseRadius(), 0.01);
      assertNotNull(xYPointerAnnotation3);
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("k:wh]|]1Jz`,~", (-3276.7547041227426), (-3276.7547041227426), 0.0);
      xYPointerAnnotation0.fireAnnotationChanged();
      Stroke stroke0 = xYPointerAnnotation0.getArrowStroke();
      xYPointerAnnotation0.notifyListeners((AnnotationChangeEvent) null);
      double double0 = XYTextAnnotation.DEFAULT_ROTATION_ANGLE;
      xYPointerAnnotation0.getArrowStroke();
      Paint paint0 = xYPointerAnnotation0.getArrowPaint();
      xYPointerAnnotation0.hashCode();
      xYPointerAnnotation0.getBaseRadius();
      xYPointerAnnotation0.setArrowWidth(1742.11106);
      xYPointerAnnotation0.setArrowPaint(paint0);
      xYPointerAnnotation0.getAngle();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((-751)).when(fontMetrics0).getAscent();
      doReturn((-1320)).when(fontMetrics0).getHeight();
      doReturn((-751)).when(fontMetrics0).stringWidth(anyString());
      XYPointerAnnotation xYPointerAnnotation1 = new XYPointerAnnotation("k:wh]|]1Jz`,~", (-2621.1270172461104), 30.0, 3.0);
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn(stroke0, "k:wh]|]1Jz`,~").when(fontRenderContext0).getAntiAliasingHint();
      doReturn(stroke0, xYPointerAnnotation0).when(fontRenderContext0).getFractionalMetricsHint();
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn(0).when(fontMetrics1).stringWidth(anyString());
      FontRenderContext fontRenderContext1 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(fontRenderContext1).getAntiAliasingHint();
      doReturn((Object) null, (Object) null).when(fontRenderContext1).getFractionalMetricsHint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(xYPointerAnnotation0.DEFAULT_FONT, xYPointerAnnotation1.DEFAULT_FONT).when(graphics2D0).getFont();
      doReturn(fontMetrics1, (FontMetrics) null).when(graphics2D0).getFontMetrics();
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn(fontRenderContext0, fontRenderContext1).when(graphics2D0).getFontRenderContext();
      xYPointerAnnotation0.setToolTipText("R=|F\"&,UcOr}");
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(30.0, 30.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYPointerAnnotation0.getArrowStroke();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, (-12), plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }
}
