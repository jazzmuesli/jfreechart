/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:19:41 GMT 2019
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.awt.Image;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.annotations.XYImageAnnotation;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.ui.RectangleAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractAnnotation_ESTest extends AbstractAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("");
      textAnnotation0.removeChangeListener((AnnotationChangeListener) null);
      assertTrue(textAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("TextAnchor.TOP_LEFT", "TextAnchor.TOP_LEFT", 0.0, 0.0);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      categoryPointerAnnotation0.notifyListeners(annotationChangeEvent0);
      assertTrue(categoryPointerAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(1819.31287406432, 1819.31287406432, image0, rectangleAnchor0);
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.addChangeListener(annotationChangeListener0);
      assertTrue(xYImageAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("TextAnchor.TOP_LEFT", "TextAnchor.TOP_LEFT", 0.0, 0.0);
      categoryPointerAnnotation0.setNotify(true);
      assertTrue(categoryPointerAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (-1.0));
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      categoryTextAnnotation0.addChangeListener(annotationChangeListener0);
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 0.0, 0.0, 0.0, (-241.28450331847));
      assertTrue(xYDataImageAnnotation0.getNotify());
      
      xYDataImageAnnotation0.setNotify(false);
      xYDataImageAnnotation0.fireAnnotationChanged();
      assertFalse(xYDataImageAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (-1.0));
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = categoryTextAnnotation0.hasListener(eventListener0);
      assertFalse(boolean0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("");
      TextAnnotation textAnnotation1 = (TextAnnotation)textAnnotation0.clone();
      assertNotSame(textAnnotation1, textAnnotation0);
      assertTrue(textAnnotation1.getNotify());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (-1.0));
      boolean boolean0 = categoryTextAnnotation0.getNotify();
      assertTrue(boolean0);
  }
}
