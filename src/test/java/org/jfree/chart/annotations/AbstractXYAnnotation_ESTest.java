/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:09:34 GMT 2019
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.annotations.XYImageAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.title.Title;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.util.XYCoordinateType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractXYAnnotation_ESTest extends AbstractXYAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(entityCollection0).when(chartRenderingInfo0).getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn(chartRenderingInfo0).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(1127.67746, 41.670054010428, (-2480.06971022792), (-177.5984478257337));
      xYLineAnnotation0.addEntity(plotRenderingInfo0, shape0, 180, "S9iAPDC4^Fba&", ">FPvwtCKm(i");
      assertNull(xYLineAnnotation0.getToolTipText());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("k?~", 0.0, 1.0, 777.0004963785763);
      xYPointerAnnotation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation(" alt=\"\"", (-3740.1193), (-3740.1193), (-3740.1193));
      boolean boolean0 = xYPointerAnnotation0.equals(" alt=\"\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("[AD1*T3AZBW!?7#[R[", (-2067.2), 0.0, (-2067.2));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.draw(graphics2D0, (XYPlot) null, rectangle2D0, valueAxis0, valueAxis0, 2863, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPointerAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 1590.6155085206, 1590.6155085206, 1590.6155085206, 0.0, false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(270.0, 270.0, 1.0, 1.0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAnnotation0.addEntity(plotRenderingInfo0, shape0, (-1), "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 0.0, (-492.1700712), (-2247.1382683));
      String string0 = xYPointerAnnotation0.getURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.0, 480.9308, 480.9308, Double.POSITIVE_INFINITY);
      String string0 = xYBoxAnnotation0.getToolTipText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("k?~", 0.0, 1.0, 777.0004963785763);
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(image0, 1.0, 0.0, 5.0, 0.0, false);
      xYDataImageAnnotation0.setURL("9/xE0e.d.Db:F=;bP&");
      boolean boolean0 = xYDataImageAnnotation0.equals(xYPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("+ZBbspv", 0.0, 0.0, (-1189.231061));
      Stroke stroke0 = xYPointerAnnotation0.getArrowStroke();
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(0.0, 0.0, 0.0, 0.0, stroke0, xYPointerAnnotation0.DEFAULT_PAINT);
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      xYLineAnnotation0.setToolTipText("+ZBbspv");
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, 0.0, image0, rectangleAnchor0);
      boolean boolean0 = xYLineAnnotation0.equals(xYImageAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(777.0004963785763, 777.0004963785763, image0, rectangleAnchor0);
      boolean boolean0 = xYImageAnnotation0.equals(rectangleAnchor0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation((-1.0), 1559.59525, (-1.0), (-1866.39751507003));
      Object object0 = xYLineAnnotation0.clone();
      boolean boolean0 = xYLineAnnotation0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Title title0 = mock(Title.class, new ViolatedAssumptionAnswer());
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(3098.0, 0.0, title0);
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      xYTitleAnnotation0.addEntity((PlotRenderingInfo) null, shape0, 417, "", "");
      assertEquals(XYCoordinateType.RELATIVE, xYTitleAnnotation0.getCoordinateType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("org.jfree.chart.annotations.AbstractXYAnnotation", 0.0, 0.0, 0.0);
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPointerAnnotation0.addEntity(plotRenderingInfo0, shape0, 20, "org.jfree.chart.annotations.AbstractXYAnnotation", "org.jfree.chart.annotations.AbstractXYAnnotation");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }
}
