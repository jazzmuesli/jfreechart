/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Oct 17 22:19:41 GMT 2019
 */

package org.jfree.chart.annotations;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class AbstractAnnotation_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.jfree.chart.annotations.AbstractAnnotation"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "ANSI_X3.4-1968"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/projects/jfreechart"); 
    java.lang.System.setProperty("user.home", "/root"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "root"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractAnnotation_ESTest_scaffolding.class.getClassLoader() ,
      "org.jfree.chart.event.TitleChangeListener",
      "org.jfree.chart.LegendItemSource",
      "org.jfree.chart.event.AnnotationChangeEvent",
      "org.jfree.chart.ui.TextAnchor",
      "org.jfree.chart.plot.PlotRenderingInfo",
      "org.jfree.chart.HashUtils",
      "org.jfree.chart.entity.XYAnnotationEntity",
      "org.jfree.chart.util.ObjectUtils",
      "org.jfree.chart.event.PlotChangeListener",
      "org.jfree.chart.annotations.CategoryPointerAnnotation",
      "org.jfree.chart.annotations.XYDataImageAnnotation",
      "org.jfree.chart.axis.Axis",
      "org.jfree.data.general.DatasetChangeListener",
      "org.jfree.chart.plot.Zoomable",
      "org.jfree.chart.JFreeChart",
      "org.jfree.chart.annotations.CategoryAnnotation",
      "org.jfree.chart.util.PaintUtils",
      "org.jfree.chart.axis.CategoryAxis",
      "org.jfree.chart.annotations.XYImageAnnotation",
      "org.jfree.chart.ui.Size2D",
      "org.jfree.chart.annotations.TextAnnotation",
      "org.jfree.chart.ui.RectangleAnchor",
      "org.jfree.chart.event.AnnotationChangeListener",
      "org.jfree.chart.annotations.XYAnnotation",
      "org.jfree.chart.util.Args",
      "org.jfree.chart.axis.ValueAxis",
      "org.jfree.chart.plot.XYPlot",
      "org.jfree.chart.event.ChartChangeEventType",
      "org.jfree.chart.util.PublicCloneable",
      "org.jfree.chart.event.ChartChangeEvent",
      "org.jfree.chart.annotations.AbstractXYAnnotation",
      "org.jfree.chart.ui.Drawable",
      "org.jfree.chart.entity.ChartEntity",
      "org.jfree.chart.annotations.AbstractAnnotation",
      "org.jfree.chart.annotations.CategoryTextAnnotation",
      "org.jfree.chart.plot.Pannable",
      "org.jfree.chart.plot.CategoryPlot",
      "org.jfree.chart.annotations.XYAnnotationBoundsInfo",
      "org.jfree.chart.axis.CategoryAnchor",
      "org.jfree.chart.event.AxisChangeListener",
      "org.jfree.chart.event.MarkerChangeListener",
      "org.jfree.data.Range",
      "org.jfree.chart.event.RendererChangeListener",
      "org.jfree.chart.plot.Plot",
      "org.jfree.chart.plot.ValueAxisPlot",
      "org.jfree.chart.annotations.Annotation"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.awt.Image", false, AbstractAnnotation_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.EventListener", false, AbstractAnnotation_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.jfree.chart.event.AnnotationChangeEvent", false, AbstractAnnotation_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.jfree.chart.event.AnnotationChangeListener", false, AbstractAnnotation_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractAnnotation_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.jfree.chart.annotations.AbstractAnnotation",
      "org.jfree.chart.ui.TextAnchor",
      "org.jfree.chart.annotations.TextAnnotation",
      "org.jfree.chart.annotations.AbstractXYAnnotation",
      "org.jfree.chart.annotations.XYTextAnnotation",
      "org.jfree.chart.util.Args",
      "org.jfree.chart.event.ChartChangeEvent",
      "org.jfree.chart.event.AnnotationChangeEvent",
      "org.jfree.chart.event.ChartChangeEventType",
      "org.jfree.chart.HashUtils",
      "org.jfree.chart.annotations.XYPointerAnnotation",
      "org.jfree.chart.annotations.CategoryLineAnnotation",
      "org.jfree.chart.annotations.XYDataImageAnnotation",
      "org.jfree.data.Range",
      "org.jfree.chart.annotations.XYLineAnnotation",
      "org.jfree.chart.util.UnitType",
      "org.jfree.chart.ui.RectangleInsets",
      "org.jfree.chart.plot.Plot",
      "org.jfree.chart.util.ResourceBundleWrapper",
      "org.jfree.chart.plot.XYPlot",
      "org.jfree.chart.plot.PlotRenderingInfo",
      "org.jfree.chart.block.AbstractBlock",
      "org.jfree.chart.ui.RectangleEdge",
      "org.jfree.chart.ui.HorizontalAlignment",
      "org.jfree.chart.ui.VerticalAlignment",
      "org.jfree.chart.title.Title",
      "org.jfree.chart.annotations.XYTitleAnnotation",
      "org.jfree.chart.util.XYCoordinateType",
      "org.jfree.chart.annotations.CategoryTextAnnotation",
      "org.jfree.chart.annotations.CategoryPointerAnnotation",
      "org.jfree.chart.annotations.XYShapeAnnotation",
      "org.jfree.chart.axis.Axis",
      "org.jfree.chart.axis.ValueAxis",
      "org.jfree.chart.annotations.XYDrawableAnnotation",
      "org.jfree.chart.annotations.XYPolygonAnnotation",
      "org.jfree.chart.annotations.XYBoxAnnotation",
      "org.jfree.chart.plot.CategoryPlot",
      "org.jfree.chart.axis.CategoryAxis",
      "org.jfree.chart.util.ObjectUtils",
      "org.jfree.chart.annotations.XYImageAnnotation",
      "org.jfree.chart.util.PaintUtils",
      "org.jfree.chart.ChartRenderingInfo",
      "org.jfree.chart.text.TextUtils",
      "org.jfree.chart.entity.ChartEntity",
      "org.jfree.chart.entity.XYAnnotationEntity"
    );
  }
}
