/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:42:03 GMT 2019
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.event.PlotChangeListener;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.text.TextUtils;
import org.jfree.chart.ui.Layer;
import org.jfree.chart.ui.TextAnchor;
import org.jfree.chart.util.ShadowGenerator;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.category.CategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYTextAnnotation_ESTest extends XYTextAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      RendererChangeEvent rendererChangeEvent0 = mock(RendererChangeEvent.class, new ViolatedAssumptionAnswer());
      categoryPlot0.rendererChanged(rendererChangeEvent0);
      xYTextAnnotation0.setRotationAngle(1.0);
      categoryPlot0.setDomainAxisLocation(1844, axisLocation0, true);
      Paint paint0 = categoryPlot0.getBackgroundPaint();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setOutlinePaint(paint0);
      xYTextAnnotation0.hasListener(categoryPlot0);
      categoryPlot0.mapDatasetToDomainAxis(1844, 137);
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getRotationAngle();
      XYTextAnnotation xYTextAnnotation1 = (XYTextAnnotation)xYTextAnnotation0.clone();
      xYTextAnnotation0.setOutlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
      xYTextAnnotation0.getY();
      TextAnchor textAnchor1 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getText();
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.isOutlineVisible();
      xYTextAnnotation0.getX();
      xYTextAnnotation1.clone();
      xYTextAnnotation1.setRotationAnchor(textAnchor1);
      XYTextAnnotation xYTextAnnotation2 = new XYTextAnnotation("", 0.0, 0.0);
      xYTextAnnotation0.equals(xYTextAnnotation2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, (-4911.0587151));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      RendererChangeEvent rendererChangeEvent0 = mock(RendererChangeEvent.class, new ViolatedAssumptionAnswer());
      categoryPlot0.rendererChanged(rendererChangeEvent0);
      xYTextAnnotation0.setRotationAngle(1.0);
      categoryPlot0.setDomainAxisLocation(1844, axisLocation0, true);
      Paint paint0 = categoryPlot0.getBackgroundPaint();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.setOutlinePaint(paint0);
      xYTextAnnotation0.hasListener(categoryPlot0);
      categoryPlot0.mapDatasetToDomainAxis(1844, 140);
      xYTextAnnotation0.setOutlineVisible(true);
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getRotationAngle();
      XYTextAnnotation xYTextAnnotation1 = (XYTextAnnotation)xYTextAnnotation0.clone();
      xYTextAnnotation0.setOutlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
      xYTextAnnotation0.getY();
      TextAnchor textAnchor1 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getText();
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.isOutlineVisible();
      xYTextAnnotation0.getX();
      xYTextAnnotation1.clone();
      xYTextAnnotation1.setRotationAnchor(textAnchor1);
      XYTextAnnotation xYTextAnnotation2 = (XYTextAnnotation)xYTextAnnotation1.clone();
      xYTextAnnotation0.equals(xYTextAnnotation2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("0>gob`2*p\"'}g^!w-67", 0.0, (-1.0));
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.setBackgroundPaint((Paint) null);
      xYTextAnnotation0.equals("0>gob`2*p\"'}g^!w-67");
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      xYTextAnnotation0.setPaint(color0);
      xYTextAnnotation0.getTextAnchor();
      XYTextAnnotation xYTextAnnotation1 = (XYTextAnnotation)xYTextAnnotation0.clone();
      xYTextAnnotation0.getRotationAngle();
      XYTextAnnotation xYTextAnnotation2 = new XYTextAnnotation("0>gob`2*p\"'}g^!w-67", 0.0, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.getRootPlot();
      xYTextAnnotation2.setText("0>gob`2*p\"'}g^!w-67");
      xYTextAnnotation2.hasListener(categoryPlot1);
      xYTextAnnotation0.equals(xYTextAnnotation2);
      xYTextAnnotation2.setX(0.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYTextAnnotation1.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 0.0);
      TextAnchor textAnchor0 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setX(0.0);
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.isOutlineVisible();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 0.0, 0.0);
      Object object0 = xYTextAnnotation1.clone();
      xYTextAnnotation0.equals(object0);
      xYTextAnnotation0.setY(0.0);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation1.setOutlineVisible(false);
      xYTextAnnotation1.getText();
      XYTextAnnotation xYTextAnnotation2 = (XYTextAnnotation)xYTextAnnotation1.clone();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      xYTextAnnotation2.setBackgroundPaint(categoryPlot0.DEFAULT_BACKGROUND_PAINT);
      xYTextAnnotation0.hasListener(categoryPlot0);
      xYTextAnnotation1.equals(xYTextAnnotation2);
      xYTextAnnotation1.hashCode();
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation0.getX();
      xYTextAnnotation1.clone();
      xYTextAnnotation1.getRotationAngle();
      xYTextAnnotation1.getRotationAngle();
      xYTextAnnotation1.hasListener(categoryPlot0);
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation1.setText("");
      xYTextAnnotation2.getFont();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("xPd}/jW2a(5|K30>", 0.0, 0.0);
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_TEXT_ANCHOR;
      xYTextAnnotation0.setRotationAngle(0.0);
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
      xYTextAnnotation0.setX(0.0);
      XYTextAnnotation xYTextAnnotation1 = (XYTextAnnotation)xYTextAnnotation0.clone();
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
      xYTextAnnotation1.setOutlineStroke(basicStroke0);
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation0.setRotationAngle(0.0);
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      xYTextAnnotation0.removeChangeListener(categoryPlot0);
      xYTextAnnotation0.getText();
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.getOutlineStroke();
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis1 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer1 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      xYTextAnnotation0.fireAnnotationChanged();
      xYTextAnnotation0.setBackgroundPaint(categoryAxis1.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("W}2QS8Vf3:Kd2_/", 1.0, 392.3111962);
      xYTextAnnotation0.setText("t");
      xYTextAnnotation0.setText("Location not recognised.");
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYTextAnnotation0.fireAnnotationChanged();
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      Plot plot0 = categoryPlot0.getRootPlot();
      xYTextAnnotation0.addChangeListener(plot0);
      xYTextAnnotation0.setURL("t");
      xYTextAnnotation0.setRotationAnchor(xYTextAnnotation0.DEFAULT_TEXT_ANCHOR);
      xYTextAnnotation0.setY(1.0);
      categoryPlot0.setRangeZeroBaselineVisible(true);
      xYTextAnnotation0.setText("ABr>}RO~wm_9{p).@");
      xYTextAnnotation0.equals(xYTextAnnotation0);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setText("W}2QS8Vf3:Kd2_/");
      xYTextAnnotation0.setY(10);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.setY(0.0F);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYTextAnnotation0.draw(graphics2D0, (XYPlot) null, rectangle2D0, valueAxis1, valueAxis1, 10, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "maximumDate";
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("maximumDate", 0.0, 0.0);
      xYTextAnnotation0.setURL("");
      xYTextAnnotation0.setOutlineVisible(true);
      xYTextAnnotation0.setY(0.0);
      xYTextAnnotation0.setX(0.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      xYTextAnnotation0.addChangeListener(categoryPlot0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYTextAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, (-714), plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("Q", (-220.4770584), (-220.4770584));
      xYTextAnnotation0.setNotify(true);
      xYTextAnnotation0.setURL("Q");
      xYTextAnnotation0.getRotationAnchor();
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      xYTextAnnotation0.setFont(font0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getParent();
      xYTextAnnotation0.removeChangeListener((AnnotationChangeListener) null);
      xYTextAnnotation0.equals((Object) null);
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("TextAnchor.HALF_ASCENT_RIGHT", 71.86, 135.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      xYTextAnnotation0.setURL("TextAnchor.HALF_ASCENT_RIGHT");
      Plot plot0 = categoryPlot0.getParent();
      xYTextAnnotation0.hasListener((EventListener) null);
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.hashCode();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("text", 1.25, 0.0);
      xYTextAnnotation1.setPaint(plot0.DEFAULT_BACKGROUND_PAINT);
      xYTextAnnotation0.addChangeListener((AnnotationChangeListener) null);
      xYTextAnnotation1.setOutlineStroke(categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      TextAnchor textAnchor0 = xYTextAnnotation1.getRotationAnchor();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation1.getOutlineStroke();
      xYTextAnnotation1.hashCode();
      xYTextAnnotation0.setBackgroundPaint((Paint) null);
      xYTextAnnotation0.setFont(categoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      xYTextAnnotation1.isOutlineVisible();
      xYTextAnnotation0.setPaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      xYTextAnnotation0.setOutlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
      xYTextAnnotation0.setX((-1661.184));
      xYTextAnnotation1.clone();
      xYTextAnnotation1.setText("TextAnchor.HALF_ASCENT_RIGHT");
      xYTextAnnotation0.setOutlinePaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      xYTextAnnotation1.setRotationAnchor(xYTextAnnotation0.DEFAULT_TEXT_ANCHOR);
      xYTextAnnotation1.isOutlineVisible();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("DSRd+1F);Pmt%J", 0.0, 0.0);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.hashCode();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Paint paint0 = categoryPlot0.getRangeZeroBaselinePaint();
      xYTextAnnotation0.setBackgroundPaint(paint0);
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("DSRd+1F);Pmt%J", 0.0, (-594.0));
      categoryPlot0.setAnchorValue(0.0, false);
      xYTextAnnotation0.setNotify(false);
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation0.setY((-594.0));
      xYTextAnnotation1.setY((-937.917687607));
      xYTextAnnotation1.getText();
      xYTextAnnotation1.clone();
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.setTextAnchor(xYTextAnnotation1.DEFAULT_ROTATION_ANCHOR);
      xYTextAnnotation0.clone();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("Not yet implemented.", 1.0, (-1625.0));
      xYTextAnnotation0.setX(0.0);
      Paint paint0 = xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setPaint(paint0);
      xYTextAnnotation0.clone();
      xYTextAnnotation0.getX();
      xYTextAnnotation0.getOutlinePaint();
      xYTextAnnotation0.getBackgroundPaint();
      Object object0 = xYTextAnnotation0.clone();
      xYTextAnnotation0.equals(object0);
      xYTextAnnotation0.equals((Object) null);
      xYTextAnnotation0.getText();
      xYTextAnnotation0.setOutlineVisible(true);
      TextAnchor textAnchor0 = null;
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setRotationAnchor((TextAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation(">5,Z{P']%-", 225.0, 225.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Paint paint0 = categoryPlot0.getRangeMinorGridlinePaint();
      xYTextAnnotation0.setOutlinePaint(paint0);
      xYTextAnnotation0.setNotify(false);
      xYTextAnnotation0.setPaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      xYTextAnnotation0.setURL("text");
      TextUtils.setUseDrawRotatedStringWorkaround(false);
      TextUtils.setUseFontMetricsGetStringBounds(false);
      xYTextAnnotation0.clone();
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      xYTextAnnotation0.setOutlineStroke(basicStroke0);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getText();
      xYTextAnnotation0.getY();
      xYTextAnnotation0.fireAnnotationChanged();
      xYTextAnnotation0.setFont(categoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      Paint paint1 = xYTextAnnotation0.getPaint();
      xYTextAnnotation0.hasListener(categoryPlot0);
      xYTextAnnotation0.setOutlinePaint(paint1);
      xYTextAnnotation0.clone();
      xYTextAnnotation0.setOutlineStroke(categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.setOutlinePaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      xYTextAnnotation0.setY(922.1282917);
      xYTextAnnotation0.setRotationAngle((-661.15214773));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("k", 0.12, 90.3);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      categoryPlot0.getChart();
      xYTextAnnotation0.hasListener((EventListener) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = valueAxis0;
      valueAxisArray0[1] = valueAxis0;
      valueAxisArray0[2] = valueAxis0;
      valueAxisArray0[3] = valueAxis0;
      valueAxisArray0[4] = valueAxis0;
      valueAxisArray0[5] = valueAxis0;
      valueAxisArray0[6] = valueAxis0;
      categoryPlot0.setRangeAxes(valueAxisArray0);
      TextAnchor textAnchor0 = xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.clone();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("R]a7IV'Kt@,", 7.0, 0.0);
      xYTextAnnotation0.setX(7.0);
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_TEXT_ANCHOR;
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.setY((-468.59039));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      categoryPlot0.setRangeGridlineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      categoryPlot0.setRangeAxis(3352, valueAxis0, false);
      Paint paint0 = categoryPlot0.getRangeGridlinePaint();
      xYTextAnnotation0.setPaint(paint0);
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.setFont(categoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      Object object0 = xYTextAnnotation0.clone();
      xYTextAnnotation0.equals(object0);
      xYTextAnnotation0.setY(1.0F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, (-1.0));
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.setBackgroundPaint((Paint) null);
      xYTextAnnotation0.equals("");
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      xYTextAnnotation0.setPaint(color0);
      xYTextAnnotation0.setY(0.0);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.clone();
      xYTextAnnotation0.getRotationAngle();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 0.0, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Plot plot0 = categoryPlot0.getRootPlot();
      xYTextAnnotation1.hasListener(plot0);
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation1.setX(0.0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("R", 0.0, 0.0);
      xYTextAnnotation0.setRotationAngle(0.0);
      Paint paint0 = xYTextAnnotation0.getOutlinePaint();
      xYTextAnnotation0.setBackgroundPaint(paint0);
      xYTextAnnotation0.clone();
      TextUtils.setDrawStringsWithFontAttributes(true);
      xYTextAnnotation0.setOutlineVisible(true);
      xYTextAnnotation0.isOutlineVisible();
      xYTextAnnotation0.equals("R");
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      Stroke stroke0 = categoryPlot0.getRangeMinorGridlineStroke();
      xYTextAnnotation0.setOutlineStroke(stroke0);
      xYTextAnnotation0.setOutlinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYTextAnnotation0.getOutlinePaint();
      xYTextAnnotation0.clone();
      xYTextAnnotation0.getOutlineStroke();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "";
      double double0 = 0.0;
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, (-1.0));
      xYTextAnnotation0.getBackgroundPaint();
      TextUtils.setDrawStringsWithFontAttributes(false);
      xYTextAnnotation0.setBackgroundPaint((Paint) null);
      xYTextAnnotation0.setOutlineVisible(true);
      xYTextAnnotation0.equals("");
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      xYTextAnnotation0.setPaint(color0);
      xYTextAnnotation0.setY(0.0);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.clone();
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setOutlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "origin";
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("origin", 726.95705404, 726.95705404);
      Paint paint0 = xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setBackgroundPaint(paint0);
      xYTextAnnotation0.setOutlineVisible(true);
      xYTextAnnotation0.hashCode();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Plot plot0 = categoryPlot0.getRootPlot();
      xYTextAnnotation0.removeChangeListener(plot0);
      categoryPlot0.getChart();
      categoryPlot0.addChangeListener((PlotChangeListener) null);
      xYTextAnnotation0.setY(726.95705404);
      xYTextAnnotation0.setOutlineStroke(categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.setOutlineVisible(true);
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getX();
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 3151.29645236, 0.0);
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      xYTextAnnotation0.addEntity((PlotRenderingInfo) null, ellipse2D_Double0, 0, "V/T%9'", "");
      xYTextAnnotation0.getX();
      xYTextAnnotation0.getRotationAnchor();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("W}2QS8Vf3:Kd2_/", 1.0, 392.3111962);
      xYTextAnnotation0.setText("t");
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("ABr>}RO~wm_9{p).@", 0.0, 1.0);
      xYTextAnnotation1.setText("Location not recognised.");
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYTextAnnotation1.fireAnnotationChanged();
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      Plot plot0 = categoryPlot0.getRootPlot();
      xYTextAnnotation1.addChangeListener(plot0);
      xYTextAnnotation1.setURL("t");
      xYTextAnnotation1.setRotationAnchor(xYTextAnnotation0.DEFAULT_TEXT_ANCHOR);
      xYTextAnnotation1.setY(1.0);
      xYTextAnnotation1.setURL("W}2QS8Vf3:Kd2_/");
      categoryPlot0.setRangeZeroBaselineVisible(true);
      xYTextAnnotation1.setText("ABr>}RO~wm_9{p).@");
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setText("");
      xYTextAnnotation1.setY(10);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation1.getBackgroundPaint();
      xYTextAnnotation1.setY(0.0F);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYTextAnnotation1.draw(graphics2D0, (XYPlot) null, rectangle2D0, valueAxis1, valueAxis1, 10, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.7853981633974483, (-1029.628));
      TextAnchor textAnchor0 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
      xYTextAnnotation0.setY(852.1025347318);
      TextAnchor textAnchor1 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.setRotationAnchor(textAnchor1);
      xYTextAnnotation0.setRotationAnchor(textAnchor1);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getBackgroundPaint();
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", (-2539.678320994407), (-2539.678320994407));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      xYTextAnnotation0.addChangeListener(categoryPlot0);
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_TEXT_ANCHOR;
      Color color0 = (Color)Plot.DEFAULT_BACKGROUND_PAINT;
      xYTextAnnotation0.setOutlinePaint(color0);
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      TextAnchor textAnchor1 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.setRotationAngle((-2539.678320994407));
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setY(1.0F);
      xYTextAnnotation0.setBackgroundPaint(color0);
      xYTextAnnotation0.setTextAnchor(textAnchor1);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.setX((-2539.678320994407));
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
      xYTextAnnotation0.getY();
      xYTextAnnotation0.setRotationAnchor(textAnchor1);
      xYTextAnnotation0.setOutlinePaint(categoryPlot0.DEFAULT_OUTLINE_PAINT);
      xYTextAnnotation0.setRotationAnchor(textAnchor1);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.setPaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      xYTextAnnotation0.setTextAnchor(textAnchor1);
      xYTextAnnotation0.setOutlinePaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("source", 0.0, (-2123.414375692401));
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_TEXT_ANCHOR;
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setRotationAngle((-2123.414375692401));
      xYTextAnnotation0.getFont();
      Object object0 = xYTextAnnotation0.clone();
      xYTextAnnotation0.equals(object0);
      xYTextAnnotation0.getY();
      Object object1 = xYTextAnnotation0.clone();
      xYTextAnnotation0.equals(object1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 0.0);
      TextAnchor textAnchor0 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setX(0.0);
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.isOutlineVisible();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 0.0, 0.0);
      Object object0 = xYTextAnnotation1.clone();
      xYTextAnnotation0.equals(object0);
      xYTextAnnotation0.setY(0.0);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation1.setOutlineVisible(false);
      xYTextAnnotation1.getText();
      Object object1 = xYTextAnnotation1.clone();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      xYTextAnnotation0.hasListener(categoryPlot0);
      xYTextAnnotation1.equals(object1);
      xYTextAnnotation1.hashCode();
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation0.getX();
      xYTextAnnotation1.clone();
      xYTextAnnotation1.getRotationAngle();
      xYTextAnnotation1.getRotationAngle();
      xYTextAnnotation1.hasListener(categoryPlot0);
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation1.setText("");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("[F.k<5[nW~&_xI", 1745.155190794364, 3105.029279);
      xYTextAnnotation0.setY(1745.155190794364);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getParent();
      categoryPlot0.clearDomainMarkers();
      xYTextAnnotation0.removeChangeListener((AnnotationChangeListener) null);
      xYTextAnnotation0.setText("[F.k<5[nW~&_xI");
      xYTextAnnotation0.setRotationAngle(3346.5);
      categoryPlot0.setWeight((-587));
      categoryPlot0.getShadowGenerator();
      categoryPlot0.setShadowGenerator((ShadowGenerator) null);
      xYTextAnnotation0.setNotify(false);
      xYTextAnnotation0.getOutlinePaint();
      Layer layer0 = Layer.BACKGROUND;
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      categoryPlot0.setColumnRenderingOrder(sortOrder0);
      categoryPlot0.getRangeMarkers(layer0);
      xYTextAnnotation0.setRotationAngle(1.0);
      TextAnchor textAnchor0 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation0.getY();
      xYTextAnnotation0.setFont(categoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      xYTextAnnotation0.setText("[F.k<5[nW~&_xI");
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
      Font font0 = xYTextAnnotation0.getFont();
      xYTextAnnotation0.setFont(font0);
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.setText("");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("Pi3s B", 0.0, 360.0);
      Font font0 = xYTextAnnotation0.getFont();
      xYTextAnnotation0.setFont(font0);
      xYTextAnnotation0.getText();
      xYTextAnnotation0.getBackgroundPaint();
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", (-1064.9282869), (-925.13));
      xYTextAnnotation0.notifyListeners((AnnotationChangeEvent) null);
      xYTextAnnotation0.notifyListeners((AnnotationChangeEvent) null);
      xYTextAnnotation0.setRotationAngle((-192.861544));
      xYTextAnnotation0.getText();
      xYTextAnnotation0.isOutlineVisible();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_TEXT_ANCHOR;
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setOutlineVisible(true);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getY();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 2189.77847041265, (-941.57));
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      xYTextAnnotation0.equals("");
      xYTextAnnotation0.setFont(font0);
      TextAnchor textAnchor0 = xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      Stroke stroke0 = xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation0.getY();
      xYTextAnnotation0.setText("");
      Paint paint0 = xYTextAnnotation0.getOutlinePaint();
      xYTextAnnotation0.setFont(font0);
      xYTextAnnotation0.setBackgroundPaint(paint0);
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getPaint();
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation0.setX(2189.77847041265);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.setOutlineStroke(stroke0);
      xYTextAnnotation0.setX(0.0);
      xYTextAnnotation0.clone();
      Paint paint1 = xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setPaint(paint1);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getRotationAnchor();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 2332.6424, (-1237.6848166));
      xYTextAnnotation0.getText();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("D", 0.0, 1659.4545714104);
      xYTextAnnotation0.getOutlinePaint();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 0.0);
      TextUtils.setDrawStringsWithFontAttributes(false);
      xYTextAnnotation0.getY();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("font", (-1.0), 2982.642096);
      xYTextAnnotation0.hashCode();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("A|%tC\"D", (-1.0), 0.0);
      Font font0 = xYTextAnnotation1.getFont();
      xYTextAnnotation0.setFont(font0);
      xYTextAnnotation0.setY(2982.642096);
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      xYTextAnnotation1.clone();
      xYTextAnnotation0.setOutlinePaint(color0);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation1.setY(0.0);
      xYTextAnnotation1.setTextAnchor(xYTextAnnotation0.DEFAULT_ROTATION_ANCHOR);
      xYTextAnnotation1.getOutlineStroke();
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.setBackgroundPaint(color0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", (-747.37), (-1.0));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Paint paint0 = categoryPlot0.getDomainCrosshairPaint();
      xYTextAnnotation0.setPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("anchor", 418.7, 0.0);
      xYTextAnnotation0.setText("anchor");
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      xYTextAnnotation0.setFont(font0);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getOutlineStroke();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 41.3107407356, (-563.3521677));
      xYTextAnnotation0.clone();
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 1562.36697, 1562.36697);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      Paint paint0 = categoryPlot0.getRangeGridlinePaint();
      xYTextAnnotation0.setURL("");
      xYTextAnnotation0.setBackgroundPaint(paint0);
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 881.813501, 427.40373);
      xYTextAnnotation1.setBackgroundPaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation0.getRotationAnchor();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("g", (-1887.99623), (-1887.99623));
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation0.setRotationAngle(1.0);
      TextUtils.setDrawStringsWithFontAttributes(false);
      Stroke stroke0 = xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation0.setOutlineStroke(stroke0);
      TextUtils.setUseFontMetricsGetStringBounds(false);
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
      xYTextAnnotation0.setOutlineStroke(basicStroke0);
      xYTextAnnotation0.getX();
      Paint paint0 = xYTextAnnotation0.getOutlinePaint();
      xYTextAnnotation0.clone();
      xYTextAnnotation0.setOutlinePaint(paint0);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.setOutlinePaint(paint0);
      xYTextAnnotation0.setOutlinePaint(paint0);
      xYTextAnnotation0.clone();
      xYTextAnnotation0.setOutlinePaint(paint0);
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYTextAnnotation0.draw((Graphics2D) null, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("q/W>%tzw:LGh7", (-814.57086680057), (-814.57086680057));
      xYTextAnnotation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 180.0, 180.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYTextAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 37, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("info", 0.0, (-1.0));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Stroke stroke0 = xYTextAnnotation0.getOutlineStroke();
      categoryPlot0.setRangeGridlineStroke(stroke0);
      Paint paint0 = categoryPlot0.getRangeZeroBaselinePaint();
      xYTextAnnotation0.setOutlinePaint(paint0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("6", (-2382.7), (-2382.7));
      xYTextAnnotation0.clone();
      xYTextAnnotation0.getX();
      xYTextAnnotation0.getX();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("f", 723.33, 723.33);
      xYTextAnnotation0.setRotationAngle(723.33);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.getBackgroundPaint();
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("~=sA?CtnvQ", (-90.0), (-90.0));
      xYTextAnnotation0.getBackgroundPaint();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("6", 2668.4427999, 924.72859157534);
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 1093.0953, 1.0);
      xYTextAnnotation1.clone();
      TextAnchor textAnchor0 = xYTextAnnotation1.getTextAnchor();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation1.equals("");
      xYTextAnnotation0.setY(1.0);
      xYTextAnnotation1.setX(1.0);
      xYTextAnnotation0.setText("");
      xYTextAnnotation1.setTextAnchor(textAnchor0);
      xYTextAnnotation1.setBackgroundPaint(xYTextAnnotation0.DEFAULT_PAINT);
      Object object0 = xYTextAnnotation0.clone();
      xYTextAnnotation1.equals(object0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Stroke stroke0 = categoryPlot0.getOutlineStroke();
      xYTextAnnotation1.setOutlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("JDN8|gaH81c", 0.0, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getChart();
      xYTextAnnotation0.hasListener((EventListener) null);
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getY();
      Object object0 = xYTextAnnotation0.clone();
      xYTextAnnotation0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("text", 1855.0, 0.0);
      xYTextAnnotation0.equals("text");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 0.0);
      xYTextAnnotation0.setOutlineVisible(true);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", (-2428.1337), (-914.82250354));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Paint paint0 = categoryPlot0.getRangeMinorGridlinePaint();
      xYTextAnnotation0.setBackgroundPaint(paint0);
      xYTextAnnotation0.setText("");
      xYTextAnnotation0.getRotationAngle();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 764.0622855421, 764.0622855421);
      xYTextAnnotation0.setX(764.0622855421);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("{`3&N9HFWRb}DWZ=:", 225.0, 225.0);
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      xYTextAnnotation0.setOutlineStroke(basicStroke0);
      xYTextAnnotation0.setRotationAngle(225.0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("Not yet implemented.", (-2624.9301), (-2624.9301));
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.getPaint();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("paint", 100.1934, (-2663.8107526));
      xYTextAnnotation0.setText("oqtoQ3L2C>G56m");
      xYTextAnnotation0.setText("oqtoQ3L2C>G56m");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("E&CI,R.#QB", 0.0, 0.0);
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      xYTextAnnotation0.setOutlineStroke(basicStroke0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double double0 = 1683.9721;
      XYTextAnnotation xYTextAnnotation0 = null;
      try {
        xYTextAnnotation0 = new XYTextAnnotation((String) null, 4544.6184, 1683.9721);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("n", (-306.86), (-306.86));
      xYTextAnnotation0.getOutlineStroke();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 1695.7913234959, 0.65);
      xYTextAnnotation0.setY(0.65);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 654.101791879499);
      xYTextAnnotation0.isOutlineVisible();
      xYTextAnnotation0.getTextAnchor();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, (-567.8));
      TextAnchor textAnchor0 = xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", (-1.0), 242.3);
      TextUtils.setUseDrawRotatedStringWorkaround(false);
      // Undeclared exception!
      try { 
        xYTextAnnotation0.setTextAnchor((TextAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("y&U[6RMONy4Y", 1174.2203142321903, 1174.2203142321903);
      xYTextAnnotation0.getFont();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 0.0);
      TextAnchor textAnchor0 = xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("?=X", 0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 714.0, 90.0);
      BasicStroke basicStroke0 = (BasicStroke)CategoryPlot.DEFAULT_GRIDLINE_STROKE;
      xYTextAnnotation0.setOutlineStroke(basicStroke0);
      xYTextAnnotation0.hashCode();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 714.0, (-83.22430393));
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      xYTextAnnotation0.setRotationAnchor(xYTextAnnotation0.DEFAULT_TEXT_ANCHOR);
      xYTextAnnotation0.getOutlinePaint();
      xYTextAnnotation1.getText();
      Object object0 = xYTextAnnotation0.clone();
      xYTextAnnotation1.equals(object0);
      xYTextAnnotation1.getOutlinePaint();
      xYTextAnnotation0.getOutlinePaint();
      xYTextAnnotation0.getRotationAnchor();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, 0.0);
      TextAnchor textAnchor0 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setX(0.0);
      xYTextAnnotation0.getFont();
      xYTextAnnotation0.isOutlineVisible();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 0.0, 0.0);
      XYTextAnnotation xYTextAnnotation2 = (XYTextAnnotation)xYTextAnnotation1.clone();
      xYTextAnnotation0.equals(xYTextAnnotation2);
      xYTextAnnotation0.setY(0.0);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation1.setOutlineVisible(false);
      xYTextAnnotation1.getText();
      XYTextAnnotation xYTextAnnotation3 = (XYTextAnnotation)xYTextAnnotation1.clone();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      xYTextAnnotation3.setOutlinePaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      xYTextAnnotation0.hasListener(categoryPlot0);
      xYTextAnnotation1.equals(xYTextAnnotation3);
      xYTextAnnotation1.hashCode();
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation0.getX();
      xYTextAnnotation1.clone();
      xYTextAnnotation1.getRotationAngle();
      xYTextAnnotation1.getRotationAngle();
      xYTextAnnotation1.hasListener(categoryPlot0);
      xYTextAnnotation0.getOutlineStroke();
      xYTextAnnotation1.setText("");
      xYTextAnnotation2.getFont();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, (-1.0));
      xYTextAnnotation0.getBackgroundPaint();
      xYTextAnnotation0.setBackgroundPaint((Paint) null);
      xYTextAnnotation0.equals("");
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      xYTextAnnotation0.setPaint(color0);
      xYTextAnnotation0.setY(0.0);
      xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.clone();
      xYTextAnnotation0.getRotationAngle();
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", 0.0, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Plot plot0 = categoryPlot0.getRootPlot();
      xYTextAnnotation1.setText("");
      xYTextAnnotation1.hasListener(plot0);
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation1.setX(0.0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", (-1492.0), (-1492.0));
      xYTextAnnotation0.setText("");
      TextAnchor textAnchor0 = xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.setRotationAnchor(textAnchor0);
      xYTextAnnotation0.getPaint();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      xYTextAnnotation0.setFont(xYTextAnnotation0.DEFAULT_FONT);
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("", (-100.77), 0.0);
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation1.getText();
      xYTextAnnotation1.getText();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("W}2QS8Vf3:Kd2_/", 1.0, 392.3111962);
      XYTextAnnotation xYTextAnnotation1 = new XYTextAnnotation("ABr>}RO~wm_9{p).@", 0.0, 1.0);
      xYTextAnnotation1.setText("Location not recognised.");
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYTextAnnotation1.fireAnnotationChanged();
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      Plot plot0 = categoryPlot0.getRootPlot();
      xYTextAnnotation1.addChangeListener(plot0);
      xYTextAnnotation1.setURL("t");
      xYTextAnnotation1.setRotationAnchor(xYTextAnnotation0.DEFAULT_TEXT_ANCHOR);
      xYTextAnnotation1.setY(1.0);
      xYTextAnnotation1.setURL("W}2QS8Vf3:Kd2_/");
      categoryPlot0.setRangeZeroBaselineVisible(true);
      xYTextAnnotation1.setText("ABr>}RO~wm_9{p).@");
      xYTextAnnotation0.equals(xYTextAnnotation1);
      xYTextAnnotation0.getRotationAnchor();
      xYTextAnnotation0.getPaint();
      xYTextAnnotation0.setText("");
      xYTextAnnotation1.setY(10);
      xYTextAnnotation0.hashCode();
      xYTextAnnotation1.getBackgroundPaint();
      xYTextAnnotation1.setY(0.0F);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYTextAnnotation1.draw(graphics2D0, (XYPlot) null, rectangle2D0, valueAxis1, valueAxis1, 10, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.0, (-4911.0587151));
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      RendererChangeEvent rendererChangeEvent0 = mock(RendererChangeEvent.class, new ViolatedAssumptionAnswer());
      categoryPlot0.rendererChanged(rendererChangeEvent0);
      xYTextAnnotation0.setRotationAngle(1.0);
      categoryPlot0.setDomainAxisLocation(1844, axisLocation0, true);
      Paint paint0 = categoryPlot0.getBackgroundPaint();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      xYTextAnnotation0.setTextAnchor(textAnchor0);
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.setOutlinePaint(paint0);
      categoryPlot0.mapDatasetToDomainAxis(1844, 140);
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.getY();
      xYTextAnnotation0.getRotationAngle();
      XYTextAnnotation xYTextAnnotation1 = (XYTextAnnotation)xYTextAnnotation0.clone();
      xYTextAnnotation0.setOutlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
      xYTextAnnotation0.getY();
      TextAnchor textAnchor1 = xYTextAnnotation0.getTextAnchor();
      xYTextAnnotation0.getText();
      xYTextAnnotation0.setOutlineVisible(false);
      xYTextAnnotation0.getRotationAngle();
      xYTextAnnotation0.isOutlineVisible();
      xYTextAnnotation0.getX();
      xYTextAnnotation1.clone();
      xYTextAnnotation1.setRotationAnchor(textAnchor1);
      XYTextAnnotation xYTextAnnotation2 = (XYTextAnnotation)xYTextAnnotation1.clone();
      xYTextAnnotation0.equals(xYTextAnnotation2);
      xYTextAnnotation1.getOutlinePaint();
      assertEquals(1.0, xYTextAnnotation0.getRotationAngle(), 0.01);
      assertFalse(xYTextAnnotation1.equals((Object)xYTextAnnotation0));
  }
}
