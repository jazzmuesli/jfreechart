/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:59:52 GMT 2019
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.ui.Drawable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class XYDrawableAnnotation_ESTest extends XYDrawableAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0, 1.0, 1.0, (-285.8), Double.NaN, drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      XYDrawableAnnotation xYDrawableAnnotation1 = (XYDrawableAnnotation)xYDrawableAnnotation0.clone();
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1879.93663, 1879.93663, 1879.93663, 1879.93663, drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(1879.93663, 1879.93663, 1879.93663, 0.0, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(253.6432047886748, 253.6432047886748, 253.6432047886748, 253.6432047886748, drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(253.6432047886748, 253.6432047886748, 5.0, (-45.0), drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, 6.7074746664625025, 4594.88273302, 0.0, 6.7074746664625025, drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(0.0, 0.0, 0.08, 0.0, 3739.15296321, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-487.57), (-487.57), (-604.986), (-969.0978399019585), (-604.986), drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation((-969.0978399019585), (-969.0978399019585), (-487.57), (-1759.8713942), drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-1889.897897908), (-1889.897897908), (-512.06167115), (-3030.76), drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNotNull(xYDrawableAnnotation0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYDrawableAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYDrawableAnnotation xYDrawableAnnotation0 = null;
      try {
        xYDrawableAnnotation0 = new XYDrawableAnnotation(1297.4969002783, 10, 1297.4969002783, 977.024, (Drawable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'drawable' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYDrawableAnnotation xYDrawableAnnotation0 = null;
      try {
        xYDrawableAnnotation0 = new XYDrawableAnnotation(1583.576126010983, 0.0, (-102.35230443), (-102.35230443), 947.0, (Drawable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'drawable' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-2547.905393135418), (-2547.905393135418), (-2547.905393135418), (-2547.905393135418), (-2547.905393135418), drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation((-2547.905393135418), (-2547.905393135418), (-2547.905393135418), (-2547.905393135418), (-2547.905393135418), drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, 0.0, 0.0, 0.0, drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(0.0, 0.0, 0.0, 0.0, 0.0, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-3627.001426163), (-3627.001426163), (-3627.001426163), (-3627.001426163), drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation((-3627.001426163), (-3627.001426163), (-3627.001426163), 0.0, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-3627.001426163), (-3627.001426163), (-3627.001426163), (-3627.001426163), drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation((-3627.001426163), (-3627.001426163), 0.0, 0.0, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, (-4.0), 4594.88273302, 0.0, (-4.0), drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(0.0, 0.0, 507.9585087319462, 0.0, 3739.15296321, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-2546.4387102560986), (-2546.4387102560986), 830.09166562, 830.09166562, 830.09166562, drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(830.09166562, 830.09166562, (-2546.4387102560986), (-2546.4387102560986), (-2546.4387102560986), drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0E-8, 1.0E-8, 9.0, 1.0E-8, 748.583190317062, drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNotNull(xYDrawableAnnotation0);
      
      XYDrawableAnnotation xYDrawableAnnotation1 = (XYDrawableAnnotation)xYDrawableAnnotation0.clone();
      assertTrue(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertTrue(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertTrue(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(boolean0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0E-8, 1.0E-8, 9.0, 1.0E-8, 748.583190317062, drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation0);
      assertTrue(boolean0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, 0.0, 741.2914826842173, 0.0, drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      boolean boolean0 = xYDrawableAnnotation0.equals(axisLocation0);
      assertFalse(boolean0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0E-8, 1.0E-8, 9.0, 1.0E-8, 748.583190317062, drawable0);
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      xYDrawableAnnotation0.setURL("4wq+7F$}h,K\"");
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertEquals("4wq+7F$}h,K\"", xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(graphics2D0).getTransform();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      // Undeclared exception!
      try { 
        xYDrawableAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 2790, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, 0.0, 741.2914826842173, 0.0, drawable0);
      AffineTransform affineTransform0 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(graphics2D0).getTransform();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((-288.6552957854396)).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(valueAxis1).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      xYDrawableAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 1987, (PlotRenderingInfo) null);
      assertNull(xYDrawableAnnotation0.getURL());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-317.7), (-2977.2), (-1910.0), (-1910.0), drawable0);
      xYDrawableAnnotation0.setToolTipText("drawable");
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(graphics2D0).getTransform();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      // Undeclared exception!
      try { 
        xYDrawableAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-3627.001426163), (-3627.001426163), (-3627.001426163), (-3627.001426163), drawable0);
      xYDrawableAnnotation0.hashCode();
  }
}
