/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:55:29 GMT 2019
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.Image;
import java.awt.ImageCapabilities;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.RasterFormatException;
import java.awt.image.TileObserver;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.Range;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class XYDataImageAnnotation_ESTest extends XYDataImageAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-1692.2634564491295), 7, 7, 339.6, false);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = new XYDataImageAnnotation(bufferedImage0, (-1692.2634564491295), 0.0, 1239.811635845467, 0.0, false);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertNotNull(xYDataImageAnnotation1);
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation1.getX(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertFalse(boolean0);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertEquals((-1685.2634564491295), range0.getUpperBound(), 0.01);
      assertEquals((-1692.2634564491295), range0.getLowerBound(), 0.01);
      assertEquals((-1688.7634564491295), range0.getCentralValue(), 0.01);
      assertNotNull(range0);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      
      boolean boolean1 = xYDataImageAnnotation0.equals(range0);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertEquals((-1685.2634564491295), range0.getUpperBound(), 0.01);
      assertEquals((-1692.2634564491295), range0.getLowerBound(), 0.01);
      assertEquals((-1688.7634564491295), range0.getCentralValue(), 0.01);
      assertFalse(boolean1);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-1692.2634564491295), (-458.55), 7, 339.6, false);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNotNull(xYDataImageAnnotation0);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = new XYDataImageAnnotation(bufferedImage0, 1268.6515058, 0.0, 1239.811635845467, 0.0, false);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation1.getX(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertNotNull(xYDataImageAnnotation1);
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation1.getX(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertFalse(boolean0);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertEquals((-1688.7634564491295), range0.getCentralValue(), 0.01);
      assertEquals((-1692.2634564491295), range0.getLowerBound(), 0.01);
      assertEquals((-1685.2634564491295), range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertNotNull(range0);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      
      boolean boolean1 = xYDataImageAnnotation0.equals(range0);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertEquals((-1688.7634564491295), range0.getCentralValue(), 0.01);
      assertEquals((-1692.2634564491295), range0.getLowerBound(), 0.01);
      assertEquals((-1685.2634564491295), range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertFalse(boolean1);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertTrue(boolean1 == boolean0);
      
      double double0 = xYDataImageAnnotation1.getHeight();
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation1.getX(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals(0.0, double0, 0.01);
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(7, bufferedImage0.getType());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 1268.6515058, 0.0, 1239.811635845467, 0.0, false);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(7, bufferedImage0.getType());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1239.811635845467, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getX(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(7, bufferedImage0.getType());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1239.811635845467, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      boolean boolean0 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(7, bufferedImage0.getType());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1239.811635845467, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 7, (-458.55), 7, (-458.55));
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-458.55), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = new XYDataImageAnnotation(bufferedImage0, 0.01, (-458.55), (-458.55), 7, false);
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertEquals(0.01, xYDataImageAnnotation1.getX(), 0.01);
      assertEquals((-458.55), xYDataImageAnnotation1.getY(), 0.01);
      assertEquals((-458.55), xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertNotNull(xYDataImageAnnotation1);
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-458.55), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertEquals(0.01, xYDataImageAnnotation1.getX(), 0.01);
      assertEquals((-458.55), xYDataImageAnnotation1.getY(), 0.01);
      assertEquals((-458.55), xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertFalse(boolean0);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 1268.6515058, 354.8136588257);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean0);
      
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = xYDataImageAnnotation0.hasListener(eventListener1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(781.67471723622, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertEquals(147.34896433621998, range0.getCentralValue(), 0.01);
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(1, bufferedImage1.getType());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      
      boolean boolean2 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, double2, 0.01);
      assertEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(354.8136588257, (-3239.5), (-1.0), (-825.7359340268)).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 675, plotRenderingInfo0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 1, (-1.0), 1268.6515058, 354.8136588257);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean0);
      
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = xYDataImageAnnotation0.hasListener(eventListener1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1269.6515058, range0.getUpperBound(), 0.01);
      assertEquals(635.3257529, range0.getCentralValue(), 0.01);
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(1.0, range0.getLowerBound(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      EventListener eventListener2 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean2 = xYDataImageAnnotation0.hasListener(eventListener2);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      
      boolean boolean3 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      
      boolean boolean4 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage1.createGraphics();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.clipState);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, (Rectangle2D) null, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(axisLocation0, axisLocation1);
      assertNotSame(axisLocation1, axisLocation0);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.clipState);
      assertFalse(axisLocation0.equals((Object)axisLocation1));
      assertFalse(axisLocation1.equals((Object)axisLocation0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 1268.6515058, 354.8136588257);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean0);
      
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = xYDataImageAnnotation0.hasListener(eventListener1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(781.67471723622, range0.getUpperBound(), 0.01);
      assertEquals(147.34896433621998, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertTrue(bufferedImage1.hasTileWriters());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      
      boolean boolean2 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, double2, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertSame(bufferedImage0, bufferedImage1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-1), (-968.5087601493004), (double)0, (-389.0)).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 675, plotRenderingInfo0);
      assertSame(bufferedImage0, bufferedImage1);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 1268.6515058, 354.8136588257);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(boolean0);
      
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = xYDataImageAnnotation0.hasListener(eventListener1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(range0.isNaNRange());
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertEquals(781.67471723622, range0.getUpperBound(), 0.01);
      assertEquals(147.34896433621998, range0.getCentralValue(), 0.01);
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(1, bufferedImage1.getType());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(0, bufferedImage1.getMinY());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      
      boolean boolean2 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, double2, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 675, plotRenderingInfo0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 0, 354.8136588257);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener1);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-486.97678856378), range0.getUpperBound(), 0.01);
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertEquals(0.0, range0.getLength(), 0.01);
      assertEquals((-486.97678856378), range0.getCentralValue(), 0.01);
      assertFalse(range0.isNaNRange());
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      
      boolean boolean1 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(354.8136588257, double2, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNotNull(xYDataImageAnnotation0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.addChangeListener(annotationChangeListener0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertNotNull(sunGraphics2D0);
      
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), double0, 0.01);
      
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      
      xYDataImageAnnotation0.hashCode();
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      bufferedImage0.releaseWritableTile(1, 0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      
      double double2 = xYDataImageAnnotation0.getWidth();
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), double2, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(12, bufferedImage1.getType());
      assertEquals(12, bufferedImage1.getTileWidth());
      assertEquals(12, bufferedImage1.getHeight());
      assertEquals(12, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage1.hasTileWriters());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(12, bufferedImage1.getWidth());
      assertNotNull(bufferedImage1);
      
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.getXRange();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (-2328.0) <= upper (-4656.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertNotNull(bufferedImage0);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.removeTileObserver(tileObserver0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      
      bufferedImage0.releaseWritableTile(5, (-1484));
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      
      bufferedImage0.setRGB(426, 16, (-1484), (-1484), (int[]) null, 5, 787);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 0.0, (-1.0), 1282.3049442330246, 787);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(range0.isNaNRange());
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(1282.3049442330246, range0.getLength(), 0.01);
      assertEquals(641.1524721165123, range0.getCentralValue(), 0.01);
      assertEquals(1282.3049442330246, range0.getUpperBound(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(787.0, range1.getLength(), 0.01);
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(392.5, range1.getCentralValue(), 0.01);
      assertEquals(786.0, range1.getUpperBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getType());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver1 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver1);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      
      boolean boolean1 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = (XYDataImageAnnotation)xYDataImageAnnotation0.clone();
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals(787.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getX(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals((-1.0), xYDataImageAnnotation1.getY(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertEquals(1282.3049442330246, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNotNull(xYDataImageAnnotation1);
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      double double1 = xYDataImageAnnotation1.getWidth();
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals(787.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getX(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals((-1.0), xYDataImageAnnotation1.getY(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertEquals(1282.3049442330246, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1282.3049442330246, double1, 0.01);
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      assertNotEquals(double1, double0, 0.01);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      
      boolean boolean3 = xYDataImageAnnotation1.equals((Object) null);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals(787.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(0.0, xYDataImageAnnotation1.getX(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals((-1.0), xYDataImageAnnotation1.getY(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertEquals(1282.3049442330246, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1282.3049442330246, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean3);
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      
      bufferedImage0.setRGB((-1488), 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-1488), (-2571.94685), 787, (-2355.8), false);
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals((-1488.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-2355.8), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2571.94685), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNotNull(xYDataImageAnnotation0);
      
      double double0 = xYDataImageAnnotation0.getWidth();
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals((-1488.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-2355.8), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2571.94685), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(787.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(787.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertNotNull(sunGraphics2D0);
      
      SunGraphics2D sunGraphics2D1 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertNotSame(sunGraphics2D1, sunGraphics2D0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, sunGraphics2D1.antialiasHint);
      assertEquals(0, sunGraphics2D1.constrainX);
      assertEquals(1, sunGraphics2D1.interpolationType);
      assertEquals(0, sunGraphics2D1.paintState);
      assertEquals(0, sunGraphics2D1.constrainY);
      assertEquals(0, sunGraphics2D1.strokeHint);
      assertEquals(1, sunGraphics2D1.pixel);
      assertEquals(0, sunGraphics2D1.textAntialiasHint);
      assertEquals(0, sunGraphics2D1.renderHint);
      assertEquals((-1), sunGraphics2D1.eargb);
      assertEquals(0, sunGraphics2D1.clipState);
      assertEquals(0, sunGraphics2D1.transY);
      assertEquals(0, sunGraphics2D1.compositeState);
      assertEquals(0, sunGraphics2D1.strokeState);
      assertEquals(140, sunGraphics2D1.lcdTextContrast);
      assertEquals(0, sunGraphics2D1.transX);
      assertEquals(0, sunGraphics2D1.transformState);
      assertNotNull(sunGraphics2D1);
      assertFalse(sunGraphics2D1.equals((Object)sunGraphics2D0));
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-2328.0), double0, 0.01);
      
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      
      xYDataImageAnnotation0.hashCode();
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      
      double double1 = xYDataImageAnnotation0.getWidth();
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-2328.0), double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      boolean boolean0 = xYDataImageAnnotation0.equals(bufferedImage0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean0);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = (XYDataImageAnnotation)xYDataImageAnnotation0.clone();
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation1.getY(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getX(), 0.01);
      assertFalse(xYDataImageAnnotation1.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation1.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertNotNull(xYDataImageAnnotation1);
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      boolean boolean1 = xYDataImageAnnotation0.equals(xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation1.getY(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getX(), 0.01);
      assertFalse(xYDataImageAnnotation1.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation1.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertTrue(boolean1);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      assertFalse(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.getXRange();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (-2328.0) <= upper (-4656.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 12, 12, 12, 12, false);
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(12.0, double0, 0.01);
      
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.addEntity(plotRenderingInfo0, shape0, 12, "org.jfree.chart.plot.CrosshairState", "YZr`1F5K!#9=_z=Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertNotNull(sunGraphics2D0);
      
      GraphicsConfiguration graphicsConfiguration0 = mock(GraphicsConfiguration.class, new ViolatedAssumptionAnswer());
      ImageCapabilities imageCapabilities0 = bufferedImage0.getCapabilities(graphicsConfiguration0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertFalse(imageCapabilities0.isAccelerated());
      assertFalse(imageCapabilities0.isTrueVolatile());
      assertNotNull(imageCapabilities0);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), double0, 0.01);
      
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = (XYDataImageAnnotation)xYDataImageAnnotation0.clone();
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getX(), 0.01);
      assertFalse(xYDataImageAnnotation1.getNotify());
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals(12.0, xYDataImageAnnotation1.getY(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertNotNull(xYDataImageAnnotation1);
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.addEntity(plotRenderingInfo0, shape0, 12, "org.jfree.chart.plot.CrosshairState", "YZr`1F5K!#9=_z=Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.AbstractXYAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 1268.6515058, 354.8136588257);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertEquals(147.34896433621998, range0.getCentralValue(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(781.67471723622, range0.getUpperBound(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertFalse(range1.isNaNRange());
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      XYDataImageAnnotation xYDataImageAnnotation1 = (XYDataImageAnnotation)xYDataImageAnnotation0.clone();
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation1.getY(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertEquals(354.8136588257, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation1.getX(), 0.01);
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertNotNull(xYDataImageAnnotation1);
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      
      boolean boolean0 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean0);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      
      boolean boolean1 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean1);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean2);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-1692.2634564491295), (-458.55), 7, 339.6, false);
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-1688.7634564491295), range0.getCentralValue(), 0.01);
      assertEquals((-1692.2634564491295), range0.getLowerBound(), 0.01);
      assertEquals((-1685.2634564491295), range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-458.55), range1.getLowerBound(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals((-118.94999999999999), range1.getUpperBound(), 0.01);
      assertEquals((-288.75), range1.getCentralValue(), 0.01);
      assertEquals(339.6, range1.getLength(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), 1.0, 1268.65151, 354.8136588257);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.65151, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.65151, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.65151, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.65151, range0.getLength(), 0.01);
      assertEquals(147.34896643621994, range0.getCentralValue(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertEquals(781.6747214362199, range0.getUpperBound(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.65151, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertEquals(178.40682941285, range1.getCentralValue(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(355.8136588257, range1.getUpperBound(), 0.01);
      assertEquals(1.0, range1.getLowerBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinX());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getWidth());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.65151, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1.0, double0, 0.01);
      
      // Undeclared exception!
      try { 
        bufferedImage0.getSubimage(1, (-1488), 0, 787);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 12;
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      String string0 = "org.jfree.chart.plot.CrosshairState";
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(boolean0);
      
      int int1 = xYDataImageAnnotation0.hashCode();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(int1 == int0);
      
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, (ValueAxis) null, (ValueAxis) null, 12, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYDataImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 7, (-458.55), 7, 339.6, false);
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(7.0, xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNotNull(xYDataImageAnnotation0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(7, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getTileHeight());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(7.0, xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertEquals(10.5, range0.getCentralValue(), 0.01);
      assertEquals(7.0, range0.getLowerBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(14.0, range0.getUpperBound(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), (-1.0), 354.8136588257);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-1.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-1.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.getXRange();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (-486.97678856378) <= upper (-487.97678856378).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 12;
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      String string0 = "org.jfree.chart.plot.CrosshairState";
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), double0, 0.01);
      
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, (ValueAxis) null, (ValueAxis) null, 12, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYDataImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 12;
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      String string0 = "org.jfree.chart.plot.CrosshairState";
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_LEFT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = null;
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.getYRange();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (12.0) <= upper (-2316.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 12;
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      String string0 = "org.jfree.chart.plot.CrosshairState";
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(12, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinTileX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, (ValueAxis) null, (ValueAxis) null, 12, plotRenderingInfo1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYDataImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 12;
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getTileHeight());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNotNull(xYDataImageAnnotation0);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      String string0 = "org.jfree.chart.plot.CrosshairState";
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertNotNull(sunGraphics2D0);
      
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      doReturn((AxisLocation) null).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(12, bufferedImage0.getType());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertFalse(xYDataImageAnnotation0.getNotify());
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, (ValueAxis) null, (ValueAxis) null, 12, plotRenderingInfo1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 1268.6515058, 354.8136588257);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(781.67471723622, range0.getUpperBound(), 0.01);
      assertEquals(147.34896433621998, range0.getCentralValue(), 0.01);
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertFalse(range1.isNaNRange());
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(1, bufferedImage1.getType());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getMinX());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      
      boolean boolean1 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getMinY());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYDataImageAnnotation xYDataImageAnnotation0 = null;
      try {
        xYDataImageAnnotation0 = new XYDataImageAnnotation((Image) null, (-517.4456014), (-517.4456014), (-517.4456014), (-517.4456014), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYDataImageAnnotation xYDataImageAnnotation0 = null;
      try {
        xYDataImageAnnotation0 = new XYDataImageAnnotation((Image) null, (-495.691261211), 0.0, (-495.691261211), 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 1268.6515058, 354.8136588257);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(boolean0);
      
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = xYDataImageAnnotation0.hasListener(eventListener1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(781.67471723622, range0.getUpperBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals((-486.97678856378), range0.getLowerBound(), 0.01);
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertEquals(147.34896433621998, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(1, bufferedImage1.getTileWidth());
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      
      boolean boolean2 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(354.8136588257, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      double double2 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(354.8136588257, double2, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 675, plotRenderingInfo0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals((-486.97678856378), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNotNull(bufferedImage0);
      
      bufferedImage0.releaseWritableTile(0, (-1488));
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 1, (-1.0), 1268.6515058, 354.8136588257);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertNotNull(xYDataImageAnnotation0);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = xYDataImageAnnotation0.hasListener(eventListener0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean0);
      
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = xYDataImageAnnotation0.hasListener(eventListener1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1.0, range0.getLowerBound(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(1268.6515058, range0.getLength(), 0.01);
      assertEquals(635.3257529, range0.getCentralValue(), 0.01);
      assertEquals(1269.6515058, range0.getUpperBound(), 0.01);
      assertNotNull(range0);
      
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertNotSame(range1, range0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), range1.getLowerBound(), 0.01);
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      assertFalse(range1.isNaNRange());
      assertEquals(354.8136588257, range1.getLength(), 0.01);
      assertEquals(353.8136588257, range1.getUpperBound(), 0.01);
      assertNotNull(range1);
      assertFalse(range1.equals((Object)range0));
      
      double double0 = xYDataImageAnnotation0.getY();
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-1.0), double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0, bufferedImage1.getMinY());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage1.getMinX());
      assertNotNull(bufferedImage1);
      
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      EventListener eventListener2 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean2 = xYDataImageAnnotation0.hasListener(eventListener2);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      bufferedImage0.addTileObserver(tileObserver0);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      
      boolean boolean3 = xYDataImageAnnotation0.equals((Object) null);
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      boolean boolean4 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertSame(bufferedImage0, bufferedImage1);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(354.8136588257, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage1.createGraphics();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0, bufferedImage1.getMinY());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertNotNull(sunGraphics2D0);
      
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_LEFT;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation1).when(xYPlot0).getRangeAxisLocation();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn((double)0, 51.12, (-1656.709202573956), 352.868503).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, (Rectangle2D) null, valueAxis0, valueAxis0, 10, plotRenderingInfo0);
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(axisLocation0, axisLocation1);
      assertNotSame(axisLocation1, axisLocation0);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinX());
      assertTrue(bufferedImage0.hasTileWriters());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1, bufferedImage0.getTileWidth());
      assertEquals(1, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(1, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(1.0, xYDataImageAnnotation0.getX(), 0.01);
      assertEquals((-1.0), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(1, bufferedImage1.getType());
      assertEquals(1, bufferedImage1.getTileHeight());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertEquals(1, bufferedImage1.getWidth());
      assertEquals(1, bufferedImage1.getHeight());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(1, bufferedImage1.getTileWidth());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(0, bufferedImage1.getMinY());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertFalse(axisLocation0.equals((Object)axisLocation1));
      assertFalse(axisLocation1.equals((Object)axisLocation0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-2328.0), 12, (-2328.0), (-2328.0), false);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.addChangeListener(annotationChangeListener0);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(1, sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertNotNull(sunGraphics2D0);
      
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      double double0 = xYDataImageAnnotation0.getX();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-2328.0), double0, 0.01);
      
      xYDataImageAnnotation0.setNotify(false);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      
      xYDataImageAnnotation0.hashCode();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      
      double double1 = xYDataImageAnnotation0.getHeight();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-2328.0), double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      bufferedImage0.releaseWritableTile(1, 0);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      
      double double2 = xYDataImageAnnotation0.getWidth();
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals((-2328.0), double2, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      assertSame(bufferedImage0, bufferedImage1);
      assertSame(bufferedImage1, bufferedImage0);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertEquals(0, bufferedImage1.getMinY());
      assertEquals(0, bufferedImage1.getMinX());
      assertEquals(1, bufferedImage1.getNumXTiles());
      assertEquals(12, bufferedImage1.getHeight());
      assertEquals(0, bufferedImage1.getMinTileX());
      assertEquals(12, bufferedImage1.getTileWidth());
      assertEquals(1, bufferedImage1.getNumYTiles());
      assertEquals(0, bufferedImage1.getTileGridXOffset());
      assertEquals(0, bufferedImage1.getTileGridYOffset());
      assertFalse(bufferedImage1.isAlphaPremultiplied());
      assertEquals(12, bufferedImage1.getTileHeight());
      assertEquals(1, bufferedImage1.getTransparency());
      assertEquals(0, bufferedImage1.getMinTileY());
      assertTrue(bufferedImage1.hasTileWriters());
      assertEquals(12, bufferedImage1.getWidth());
      assertEquals(0.5F, bufferedImage1.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage1.getType());
      assertNotNull(bufferedImage1);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = (XYDataImageAnnotation)xYDataImageAnnotation0.clone();
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation1.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation1.getY(), 0.01);
      assertFalse(xYDataImageAnnotation1.getNotify());
      assertNotNull(xYDataImageAnnotation1);
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation1);
      assertSame(bufferedImage0, bufferedImage1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(12, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(12, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(12, bufferedImage0.getTileWidth());
      assertEquals(12, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(1, bufferedImage0.getTransparency());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(12, bufferedImage0.getTileHeight());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals((-2328.0), xYDataImageAnnotation0.getX(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertEquals(12.0, xYDataImageAnnotation0.getY(), 0.01);
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertFalse(xYDataImageAnnotation0.getNotify());
      assertEquals((-2328.0), xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation0.getHeight(), 0.01);
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals((-2328.0), xYDataImageAnnotation1.getX(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getWidth(), 0.01);
      assertEquals((-2328.0), xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(12.0, xYDataImageAnnotation1.getY(), 0.01);
      assertFalse(xYDataImageAnnotation1.getNotify());
      assertTrue(boolean0);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertTrue(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      // Undeclared exception!
      try { 
        xYDataImageAnnotation0.getXRange();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (-2328.0) <= upper (-4656.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-1692.2634564491295), (-458.55), 7, 339.6, false);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertNotNull(xYDataImageAnnotation0);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = new XYDataImageAnnotation(bufferedImage0, 1268.6515058, 0.0, 1239.811635845467, 0.0, false);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1268.6515058, xYDataImageAnnotation1.getX(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertNotNull(xYDataImageAnnotation1);
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      boolean boolean0 = xYDataImageAnnotation0.equals(xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertEquals(1268.6515058, xYDataImageAnnotation1.getX(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertFalse(boolean0);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertEquals((-1685.2634564491295), range0.getUpperBound(), 0.01);
      assertEquals((-1692.2634564491295), range0.getLowerBound(), 0.01);
      assertEquals((-1688.7634564491295), range0.getCentralValue(), 0.01);
      assertNotNull(range0);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      
      boolean boolean1 = xYDataImageAnnotation0.equals(range0);
      assertNotSame(xYDataImageAnnotation0, xYDataImageAnnotation1);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertFalse(xYDataImageAnnotation0.getIncludeInDataBounds());
      assertTrue(xYDataImageAnnotation0.getNotify());
      assertEquals(7.0, xYDataImageAnnotation0.getWidth(), 0.01);
      assertEquals(339.6, xYDataImageAnnotation0.getHeight(), 0.01);
      assertNull(xYDataImageAnnotation0.getURL());
      assertNull(xYDataImageAnnotation0.getToolTipText());
      assertEquals((-458.55), xYDataImageAnnotation0.getY(), 0.01);
      assertEquals((-1692.2634564491295), xYDataImageAnnotation0.getX(), 0.01);
      assertFalse(range0.isNaNRange());
      assertEquals(7.0, range0.getLength(), 0.01);
      assertEquals((-1685.2634564491295), range0.getUpperBound(), 0.01);
      assertEquals((-1692.2634564491295), range0.getLowerBound(), 0.01);
      assertEquals((-1688.7634564491295), range0.getCentralValue(), 0.01);
      assertFalse(boolean1);
      assertFalse(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = xYDataImageAnnotation1.getIncludeInDataBounds();
      assertNotSame(xYDataImageAnnotation1, xYDataImageAnnotation0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(7, bufferedImage0.getType());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(7, bufferedImage0.getWidth());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertTrue(bufferedImage0.isAlphaPremultiplied());
      assertEquals(7, bufferedImage0.getTileHeight());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(7, bufferedImage0.getTileWidth());
      assertEquals(7, bufferedImage0.getHeight());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(1268.6515058, xYDataImageAnnotation1.getX(), 0.01);
      assertTrue(xYDataImageAnnotation1.getNotify());
      assertFalse(xYDataImageAnnotation1.getIncludeInDataBounds());
      assertNull(xYDataImageAnnotation1.getToolTipText());
      assertEquals(0.0, xYDataImageAnnotation1.getHeight(), 0.01);
      assertEquals(1239.811635845467, xYDataImageAnnotation1.getWidth(), 0.01);
      assertNull(xYDataImageAnnotation1.getURL());
      assertEquals(0.0, xYDataImageAnnotation1.getY(), 0.01);
      assertFalse(boolean2);
      assertFalse(xYDataImageAnnotation1.equals((Object)xYDataImageAnnotation0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.removeTileObserver(tileObserver0);
      bufferedImage0.releaseWritableTile(0, (-1488));
      bufferedImage0.setRGB(426, 16, (-1488), (-1488), (int[]) null, 0, 787);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, (-486.97678856378), (-1.0), 1268.6515058, 354.8136588257);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.hasListener(eventListener0);
      Range range0 = xYDataImageAnnotation0.getXRange();
      assertEquals(147.34896433621998, range0.getCentralValue(), 0.01);
      
      xYDataImageAnnotation0.getYRange();
      BufferedImage bufferedImage1 = (BufferedImage)xYDataImageAnnotation0.getImage();
      TileObserver tileObserver1 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.addTileObserver(tileObserver1);
      boolean boolean0 = xYDataImageAnnotation0.equals((Object) null);
      boolean boolean1 = xYDataImageAnnotation0.getIncludeInDataBounds();
      assertTrue(boolean1 == boolean0);
      
      XYDataImageAnnotation xYDataImageAnnotation1 = (XYDataImageAnnotation)xYDataImageAnnotation0.clone();
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage1.createGraphics();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      doReturn(axisLocation0).when(xYPlot0).getRangeAxisLocation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(valueAxis0).valueToJava2D(anyDouble() , any(java.awt.geom.Rectangle2D.class) , any(org.jfree.chart.ui.RectangleEdge.class));
      Range range1 = xYDataImageAnnotation0.getYRange();
      assertEquals(176.40682941285, range1.getCentralValue(), 0.01);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYDataImageAnnotation0.draw(sunGraphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, (-1488), plotRenderingInfo0);
      assertEquals(1268.6515058, xYDataImageAnnotation0.getWidth(), 0.01);
      assertTrue(xYDataImageAnnotation0.equals((Object)xYDataImageAnnotation1));
      assertEquals(354.8136588257, xYDataImageAnnotation0.getHeight(), 0.01);
  }
}
