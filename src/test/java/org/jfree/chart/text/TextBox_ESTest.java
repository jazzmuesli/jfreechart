/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:34:39 GMT 2019
 */

package org.jfree.chart.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.util.UnitType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class TextBox_ESTest extends TextBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.getTextBlock();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBox textBox0 = new TextBox("");
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      
      textBox0.setShadowYOffset(0.0);
      double double0 = textBox0.getShadowYOffset();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setShadowYOffset((-767.9656380875));
      double double0 = textBox0.getShadowYOffset();
      assertEquals((-767.9656380875), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      
      textBox0.setShadowXOffset(0.0);
      double double0 = textBox0.getShadowXOffset();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      textBox0.setShadowXOffset((-2083.807074835));
      double double0 = textBox0.getShadowXOffset();
      assertEquals((-2083.807074835), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextBox textBox0 = new TextBox("2 {@z ");
      textBox0.setShadowPaint((Paint) null);
      textBox0.getShadowPaint();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextBox textBox0 = new TextBox("9%KW)s.j@U%pSBLvD0");
      textBox0.setOutlineStroke((Stroke) null);
      textBox0.getOutlineStroke();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextBox textBox0 = new TextBox("F}_w");
      textBox0.setOutlinePaint((Paint) null);
      textBox0.getOutlinePaint();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setInteriorGap((RectangleInsets) null);
      textBox0.getInteriorGap();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 999.73160058, 91.131262548, 999.73160058, 0.0);
      textBox0.setInteriorGap(rectangleInsets0);
      textBox0.getInteriorGap();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextBox textBox0 = new TextBox("");
      RectangleInsets rectangleInsets0 = new RectangleInsets(648.852097, 648.852097, (-1.7976931348623157E308), (-1455.699901561183));
      textBox0.setInteriorGap(rectangleInsets0);
      textBox0.getInteriorGap();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextBox textBox0 = new TextBox("2 {@z ");
      textBox0.setBackgroundPaint((Paint) null);
      textBox0.getBackgroundPaint();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextBox textBox0 = new TextBox("org.jfree.data.general.DatasetGroup");
      // Undeclared exception!
      try { 
        textBox0.getHeight((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      
      textBox0.setShadowYOffset(0.0);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      
      textBox0.setShadowXOffset(0.0);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setShadowPaint((Paint) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setBackgroundPaint((Paint) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setInteriorGap((RectangleInsets) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TextBox textBox0 = new TextBox("data");
      textBox0.setOutlineStroke((Stroke) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextBox textBox0 = new TextBox("F}_w");
      textBox0.setOutlinePaint((Paint) null);
      textBox0.hashCode();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox1 = new TextBox(textBlock0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox1 = new TextBox(textBlock0);
      textBox1.setShadowYOffset(2866.96);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2866.96, textBox1.getShadowYOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox1 = new TextBox(textBlock0);
      textBox1.setShadowXOffset((-863.773));
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals((-863.773), textBox1.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBox textBox1 = new TextBox();
      assertTrue(textBox1.equals((Object)textBox0));
      
      Color color0 = Color.CYAN;
      textBox1.setBackgroundPaint(color0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertFalse(textBox1.equals((Object)textBox0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox1 = new TextBox(textBlock0);
      Color color0 = Color.red;
      textBox1.setOutlinePaint(color0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      TextBox textBox1 = new TextBox(textBlock0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      boolean boolean0 = textBox0.equals(textBox0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertTrue(boolean0);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      Paint paint0 = textBox0.getShadowPaint();
      boolean boolean0 = textBox0.equals(paint0);
      assertFalse(boolean0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setShadowPaint((Paint) null);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      textBox0.setBackgroundPaint((Paint) null);
      // Undeclared exception!
      try { 
        textBox0.draw((Graphics2D) null, 1233.575F, 1233.575F, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
      try { 
        textBox0.draw((Graphics2D) null, 3731.0F, 3512.0F, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setShadowPaint((Paint) null);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        textBox0.draw((Graphics2D) null, 1233.575F, 1233.575F, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextBox", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TextBox textBox0 = new TextBox((String) null);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      double double0 = textBox0.getHeight((Graphics2D) null);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, double0, 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TextBox textBox0 = new TextBox("xBjl#iZ9xpW");
      Color color0 = (Color)textBox0.getBackgroundPaint();
      textBox0.setBackgroundPaint(color0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals((-64), color0.getRGB());
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setTextBlock(textBlock0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      double double0 = textBox0.getShadowXOffset();
      assertEquals(2.0, double0, 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      RectangleInsets rectangleInsets0 = textBox0.getInteriorGap();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(3.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(1.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(3.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(1.0, rectangleInsets0.getBottom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      textBox0.getTextBlock();
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      BasicStroke basicStroke0 = (BasicStroke)textBox0.getOutlineStroke();
      textBox0.setOutlineStroke(basicStroke0);
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.getOutlinePaint();
      assertEquals(2.0, textBox0.getShadowYOffset(), 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      double double0 = textBox0.getShadowYOffset();
      assertEquals(2.0, double0, 0.01);
      assertEquals(2.0, textBox0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.setInteriorGap((RectangleInsets) null);
      TextBox textBox1 = new TextBox(textBlock0);
      boolean boolean0 = textBox0.equals(textBox1);
      assertEquals(2.0, textBox1.getShadowXOffset(), 0.01);
      assertFalse(boolean0);
      assertEquals(2.0, textBox1.getShadowYOffset(), 0.01);
  }
}
