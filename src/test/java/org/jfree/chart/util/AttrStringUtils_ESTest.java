/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:10:16 GMT 2019
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.text.AttributedCharacterIterator;
import java.text.AttributedString;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ui.TextAnchor;
import org.jfree.chart.util.AttrStringUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AttrStringUtils_ESTest extends AttrStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a').when(attributedCharacterIterator0).current();
      doReturn(0, 0).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(0, 0).when(attributedCharacterIterator0).getEndIndex();
      doReturn(0).when(attributedCharacterIterator0).getIndex();
      doReturn('a').when(attributedCharacterIterator0).setIndex(anyInt());
      AttributedString attributedString0 = new AttributedString(attributedCharacterIterator0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 3429.935F, 3429.935F, textAnchor0, 0.0, (TextAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AttributedString attributedString0 = new AttributedString("CM0yM&y^sT{[");
      Object object0 = new Object();
      AffineTransform affineTransform0 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null, (AffineTransform) null).when(affineTransform0).createInverse();
      doReturn(0.0).when(affineTransform0).getScaleX();
      doReturn(0.0).when(affineTransform0).getScaleY();
      doReturn(0.0).when(affineTransform0).getShearX();
      doReturn(0.0).when(affineTransform0).getShearY();
      doReturn(0).when(affineTransform0).getType();
      doReturn(false, false).when(affineTransform0).isIdentity();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn(attributedString0, "CM0yM&y^sT{[", (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn("CM0yM&y^sT{[", object0, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      doReturn(affineTransform0, (AffineTransform) null).when(fontRenderContext0).getTransform();
      doReturn(false).when(fontRenderContext0).isTransformed();
      AffineTransform affineTransform1 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      doReturn(affineTransform1).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 0.0F, (-1.0F), 0.0, (-1.0F), (-1.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AttributedString attributedString0 = new AttributedString("TextAnchor.CENTER_LEFT");
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      Object object0 = new Object();
      AffineTransform affineTransform0 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null, (AffineTransform) null).when(affineTransform0).createInverse();
      doReturn(0.0).when(affineTransform0).getScaleX();
      doReturn(0.0).when(affineTransform0).getScaleY();
      doReturn(0.0).when(affineTransform0).getShearX();
      doReturn(0.0).when(affineTransform0).getShearY();
      doReturn(0).when(affineTransform0).getType();
      doReturn(false, false).when(affineTransform0).isIdentity();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator_Attribute0, object0, (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn((Object) null, attributedString0, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      doReturn(affineTransform0, (AffineTransform) null).when(fontRenderContext0).getTransform();
      doReturn(false).when(fontRenderContext0).isTransformed();
      AffineTransform affineTransform1 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      doReturn(affineTransform1).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 1.0, (-1.0F), (-1.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttrStringUtils.getTextBounds((AttributedString) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AttrStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AttributedString attributedString0 = new AttributedString("2e#K;jJ(LV>&Lg=I2");
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, (Graphics2D) null, 0.0F, 0.0F, textAnchor0, (double) 0.0F, textAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AttrStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, graphics2D0, (-1.0F), (-1.0F), textAnchor0, (double) (-1.0F), textAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a').when(attributedCharacterIterator0).current();
      doReturn(0, 0).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(0, 0).when(attributedCharacterIterator0).getEndIndex();
      doReturn(0).when(attributedCharacterIterator0).getIndex();
      doReturn('a').when(attributedCharacterIterator0).setIndex(anyInt());
      AttributedString attributedString0 = new AttributedString(attributedCharacterIterator0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 1.0F, 1.0F, textAnchor0, 2.0, 0.0F, (-1659.8713F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = TextAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, graphics2D0, 0.0F, 313.8F, textAnchor0, (double) 313.8F, (-251.216F), (-1.0F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a').when(attributedCharacterIterator0).current();
      doReturn(0, 0).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(0, 0).when(attributedCharacterIterator0).getEndIndex();
      doReturn(0).when(attributedCharacterIterator0).getIndex();
      doReturn('a').when(attributedCharacterIterator0).setIndex(anyInt());
      AttributedString attributedString0 = new AttributedString(attributedCharacterIterator0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      doReturn((AffineTransform) null).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, (-189.46269F), (-384.8F), (-4837.574692904173), (-189.46269F), (-189.46269F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, graphics2D0, 536.922F, 536.922F, 0.0, 536.922F, 1818.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, Integer> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Integer>();
      AttributedString attributedString0 = new AttributedString("text", hashMap0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      doReturn((AffineTransform) null).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 505.1347498223, (-1.0F), 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, (Graphics2D) null, (-1440.93706), 0.0F, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AttributedString attributedString0 = new AttributedString("*2$t<dZWG#~['by!X");
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute1 = AttributedCharacterIterator.Attribute.LANGUAGE;
      Object object0 = new Object();
      AffineTransform affineTransform0 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null, (AffineTransform) null).when(affineTransform0).createInverse();
      doReturn(0.0).when(affineTransform0).getScaleX();
      doReturn(0.0).when(affineTransform0).getScaleY();
      doReturn(0.0).when(affineTransform0).getShearX();
      doReturn(0.0).when(affineTransform0).getShearY();
      doReturn(0).when(affineTransform0).getType();
      doReturn(false, false).when(affineTransform0).isIdentity();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator_Attribute0, attributedCharacterIterator_Attribute1, (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn("*2$t<dZWG#~['by!X", object0, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      doReturn(affineTransform0, (AffineTransform) null).when(fontRenderContext0).getTransform();
      doReturn(false).when(fontRenderContext0).isTransformed();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, (-623.89557F), (-623.89557F), textAnchor0, 1487.298212, (-2074.0427F), (-623.89557F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AttributedString attributedString0 = new AttributedString("");
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      // Undeclared exception!
      try { 
        AttrStringUtils.getTextBounds(attributedString0, graphics2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a').when(attributedCharacterIterator0).current();
      doReturn(0).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(0).when(attributedCharacterIterator0).getEndIndex();
      doReturn(0).when(attributedCharacterIterator0).getIndex();
      doReturn('a').when(attributedCharacterIterator0).setIndex(anyInt());
      AttributedString attributedString0 = new AttributedString(attributedCharacterIterator0, 0, 0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      doReturn((AffineTransform) null).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, (double) 0, (float) 0, (float) 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }
}
