/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:15:35 GMT 2019
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Paint;
import javax.swing.JEditorPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.PaintUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class PaintUtils_ESTest extends PaintUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Color color0 = PaintUtils.stringToColor("upP>I$nD`p(m<3bgCk");
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Color color0 = PaintUtils.stringToColor("LIGHT_GRAY");
      assertEquals((-4144960), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        PaintUtils.colorToString((Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.PaintUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Color color0 = PaintUtils.stringToColor((String) null);
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Color color0 = Color.orange;
      String string0 = PaintUtils.colorToString(color0);
      assertEquals("ORANGE", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Color color0 = new Color(753, true);
      String string0 = PaintUtils.colorToString(color0);
      assertEquals("#0002f1", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Color color0 = Color.orange;
      JEditorPane jEditorPane0 = new JEditorPane("ORANGE", "1");
      Color color1 = jEditorPane0.getSelectedTextColor();
      GradientPaint gradientPaint0 = new GradientPaint((-1.0F), 2601.0F, color0, (-558.0F), 2601.0F, color1, true);
      boolean boolean0 = PaintUtils.equal(gradientPaint0, color0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Color color0 = Color.orange;
      JEditorPane jEditorPane0 = new JEditorPane("ORANGE", "1");
      Color color1 = jEditorPane0.getSelectedTextColor();
      boolean boolean0 = PaintUtils.equal(color0, color1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Color color0 = Color.orange;
      boolean boolean0 = PaintUtils.equal((Paint) null, color0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Color color0 = Color.pink;
      boolean boolean0 = PaintUtils.equal(color0, color0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Color color0 = Color.RED;
      boolean boolean0 = PaintUtils.equal(color0, (Paint) null);
      assertFalse(boolean0);
  }
}
