/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:23:42 GMT 2019
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.jfree.chart.ui.Drawable;
import org.jfree.chart.util.ExportUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ExportUtils_ESTest extends ExportUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      // Undeclared exception!
      try { 
        ExportUtils.writeAsJPEG(drawable0, 482, 2, file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      // Undeclared exception!
      try { 
        ExportUtils.writeAsPNG(drawable0, 100, 100, file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExportUtils.writeAsPNG((Drawable) null, (-1), (-1), (File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-1) and height (-1) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn("").when(file0).getAbsolutePath();
      try { 
        ExportUtils.writeAsPNG(drawable0, 3, 1, file0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      MockFile mockFile0 = new MockFile("|M+kN39e", "|M+kN39e");
      // Undeclared exception!
      try { 
        ExportUtils.writeAsJPEG(drawable0, 2070, 2070, mockFile0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ExportUtils.writeAsJPEG(drawable0, (-4080), (-1833), (File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-4080) and height (-1833) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      MockFile mockFile0 = new MockFile("", "");
      try { 
        ExportUtils.writeAsJPEG(drawable0, 1944, 1944, mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ExportUtils.writeAsPDF(drawable0, 0, 0, file0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // OrsonPDF is not present on the classpath.
         //
         verifyException("org.jfree.chart.util.ExportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ExportUtils.writeAsSVG(drawable0, (-2599), 0, (File) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // JFreeSVG is not present on the classpath.
         //
         verifyException("org.jfree.chart.util.ExportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = ExportUtils.isOrsonPDFAvailable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = ExportUtils.isJFreeSVGAvailable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(file0).getAbsolutePath();
      // Undeclared exception!
      try { 
        ExportUtils.writeAsPNG(drawable0, 18, 1, file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExportUtils exportUtils0 = new ExportUtils();
  }
}
