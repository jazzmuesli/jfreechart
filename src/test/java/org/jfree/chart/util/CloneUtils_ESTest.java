/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:16:27 GMT 2019
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.util.CloneUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CloneUtils_ESTest extends CloneUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        CloneUtils.cloneMapValues((Map) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        CloneUtils.cloneList((List<?>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StandardChartTheme standardChartTheme0 = new StandardChartTheme("L*:39{Vu(,y}Eg~g)kw");
      StandardChartTheme standardChartTheme1 = (StandardChartTheme)CloneUtils.clone(standardChartTheme0);
      assertEquals("L*:39{Vu(,y}Eg~g)kw", standardChartTheme1.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = CloneUtils.clone((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CloneUtils cloneUtils0 = new CloneUtils();
      try { 
        CloneUtils.clone(cloneUtils0);
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Object without clone() method is impossible.
         //
         verifyException("org.jfree.chart.util.CloneUtils", e);
      }
  }
}
