/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:01:52 GMT 2019
 */

package org.jfree.chart.urls;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.util.Locale;
import javax.swing.JPopupMenu;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.urls.TimeSeriesURLGenerator;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TimeSeriesURLGenerator_ESTest extends TimeSeriesURLGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "^\"fR\"/]E(k}]\u0007#5", "", "=");
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[8];
      histogramDataset0.addSeries((Comparable) "=", doubleArray0, 2704);
      String string0 = timeSeriesURLGenerator0.generateURL(histogramDataset0, 0, 1297);
      assertEquals("^\"fR\"/]E(k}]\u0007#5?=java.lang.String%400000002709&amp;==1%2F1%2F70+12%3A00+AM", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "P^yx1hw<=`'<?)", "P^yx1hw<=`'<?)", "sH[4S");
      // Undeclared exception!
      try { 
        timeSeriesURLGenerator0.generateURL((XYDataset) null, 3180, 1967);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.TimeSeriesURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      DateFormat dateFormat0 = DateFormat.getDateInstance(0, locale0);
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "", "", "");
      String string0 = timeSeriesURLGenerator0.getSeriesParameterName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      DateFormat dateFormat0 = DateFormat.getDateInstance(0, locale0);
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "", "", "");
      String string0 = timeSeriesURLGenerator0.getPrefix();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      DateFormat dateFormat0 = DateFormat.getDateInstance(0, locale0);
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "", "", "");
      String string0 = timeSeriesURLGenerator0.getItemParameterName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      mockSimpleDateFormat0.setLenient(false);
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(mockSimpleDateFormat0, "yogb~`j?D", "", "{*sC]1N'");
      timeSeriesURLGenerator0.getDateFormat();
      assertEquals("yogb~`j?D", timeSeriesURLGenerator0.getPrefix());
      assertEquals("", timeSeriesURLGenerator0.getSeriesParameterName());
      assertEquals("{*sC]1N'", timeSeriesURLGenerator0.getItemParameterName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        timeSeriesURLGenerator0.generateURL(defaultWindDataset0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = null;
      try {
        timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, (String) null, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'prefix' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      TimeSeriesURLGenerator timeSeriesURLGenerator1 = new TimeSeriesURLGenerator();
      boolean boolean0 = timeSeriesURLGenerator0.equals(timeSeriesURLGenerator1);
      assertTrue(boolean0);
      assertEquals("series", timeSeriesURLGenerator1.getSeriesParameterName());
      assertEquals("item", timeSeriesURLGenerator1.getItemParameterName());
      assertEquals("index.html", timeSeriesURLGenerator1.getPrefix());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "sP", "sP", "sP");
      TimeSeriesURLGenerator timeSeriesURLGenerator1 = new TimeSeriesURLGenerator();
      boolean boolean0 = timeSeriesURLGenerator0.equals(timeSeriesURLGenerator1);
      assertFalse(boolean0);
      assertEquals("series", timeSeriesURLGenerator1.getSeriesParameterName());
      assertEquals("index.html", timeSeriesURLGenerator1.getPrefix());
      assertEquals("item", timeSeriesURLGenerator1.getItemParameterName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      boolean boolean0 = timeSeriesURLGenerator0.equals(timeSeriesURLGenerator0);
      assertTrue(boolean0);
      assertEquals("item", timeSeriesURLGenerator0.getItemParameterName());
      assertEquals("index.html", timeSeriesURLGenerator0.getPrefix());
      assertEquals("series", timeSeriesURLGenerator0.getSeriesParameterName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "P^yx1hw<=`'<?)", "P^yx1hw<=`'<?)", "sH[4S");
      JPopupMenu.Separator jPopupMenu_Separator0 = new JPopupMenu.Separator();
      boolean boolean0 = timeSeriesURLGenerator0.equals(jPopupMenu_Separator0);
      assertFalse(boolean0);
      assertEquals("sH[4S", timeSeriesURLGenerator0.getItemParameterName());
      assertEquals("P^yx1hw<=`'<?)", timeSeriesURLGenerator0.getPrefix());
      assertEquals("P^yx1hw<=`'<?)", timeSeriesURLGenerator0.getSeriesParameterName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[1];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset((Comparable) null, oHLCDataItemArray0);
      // Undeclared exception!
      try { 
        timeSeriesURLGenerator0.generateURL(defaultOHLCDataset0, 1305, 1305);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1305
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "^\"fR\"/]E(k}]\u0007#5", "", "=");
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        timeSeriesURLGenerator0.generateURL(histogramDataset0, 0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "P^yx1hw<=`'<?)", "P^yx1hw<=`'<?)", "P^yx1hw<=`'<?)");
      String string0 = timeSeriesURLGenerator0.getItemParameterName();
      assertEquals("P^yx1hw<=`'<?)", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "P^yx1hw<=`'<?)", "P^yx1hw<=`'<?)", "P^yx1hw<=`'<?)");
      String string0 = timeSeriesURLGenerator0.getSeriesParameterName();
      assertEquals("P^yx1hw<=`'<?)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      DateFormat dateFormat0 = timeSeriesURLGenerator0.getDateFormat();
      TimeSeriesURLGenerator timeSeriesURLGenerator1 = new TimeSeriesURLGenerator(dateFormat0, "index.html", "index.html", "index.html");
      boolean boolean0 = timeSeriesURLGenerator0.equals(timeSeriesURLGenerator1);
      assertFalse(boolean0);
      assertEquals("index.html", timeSeriesURLGenerator0.getPrefix());
      assertEquals("item", timeSeriesURLGenerator0.getItemParameterName());
      assertEquals("series", timeSeriesURLGenerator0.getSeriesParameterName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      String string0 = timeSeriesURLGenerator0.getPrefix();
      assertEquals("index.html", string0);
      assertEquals("series", timeSeriesURLGenerator0.getSeriesParameterName());
      assertEquals("item", timeSeriesURLGenerator0.getItemParameterName());
  }
}
