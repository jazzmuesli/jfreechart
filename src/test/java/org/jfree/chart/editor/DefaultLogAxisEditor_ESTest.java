/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:14:33 GMT 2019
 */

package org.jfree.chart.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Paint;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import javax.swing.JPanel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.editor.DefaultLogAxisEditor;
import org.jfree.chart.ui.RectangleInsets;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DefaultLogAxisEditor_ESTest extends DefaultLogAxisEditor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("2ghaUz*B3X3=Q+(HwoP");
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      JPanel jPanel0 = defaultLogAxisEditor0.createTickUnitPanel();
      assertFalse(jPanel0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      // Undeclared exception!
      try { 
        defaultLogAxisEditor0.setAxisProperties((Axis) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultAxisEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("@D}VcsigDvf#Tb0rZU(");
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      NumberAxis numberAxis0 = new NumberAxis("");
      // Undeclared exception!
      try { 
        defaultLogAxisEditor0.setAxisProperties(numberAxis0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.axis.NumberAxis cannot be cast to org.jfree.chart.axis.LogAxis
         //
         verifyException("org.jfree.chart.editor.DefaultLogAxisEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("qO,x13lv^A");
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      // Undeclared exception!
      try { 
        defaultLogAxisEditor0.focusLost((FocusEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultValueAxisEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      defaultLogAxisEditor0.setAxisProperties(logAxis0);
      assertTrue(logAxis0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      defaultLogAxisEditor0.validateTickUnit();
      assertFalse(defaultLogAxisEditor0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      defaultLogAxisEditor0.toggleAutoTick();
      assertFalse(defaultLogAxisEditor0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      FocusEvent focusEvent0 = new FocusEvent(defaultLogAxisEditor0, 500, true, defaultLogAxisEditor0);
      defaultLogAxisEditor0.focusLost(focusEvent0);
      assertTrue(focusEvent0.isTemporary());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      Object object0 = defaultLogAxisEditor0.getTreeLock();
      ActionEvent actionEvent0 = new ActionEvent(object0, 0, "org.jfree.chart.editor.DefaultLogAxisEditor", 0);
      defaultLogAxisEditor0.actionPerformed(actionEvent0);
      assertEquals(0, actionEvent0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("db.'dL2)");
      DefaultLogAxisEditor defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
      // Undeclared exception!
      try { 
        defaultLogAxisEditor0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultLogAxisEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LogAxis logAxis0 = mock(LogAxis.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(logAxis0).getLabel();
      doReturn((Font) null).when(logAxis0).getLabelFont();
      doReturn((RectangleInsets) null).when(logAxis0).getLabelInsets();
      doReturn((Paint) null).when(logAxis0).getLabelPaint();
      doReturn((Font) null).when(logAxis0).getTickLabelFont();
      doReturn((RectangleInsets) null).when(logAxis0).getTickLabelInsets();
      doReturn((Paint) null).when(logAxis0).getTickLabelPaint();
      doReturn(false).when(logAxis0).isTickLabelsVisible();
      doReturn(false).when(logAxis0).isTickMarksVisible();
      doReturn((NumberTickUnit) null).when(logAxis0).getTickUnit();
      doReturn(0.0).when(logAxis0).getLowerBound();
      doReturn(0.0).when(logAxis0).getUpperBound();
      doReturn(false).when(logAxis0).isAutoRange();
      doReturn(false).when(logAxis0).isAutoTickUnitSelection();
      DefaultLogAxisEditor defaultLogAxisEditor0 = null;
      try {
        defaultLogAxisEditor0 = new DefaultLogAxisEditor(logAxis0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultLogAxisEditor", e);
      }
  }
}
