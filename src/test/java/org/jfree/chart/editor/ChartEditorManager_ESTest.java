/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:33:12 GMT 2019
 */

package org.jfree.chart.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Paint;
import java.awt.Stroke;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.editor.ChartEditorFactory;
import org.jfree.chart.editor.ChartEditorManager;
import org.jfree.chart.editor.DefaultChartEditor;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.ui.RectangleInsets;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartEditorManager_ESTest extends ChartEditorManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Plot plot0 = mock(Plot.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(plot0).getBackgroundPaint();
      doReturn((RectangleInsets) null).when(plot0).getInsets();
      doReturn((Paint) null).when(plot0).getOutlinePaint();
      doReturn((Stroke) null).when(plot0).getOutlineStroke();
      doReturn((String) null).when(plot0).getPlotType();
      TextTitle textTitle0 = mock(TextTitle.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(textTitle0).getFont();
      doReturn((Paint) null).when(textTitle0).getPaint();
      doReturn((String) null).when(textTitle0).getText();
      JFreeChart jFreeChart0 = mock(JFreeChart.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jFreeChart0).getAntiAlias();
      doReturn(paint0).when(jFreeChart0).getBackgroundPaint();
      doReturn(plot0).when(jFreeChart0).getPlot();
      doReturn(textTitle0).when(jFreeChart0).getTitle();
      DefaultChartEditor defaultChartEditor0 = (DefaultChartEditor)ChartEditorManager.getChartEditor(jFreeChart0);
      assertFalse(defaultChartEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartEditorManager.setChartEditorFactory((ChartEditorFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'f' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartEditorManager.getChartEditor((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultChartEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChartEditorFactory chartEditorFactory0 = ChartEditorManager.getChartEditorFactory();
      ChartEditorManager.setChartEditorFactory(chartEditorFactory0);
  }
}
