/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:00:54 GMT 2019
 */

package org.jfree.chart.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.event.ActionEvent;
import java.text.AttributedCharacterIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.editor.DefaultTitleEditor;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.ui.HorizontalAlignment;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.VerticalAlignment;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultTitleEditor_ESTest extends DefaultTitleEditor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      String string0 = defaultTitleEditor0.getTitleText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      Font font0 = defaultTitleEditor0.getTitleFont();
      assertTrue(font0.isPlain());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.setTitleProperties((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultTitleEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(dateTitle0);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.attemptFontSelection();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      ActionEvent actionEvent0 = new ActionEvent(attributedCharacterIterator_Attribute0, 2, (String) null);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Title title0 = mock(Title.class, new ViolatedAssumptionAnswer());
      DefaultTitleEditor defaultTitleEditor0 = null;
      try {
        defaultTitleEditor0 = new DefaultTitleEditor(title0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.title.Title$MockitoMock$1161821012 cannot be cast to org.jfree.chart.title.TextTitle
         //
         verifyException("org.jfree.chart.editor.DefaultTitleEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor((Title) null);
      String string0 = defaultTitleEditor0.getTitleText();
      assertEquals("Title", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      TextTitle textTitle0 = new TextTitle("", defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT, defaultPolarItemRenderer0.DEFAULT_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, thermometerPlot0.DEFAULT_INSETS);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      Paint paint0 = defaultTitleEditor0.getTitlePaint();
      assertEquals(1, paint0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor((Title) null);
      Font font0 = defaultTitleEditor0.getTitleFont();
      assertFalse(font0.isPlain());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      TextTitle textTitle0 = new TextTitle("", defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT, defaultPolarItemRenderer0.DEFAULT_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, thermometerPlot0.DEFAULT_INSETS);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      defaultTitleEditor0.setTitleProperties(jFreeChart0);
      assertFalse(defaultTitleEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor((Title) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(slidingGanttCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      defaultTitleEditor0.setTitleProperties(jFreeChart0);
      assertNull(jFreeChart0.getID());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      TextTitle textTitle0 = new TextTitle("", font0);
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      // Undeclared exception!
      try { 
        defaultTitleEditor0.attemptPaintSelection();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor((Title) null);
      ActionEvent actionEvent0 = new ActionEvent(defaultTitleEditor0, 232, "", 232);
      defaultTitleEditor0.actionPerformed(actionEvent0);
      assertEquals("", actionEvent0.getActionCommand());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      DefaultTitleEditor defaultTitleEditor0 = new DefaultTitleEditor(textTitle0);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.editor.LocalizationBundle", textTitle0.DEFAULT_FONT, piePlot0, false);
      defaultTitleEditor0.setTitleProperties(jFreeChart0);
      assertTrue(jFreeChart0.isNotify());
  }
}
