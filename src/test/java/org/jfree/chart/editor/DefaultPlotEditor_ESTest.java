/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:07:14 GMT 2019
 */

package org.jfree.chart.editor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.editor.DefaultAxisEditor;
import org.jfree.chart.editor.DefaultPlotEditor;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.ui.HorizontalAlignment;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.ui.VerticalAlignment;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DefaultPlotEditor_ESTest extends DefaultPlotEditor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      DefaultAxisEditor defaultAxisEditor0 = defaultPlotEditor0.getRangeAxisPropertyEditPanel();
      assertFalse(defaultAxisEditor0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      DefaultAxisEditor defaultAxisEditor0 = defaultPlotEditor0.getDomainAxisPropertyEditPanel();
      assertNull(defaultAxisEditor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      JTabbedPane jTabbedPane0 = defaultPlotEditor0.createPlotTabs(combinedRangeXYPlot0);
      assertFalse(jTabbedPane0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      // Undeclared exception!
      try { 
        defaultPlotEditor0.createPlotPanel((Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultPlotEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultPlotEditor defaultPlotEditor0 = null;
      try {
        defaultPlotEditor0 = new DefaultPlotEditor((Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultPlotEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      RectangleInsets rectangleInsets0 = defaultPlotEditor0.getPlotInsets();
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      Color color0 = (Color)defaultPlotEditor0.getBackgroundPaint();
      assertEquals(255, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      BasicStroke basicStroke0 = (BasicStroke)defaultPlotEditor0.getOutlineStroke();
      assertEquals(1, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("+g@SOK$/bBK\"~", stringArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(symbolAxis0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      Color color0 = (Color)defaultPlotEditor0.getOutlinePaint();
      assertEquals((-8355712), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(polarPlot0);
      defaultPlotEditor0.updatePlotProperties(fastScatterPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeCategoryPlot0);
      defaultPlotEditor0.updatePlotProperties(combinedRangeCategoryPlot0);
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      NumberAxis numberAxis0 = new NumberAxis("i ~(40");
      DateAxis dateAxis0 = new DateAxis("i ~(40");
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, numberAxis0, dateAxis0, candlestickRenderer0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(xYPlot0);
      defaultPlotEditor0.updatePlotProperties(xYPlot0);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, xYPlot0.getRangeAxisLocation());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainXYPlot0);
      defaultPlotEditor0.updatePlotProperties(thermometerPlot0);
      assertFalse(defaultPlotEditor0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("+g@SOK$/bBK\"~", stringArray0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("+g@SOK$/bBK\"~", true, (-2895.4826025941), 0.25);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(symbolAxis0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      ActionEvent actionEvent0 = new ActionEvent(categoryPointerAnnotation0, 500, "0:?8|6");
      defaultPlotEditor0.actionPerformed(actionEvent0);
      assertFalse(defaultPlotEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(piePlot3D0);
      ActionEvent actionEvent0 = new ActionEvent(defaultPlotEditor0, (-43), "Orientation", 10);
      // Undeclared exception!
      try { 
        defaultPlotEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultPlotEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(piePlot3D0);
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle("Orientation", piePlot3D0.DEFAULT_LABEL_FONT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, dateAxis0.DEFAULT_AXIS_LABEL_INSETS);
      ActionEvent actionEvent0 = new ActionEvent(textTitle0, 83, "OutlinePaint", 132);
      // Undeclared exception!
      try { 
        defaultPlotEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("OutlineStroke");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      ActionEvent actionEvent0 = new ActionEvent(extendedCategoryAxis0, 10, "OutlineStroke", 10, 1915);
      // Undeclared exception!
      try { 
        defaultPlotEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      DateAxis dateAxis0 = new DateAxis();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, dateAxis0, standardXYItemRenderer0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(xYPlot0);
      assertFalse(defaultPlotEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JPanel jPanel0 = defaultPlotEditor0.createPlotPanel(multiplePiePlot0);
      assertFalse(jPanel0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      DefaultAxisEditor defaultAxisEditor0 = defaultPlotEditor0.getDomainAxisPropertyEditPanel();
      assertFalse(defaultAxisEditor0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      defaultPlotEditor0.updatePlotProperties(combinedDomainCategoryPlot0);
      assertFalse(combinedDomainCategoryPlot0.isRangePannable());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedRangeXYPlot0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      ActionEvent actionEvent0 = new ActionEvent(lineAndShapeRenderer0, 10, "DrawShapes", (-1342L), 10);
      // Undeclared exception!
      try { 
        defaultPlotEditor0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultPlotEditor", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      DefaultAxisEditor defaultAxisEditor0 = defaultPlotEditor0.getRangeAxisPropertyEditPanel();
      assertNull(defaultAxisEditor0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DefaultPlotEditor defaultPlotEditor0 = new DefaultPlotEditor(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        defaultPlotEditor0.updatePlotProperties((Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.editor.DefaultPlotEditor", e);
      }
  }
}
