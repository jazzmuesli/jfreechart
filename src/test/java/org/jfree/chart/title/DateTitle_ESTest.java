/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:38:45 GMT 2019
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.ui.HorizontalAlignment;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.ui.VerticalAlignment;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DateTitle_ESTest extends DateTitle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      // Undeclared exception!
      try { 
        dateTitle0.setDateFormat((-1457), (Locale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style -1457
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      TextBox textBox0 = new TextBox();
      RectangleInsets rectangleInsets0 = textBox0.getInteriorGap();
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, (Locale) null, areaRenderer0.DEFAULT_VALUE_LABEL_FONT, areaRenderer0.DEFAULT_OUTLINE_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, rectangleInsets0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.BASIC_ISO_DATE;
      Locale locale0 = dateTimeFormatter0.getLocale();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("zR#", 0, 0);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.CENTER;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, locale0, font0, (Paint) null, rectangleEdge0, horizontalAlignment0, verticalAlignment0, piePlot3D0.DEFAULT_INSETS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(3320, locale0, spiderWebPlot0.DEFAULT_LABEL_FONT, spiderWebPlot0.DEFAULT_LABEL_OUTLINE_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, spiderWebPlot0.DEFAULT_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 3320
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(1, locale0, (Font) null, (Paint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle((-5265), locale0, (Font) null, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style -5265
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(2725);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 2725
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      float[][] floatArray0 = new float[5][6];
      DateAxis dateAxis0 = new DateAxis();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, dateAxis0, dateAxis0);
      Paint paint0 = fastScatterPlot0.getPaint();
      DateTitle dateTitle0 = new DateTitle(0, locale0, font0, paint0);
      assertEquals(0.0, dateTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      // Undeclared exception!
      try { 
        dateTitle0.setDateFormat(0, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      Color color0 = (Color)AbstractRenderer.DEFAULT_PAINT;
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      BlockBorder blockBorder0 = BlockBorder.NONE;
      RectangleInsets rectangleInsets0 = blockBorder0.getInsets();
      DateTitle dateTitle0 = new DateTitle(0, locale0, font0, color0, rectangleEdge0, horizontalAlignment0, verticalAlignment0, rectangleInsets0);
      assertEquals("vendredi 14 f\u00E9vrier 2014", dateTitle0.getText());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Locale locale0 = Locale.CHINESE;
      dateTitle0.setDateFormat(0, locale0);
      assertEquals("2014\u5E742\u670814\u65E5 \u661F\u671F\u4E94", dateTitle0.getText());
  }
}
