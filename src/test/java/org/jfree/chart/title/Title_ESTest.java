/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:52:46 GMT 2019
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.SystemColor;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.RasterFormatException;
import java.util.Collection;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.LegendItemSource;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.Arrangement;
import org.jfree.chart.block.Block;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.TitleChangeEvent;
import org.jfree.chart.event.TitleChangeListener;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.title.CompositeTitle;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.ImageTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.ShortTextTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.ui.HorizontalAlignment;
import org.jfree.chart.ui.Layer;
import org.jfree.chart.ui.LengthAdjustmentType;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.ui.Size2D;
import org.jfree.chart.ui.VerticalAlignment;
import org.jfree.chart.util.SortOrder;
import org.jfree.chart.util.UnitType;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Title_ESTest extends Title_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      Font font0 = TextTitle.DEFAULT_FONT;
      textTitle0.setFont(font0);
      textTitle0.clone();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      textTitle0.setVerticalAlignment(verticalAlignment0);
      textTitle0.setPadding(0.0, (-338.9149), 1124.62013124, 0.0);
      textTitle0.getExpandToFitSpace();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("f", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(35, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      textTitle0.arrangeNN(graphics2D0);
      CompositeTitle compositeTitle0 = new CompositeTitle();
      compositeTitle0.clone();
      BlockContainer blockContainer0 = new BlockContainer();
      compositeTitle0.setTitleContainer(blockContainer0);
      LegendTitle legendTitle0 = jFreeChart0.getLegend(0);
      legendTitle0.addChangeListener(jFreeChart0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      legendTitle0.setLegendItemGraphicEdge(rectangleEdge0);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("f");
      Range range0 = Range.expandToInclude((Range) null, 1820.5513416922354);
      Range range1 = Range.expand(range0, 0.0, 0.0);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range1, 0);
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toFixedWidth(0.0);
      // Undeclared exception!
      try { 
        rectangleConstraint1.toRangeHeight((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      CategoryPlot categoryPlot1 = new CategoryPlot();
      Plot plot0 = categoryPlot1.getRootPlot();
      JFreeChart jFreeChart1 = new JFreeChart("rG", textTitle0.DEFAULT_FONT, plot0, true);
      LegendTitle legendTitle0 = jFreeChart1.getLegend();
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      legendTitle0.setPosition(textTitle0.DEFAULT_POSITION);
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      jFreeChart1.clone();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10, (-3781.3), 10, 101.64039506080616);
      legendTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Double0);
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.getStripWidth();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      CategoryPlot categoryPlot1 = new CategoryPlot();
      Plot plot0 = categoryPlot1.getRootPlot();
      JFreeChart jFreeChart1 = new JFreeChart("rG", textTitle0.DEFAULT_FONT, plot0, true);
      LegendTitle legendTitle0 = jFreeChart1.getLegend();
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      plot0.getChart();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10, (-3781.3), 10, 101.64039506080616);
      legendTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Double0);
      legendTitle0.hashCode();
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.setAxisOffset(0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      CategoryPlot categoryPlot1 = new CategoryPlot();
      Plot plot0 = categoryPlot1.getRootPlot();
      JFreeChart jFreeChart1 = new JFreeChart("rG", textTitle0.DEFAULT_FONT, plot0, true);
      LegendTitle legendTitle0 = jFreeChart1.getLegend();
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      jFreeChart1.clone();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10, (-3781.3), 10, 101.64039506080616);
      legendTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Double0);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      textTitle0.draw(graphics2D1, (Rectangle2D) rectangle2D_Double0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      Font font1 = font0.deriveFont((-1697));
      Font font2 = font1.deriveFont((-1697), 0.0F);
      font2.deriveFont(1.0F);
      TextTitle textTitle0 = new TextTitle("e/:)z4I", font2);
      textTitle0.equals("e/:)z4I");
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-1697)).when(paintScale0).getLowerBound();
      doReturn((double)0.0F).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.setStripOutlinePaint(valueAxis0.DEFAULT_TICK_LABEL_PAINT);
      CompositeTitle compositeTitle0 = new CompositeTitle();
      compositeTitle0.getBackgroundPaint();
      paintScaleLegend0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("7TT]|2~NufPz");
      assertTrue(textTitle0.visible);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      assertNotNull(textTitle0);
      
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(textTitle0);
      assertTrue(textTitle0.visible);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertNotNull(titleChangeEvent0);
      
      textTitle0.notifyListeners(titleChangeEvent0);
      assertTrue(textTitle0.visible);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      
      HorizontalAlignment horizontalAlignment0 = textTitle0.getTextAlignment();
      assertEquals(HorizontalAlignment.CENTER, horizontalAlignment0);
      assertTrue(textTitle0.visible);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      
      HorizontalAlignment horizontalAlignment1 = textTitle0.getTextAlignment();
      assertEquals(HorizontalAlignment.CENTER, horizontalAlignment1);
      assertTrue(textTitle0.visible);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      assertSame(horizontalAlignment1, horizontalAlignment0);
      
      textTitle0.setVisible(true);
      assertTrue(textTitle0.visible);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertTrue(compositeTitle0.visible);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertNotNull(compositeTitle0);
      
      boolean boolean0 = compositeTitle0.equals(horizontalAlignment0);
      assertFalse(boolean0);
      assertTrue(textTitle0.visible);
      assertTrue(compositeTitle0.visible);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertSame(horizontalAlignment0, horizontalAlignment1);
      
      RectangleEdge rectangleEdge0 = compositeTitle0.getPosition();
      assertEquals(RectangleEdge.TOP, rectangleEdge0);
      assertTrue(compositeTitle0.visible);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      
      String string0 = null;
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertNotNull(categoryPlot0);
      
      JFreeChart jFreeChart0 = new JFreeChart((String) null, textTitle0.DEFAULT_FONT, categoryPlot0, true);
      assertTrue(textTitle0.visible);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      assertNotNull(jFreeChart0);
      
      jFreeChart0.titleChanged(titleChangeEvent0);
      assertTrue(textTitle0.visible);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertNull(textTitle0.getURLText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals("7TT]|2~NufPz", textTitle0.getText());
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertNull(jFreeChart0.getID());
      assertFalse(jFreeChart0.isBorderVisible());
      assertTrue(jFreeChart0.getAntiAlias());
      
      // Undeclared exception!
      try { 
        jFreeChart0.getXYPlot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.CategoryPlot cannot be cast to org.jfree.chart.plot.XYPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, (CategoryAxis) null, valueAxis0, (CategoryItemRenderer) null);
      Plot plot0 = categoryPlot0.getRootPlot();
      categoryPlot0.equals((Object) null);
      Arrangement arrangement0 = mock(Arrangement.class, new ViolatedAssumptionAnswer());
      categoryPlot0.clearRangeMarkers();
      LegendTitle legendTitle0 = new LegendTitle(plot0, arrangement0, arrangement0);
      legendTitle0.getNotify();
      legendTitle0.setWidth(10);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      legendTitle0.setLegendItemGraphicLocation(rectangleAnchor0);
      legendTitle0.getLegendItemGraphicLocation();
      int int0 = 1447;
      Locale locale0 = null;
      try {
        locale0 = new Locale((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      textTitle0.getVerticalAlignment();
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.isStripOutlineVisible();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((LegendItemCollection) null).when(categoryItemRenderer0).getLegendItems();
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis1, categoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      jFreeChart0.setBackgroundImageAlpha(0.0F);
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      legendTitle0.getLegendItemGraphicEdge();
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.LegendItemCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0, 0.05, (-203.429263230362), 0.05);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        legendTitle0.draw((Graphics2D) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BlockBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      paintScaleLegend0.setPosition(rectangleEdge0);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(paintScaleLegend0);
      paintScaleLegend0.notifyListeners(titleChangeEvent0);
      ImageTitle imageTitle0 = null;
      try {
        imageTitle0 = new ImageTitle((Image) null, paintScaleLegend0.DEFAULT_POSITION, paintScaleLegend0.DEFAULT_HORIZONTAL_ALIGNMENT, paintScaleLegend0.DEFAULT_VERTICAL_ALIGNMENT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(90.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.setPosition(paintScaleLegend0.DEFAULT_POSITION);
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(paintScaleLegend0);
      paintScaleLegend0.notifyListeners(titleChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeCrosshairValue(1454.901);
      Arrangement arrangement0 = mock(Arrangement.class, new ViolatedAssumptionAnswer());
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0, arrangement0, arrangement0);
      LegendItemSource[] legendItemSourceArray0 = new LegendItemSource[0];
      legendTitle0.setSources(legendItemSourceArray0);
      legendTitle0.getPosition();
      legendTitle0.getBackgroundPaint();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      textTitle0.getVerticalAlignment();
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.isStripOutlineVisible();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((LegendItemCollection) null).when(categoryItemRenderer0).getLegendItems();
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis1, categoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      jFreeChart0.setBackgroundImageAlpha(0.0F);
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      legendTitle0.getLegendItemGraphicEdge();
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.LegendItemCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      Font font1 = font0.deriveFont((-1697));
      Font font2 = font1.deriveFont((-1697), 0.0F);
      font2.deriveFont(1.0F);
      TextTitle textTitle0 = new TextTitle("e/:)z4I", font2);
      textTitle0.equals("e/:)z4I");
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.setStripOutlinePaint(valueAxis0.DEFAULT_TICK_LABEL_PAINT);
      CompositeTitle compositeTitle0 = new CompositeTitle();
      compositeTitle0.getBackgroundPaint();
      paintScaleLegend0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeMarkers(0, layer0);
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0);
      categoryPlot0.setNoDataMessagePaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer1 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      categoryPlot0.setRenderer(500, categoryItemRenderer1);
      Layer layer1 = Layer.FOREGROUND;
      legendTitle0.setItemLabelPadding(categoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      categoryPlot0.setNoDataMessageFont(valueAxis0.DEFAULT_AXIS_LABEL_FONT);
      categoryPlot0.addRangeMarker(0, marker0, layer1);
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.CENTER;
      legendTitle0.setHorizontalAlignment(horizontalAlignment0);
      legendTitle0.getItemPaint();
      RectangleEdge rectangleEdge0 = legendTitle0.getLegendItemGraphicEdge();
      legendTitle0.setNotify(false);
      legendTitle0.getItemPaint();
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis1);
      paintScaleLegend0.addChangeListener((TitleChangeListener) null);
      paintScaleLegend0.getStripWidth();
      ValueAxis valueAxis2 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      paintScaleLegend0.setAxis(valueAxis2);
      CompositeTitle compositeTitle0 = new CompositeTitle();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      legendTitle0.setVerticalAlignment(verticalAlignment0);
      Locale locale0 = Locale.ITALY;
      Color color0 = Color.darkGray;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(11, locale0, valueAxis1.DEFAULT_AXIS_LABEL_FONT, color0, rectangleEdge0, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT, valueAxis0.DEFAULT_TICK_LABEL_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 11
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, valueAxis0, categoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("IDdw:))lf@`,vW_5Ce", categoryPlot0);
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      BlockContainer blockContainer0 = legendTitle0.getItemContainer();
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((EntityCollection) null).when(chartRenderingInfo0).getEntityCollection();
      doReturn((PlotRenderingInfo) null).when(chartRenderingInfo0).getPlotInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500, (-2635.0), 1.0E-8, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0E-8, 2.0F, 0.05, 1604.3);
      RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.EXPAND;
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      legendTitle0.setSortOrder(sortOrder0);
      Rectangle2D rectangle2D0 = rectangleInsets0.createAdjustedRectangle(rectangle2D_Double0, lengthAdjustmentType0, lengthAdjustmentType1);
      LengthAdjustmentType lengthAdjustmentType2 = LengthAdjustmentType.CONTRACT;
      rectangleInsets0.createAdjustedRectangle(rectangle2D0, lengthAdjustmentType2, lengthAdjustmentType2);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createUnion(rectangle2D0);
      blockContainer0.draw(graphics2D0, rectangle2D1);
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis1);
      paintScaleLegend0.setAxisOffset(451.4733492774);
      paintScaleLegend0.getScale();
      paintScaleLegend0.isStripOutlineVisible();
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("IDdw:))lf@`,vW_5Ce");
      shortTextTitle0.arrangeFN(graphics2D0, 2.0F);
      legendTitle0.getItemPaint();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      assertTrue(shortTextTitle0.visible);
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertEquals("", shortTextTitle0.getText());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getURLText());
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getID());
      assertNotNull(shortTextTitle0);
      
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertNotNull(categoryPlot0);
      
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.getRootPlot();
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertNotNull(categoryPlot1);
      assertSame(categoryPlot0, categoryPlot1);
      assertSame(categoryPlot1, categoryPlot0);
      
      JFreeChart jFreeChart0 = new JFreeChart("", shortTextTitle0.DEFAULT_FONT, categoryPlot1, true);
      assertTrue(shortTextTitle0.visible);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertEquals("", shortTextTitle0.getText());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getURLText());
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getID());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.getAntiAlias());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertNotNull(jFreeChart0);
      
      shortTextTitle0.setBackgroundPaint(categoryPlot1.DEFAULT_OUTLINE_PAINT);
      assertTrue(shortTextTitle0.visible);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertEquals("", shortTextTitle0.getText());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getURLText());
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getID());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertSame(categoryPlot0, categoryPlot1);
      assertSame(categoryPlot1, categoryPlot0);
      
      RectangleInsets rectangleInsets0 = jFreeChart0.getPadding();
      assertTrue(shortTextTitle0.visible);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertEquals("", shortTextTitle0.getText());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getURLText());
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getID());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.getAntiAlias());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(0.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(0.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(0.0, rectangleInsets0.getTop(), 0.01);
      assertNotNull(rectangleInsets0);
      assertSame(categoryPlot0, categoryPlot1);
      assertSame(categoryPlot1, categoryPlot0);
      
      shortTextTitle0.setPadding(rectangleInsets0);
      assertTrue(shortTextTitle0.visible);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertEquals("", shortTextTitle0.getText());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getURLText());
      assertEquals(0.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(0.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getID());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertTrue(jFreeChart0.isNotify());
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.getAntiAlias());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertEquals(0.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(0.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(0.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(0.0, rectangleInsets0.getTop(), 0.01);
      assertSame(categoryPlot0, categoryPlot1);
      assertSame(categoryPlot1, categoryPlot0);
      
      boolean boolean0 = shortTextTitle0.isVisible();
      assertTrue(boolean0);
      assertTrue(shortTextTitle0.visible);
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertEquals("", shortTextTitle0.getText());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getURLText());
      assertEquals(0.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(0.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getID());
      
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot1);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertTrue(legendTitle0.isVisible());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertNotNull(legendTitle0);
      
      legendTitle0.setBackgroundPaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertTrue(legendTitle0.isVisible());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertSame(categoryPlot0, categoryPlot1);
      assertSame(categoryPlot1, categoryPlot0);
      
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      legendTitle0.setHorizontalAlignment(horizontalAlignment0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertTrue(legendTitle0.isVisible());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.LEFT, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertSame(categoryPlot0, categoryPlot1);
      assertSame(categoryPlot1, categoryPlot0);
      
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      assertEquals(RectangleAnchor.CENTER, rectangleAnchor0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isNotify());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot1.isOutlineVisible());
      assertFalse(categoryPlot1.isDomainPannable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot1.getDomainGridlinePosition());
      assertFalse(categoryPlot1.getDrawSharedDomainAxis());
      assertEquals(1, categoryPlot1.getDomainAxisCount());
      assertFalse(categoryPlot1.fetchElementHintingFlag());
      assertTrue(categoryPlot1.isNotify());
      assertFalse(categoryPlot1.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot1.getDatasetRenderingOrder());
      assertTrue(categoryPlot1.isRangeZoomable());
      assertEquals(1, categoryPlot1.getRendererCount());
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getRowRenderingOrder());
      assertEquals(1, categoryPlot1.getRangeAxisCount());
      assertFalse(categoryPlot1.isDomainCrosshairVisible());
      assertEquals(1.0F, categoryPlot1.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot1.getOrientation());
      assertEquals(0.0, categoryPlot1.getRangeCrosshairValue(), 0.01);
      assertEquals(15, categoryPlot1.getBackgroundImageAlignment());
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
      assertNull(categoryPlot1.getNoDataMessage());
      assertEquals(0.0, categoryPlot1.getAnchorValue(), 0.01);
      assertFalse(categoryPlot1.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot1.getColumnRenderingOrder());
      assertEquals(0.5F, categoryPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot1.isRangeCrosshairVisible());
      assertFalse(categoryPlot1.isDomainZoomable());
      assertTrue(categoryPlot1.isRangeGridlinesVisible());
      assertEquals(0, categoryPlot1.getWeight());
      assertEquals(1, categoryPlot1.getDatasetCount());
      assertFalse(categoryPlot1.isDomainGridlinesVisible());
      assertFalse(categoryPlot1.isRangeMinorGridlinesVisible());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertTrue(legendTitle0.isVisible());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.LEFT, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertSame(categoryPlot0, categoryPlot1);
      assertSame(categoryPlot1, categoryPlot0);
      
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = null;
      try {
        paintScaleLegend0 = new PaintScaleLegend((PaintScale) null, valueAxis1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.PaintScaleLegend", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertNotNull(categoryPlot0);
      
      Font font0 = categoryPlot0.getNoDataMessageFont();
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertEquals(12, font0.getSize());
      assertFalse(font0.hasUniformLineMetrics());
      assertTrue(font0.isPlain());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isItalic());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertNotNull(font0);
      
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      TextTitle textTitle0 = new TextTitle("verticalAlignment", font0, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, categoryPlot0.DEFAULT_INSETS);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(textTitle0.visible);
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertEquals(12, font0.getSize());
      assertFalse(font0.hasUniformLineMetrics());
      assertTrue(font0.isPlain());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isItalic());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertEquals(VerticalAlignment.TOP, textTitle0.getVerticalAlignment());
      assertNull(textTitle0.getURLText());
      assertEquals(8.0, textTitle0.getContentXOffset(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(HorizontalAlignment.LEFT, textTitle0.getHorizontalAlignment());
      assertEquals(RectangleEdge.BOTTOM, textTitle0.getPosition());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.LEFT, textTitle0.getTextAlignment());
      assertNull(textTitle0.getID());
      assertEquals(4.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals("verticalAlignment", textTitle0.getText());
      assertNotNull(textTitle0);
      
      HorizontalAlignment horizontalAlignment1 = HorizontalAlignment.LEFT;
      textTitle0.setHorizontalAlignment(horizontalAlignment1);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(textTitle0.visible);
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertEquals(12, font0.getSize());
      assertFalse(font0.hasUniformLineMetrics());
      assertTrue(font0.isPlain());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isItalic());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertEquals(VerticalAlignment.TOP, textTitle0.getVerticalAlignment());
      assertNull(textTitle0.getURLText());
      assertEquals(8.0, textTitle0.getContentXOffset(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals(HorizontalAlignment.LEFT, textTitle0.getHorizontalAlignment());
      assertEquals(RectangleEdge.BOTTOM, textTitle0.getPosition());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.LEFT, textTitle0.getTextAlignment());
      assertNull(textTitle0.getID());
      assertEquals(4.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals("verticalAlignment", textTitle0.getText());
      assertSame(horizontalAlignment0, horizontalAlignment1);
      assertSame(horizontalAlignment1, horizontalAlignment0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      assertTrue(textTitle0.visible);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.getNotify());
      assertTrue(textTitle0.isVisible());
      assertEquals("", textTitle0.getText());
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertNull(textTitle0.getURLText());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertNotNull(textTitle0);
      
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      assertTrue(paintScaleLegend0.visible);
      assertTrue(paintScaleLegend0.isVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertNotNull(paintScaleLegend0);
      
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      paintScaleLegend0.setAxisLocation(axisLocation0);
      assertTrue(paintScaleLegend0.visible);
      assertTrue(paintScaleLegend0.isVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(AxisLocation.TOP_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      
      paintScaleLegend0.setNotify(true);
      assertTrue(paintScaleLegend0.visible);
      assertTrue(paintScaleLegend0.isVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(AxisLocation.TOP_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      
      double double0 = paintScaleLegend0.getAxisOffset();
      assertEquals(0.0, double0, 0.01);
      assertTrue(paintScaleLegend0.visible);
      assertTrue(paintScaleLegend0.isVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(AxisLocation.TOP_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertTrue(paintScaleLegend0.isVisible());
      assertNotNull(paintScaleLegend0);
      
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(paintScaleLegend0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertNotNull(titleChangeEvent0);
      
      paintScaleLegend0.notifyListeners(titleChangeEvent0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      
      paintScaleLegend0.setStripOutlineVisible(true);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertTrue(paintScaleLegend0.isVisible());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertNotNull(paintScaleLegend0);
      
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(paintScaleLegend0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertNotNull(titleChangeEvent0);
      
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.NEW_DATASET;
      titleChangeEvent0.setType(chartChangeEventType0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(ChartChangeEventType.NEW_DATASET, titleChangeEvent0.getType());
      
      JFreeChart jFreeChart0 = titleChangeEvent0.getChart();
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(ChartChangeEventType.NEW_DATASET, titleChangeEvent0.getType());
      assertNull(jFreeChart0);
      
      paintScaleLegend0.removeChangeListener((TitleChangeListener) null);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      
      paintScaleLegend0.setAxisOffset((-1.5707963267948966));
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals((-1.5707963267948966), paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      
      boolean boolean0 = paintScaleLegend0.getNotify();
      assertTrue(boolean0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals((-1.5707963267948966), paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null);
      assertTrue(legendTitle0.visible);
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNotNull(legendTitle0);
      
      RectangleEdge rectangleEdge0 = legendTitle0.getLegendItemGraphicEdge();
      assertEquals(RectangleEdge.LEFT, rectangleEdge0);
      assertTrue(legendTitle0.visible);
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertNotNull(categoryPlot0);
      
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertNotNull(legendTitle0);
      
      legendTitle0.setItemPaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      
      categoryPlot0.setRangeCrosshairLockedOnData(true);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      
      BlockContainer blockContainer0 = legendTitle0.getItemContainer();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertNotNull(blockContainer0);
      
      BasicStroke basicStroke0 = (BasicStroke)categoryPlot0.getDomainCrosshairStroke();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getLineJoin());
      assertEquals(0, basicStroke0.getEndCap());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
      
      categoryPlot0.setRangeMinorGridlineStroke(basicStroke0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getLineJoin());
      assertEquals(0, basicStroke0.getEndCap());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      
      blockContainer0.add((Block) legendTitle0, (Object) null);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertFalse(blockContainer0.isEmpty());
      
      categoryPlot0.setRangeCrosshairValue(0.0, true);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      
      legendTitle0.setWrapper(blockContainer0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertFalse(blockContainer0.isEmpty());
      
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      legendTitle0.setPosition(rectangleEdge0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.RIGHT, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      legendTitle0.setLegendItemGraphicAnchor(rectangleAnchor0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(RectangleAnchor.TOP_RIGHT, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.RIGHT, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      
      LegendTitle legendTitle1 = (LegendTitle)legendTitle0.clone();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertTrue(legendTitle1.visible);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertNull(legendTitle0.getID());
      assertEquals(RectangleAnchor.TOP_RIGHT, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.RIGHT, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(RectangleAnchor.TOP_RIGHT, legendTitle1.getLegendItemGraphicAnchor());
      assertNull(legendTitle1.getID());
      assertEquals(0.0, legendTitle1.getWidth(), 0.01);
      assertEquals(1.0, legendTitle1.getContentYOffset(), 0.01);
      assertTrue(legendTitle1.isVisible());
      assertEquals(RectangleEdge.RIGHT, legendTitle1.getPosition());
      assertEquals(RectangleEdge.LEFT, legendTitle1.getLegendItemGraphicEdge());
      assertEquals(VerticalAlignment.CENTER, legendTitle1.getVerticalAlignment());
      assertEquals(SortOrder.ASCENDING, legendTitle1.getSortOrder());
      assertEquals(RectangleAnchor.CENTER, legendTitle1.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle1.getHeight(), 0.01);
      assertEquals(1.0, legendTitle1.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle1.getHorizontalAlignment());
      assertTrue(legendTitle1.getNotify());
      assertNotNull(legendTitle1);
      assertTrue(legendTitle1.equals((Object)legendTitle0));
      assertNotSame(legendTitle0, legendTitle1);
      assertNotSame(legendTitle1, legendTitle0);
      
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      assertTrue(paintScaleLegend0.visible);
      assertTrue(paintScaleLegend0.isVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertNotNull(paintScaleLegend0);
      
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(8.0, rectangleInsets0.getRight(), 0.01);
      assertNotNull(rectangleInsets0);
      
      paintScaleLegend0.setMargin(rectangleInsets0);
      assertTrue(paintScaleLegend0.visible);
      assertTrue(paintScaleLegend0.isVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(5.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(9.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(8.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(8.0, rectangleInsets0.getRight(), 0.01);
      
      double double0 = paintScaleLegend0.getStripWidth();
      assertEquals(15.0, double0, 0.01);
      assertTrue(paintScaleLegend0.visible);
      assertTrue(paintScaleLegend0.isVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(5.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(9.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Save_as");
      assertTrue(shortTextTitle0.visible);
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getToolTipText());
      assertNull(shortTextTitle0.getID());
      assertEquals("Save_as", shortTextTitle0.getText());
      assertNull(shortTextTitle0.getURLText());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertNotNull(shortTextTitle0);
      
      BufferedImage bufferedImage0 = new BufferedImage(146, 10, 10);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(10, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(146, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(146, bufferedImage0.getTileWidth());
      assertEquals(10, bufferedImage0.getType());
      assertNotNull(bufferedImage0);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(255, sunGraphics2D0.pixel);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(10, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(146, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(146, bufferedImage0.getTileWidth());
      assertEquals(10, bufferedImage0.getType());
      assertNotNull(sunGraphics2D0);
      
      Size2D size2D0 = shortTextTitle0.arrangeFN(sunGraphics2D0, 2.0F);
      assertTrue(shortTextTitle0.visible);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(255, sunGraphics2D0.pixel);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertNull(shortTextTitle0.getToolTipText());
      assertNull(shortTextTitle0.getID());
      assertEquals("Save_as", shortTextTitle0.getText());
      assertNull(shortTextTitle0.getURLText());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertTrue(shortTextTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(1, bufferedImage0.getTransparency());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(10, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(146, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(146, bufferedImage0.getTileWidth());
      assertEquals(10, bufferedImage0.getType());
      assertEquals(0.0, size2D0.getWidth(), 0.01);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertNotNull(size2D0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      assertTrue(textTitle0.visible);
      assertNull(textTitle0.getURLText());
      assertTrue(textTitle0.getNotify());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertNull(textTitle0.getID());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertNotNull(textTitle0);
      
      Font font0 = TextTitle.DEFAULT_FONT;
      assertEquals(12, font0.getSize());
      assertFalse(font0.isItalic());
      assertTrue(font0.isBold());
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertFalse(font0.isTransformed());
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(1, font0.getStyle());
      assertNotNull(font0);
      
      textTitle0.setFont(font0);
      assertTrue(textTitle0.visible);
      assertNull(textTitle0.getURLText());
      assertTrue(textTitle0.getNotify());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertNull(textTitle0.getID());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(12, font0.getSize());
      assertFalse(font0.isItalic());
      assertTrue(font0.isBold());
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertFalse(font0.isTransformed());
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(1, font0.getStyle());
      
      TextTitle textTitle1 = (TextTitle)textTitle0.clone();
      assertTrue(textTitle0.visible);
      assertTrue(textTitle1.visible);
      assertNull(textTitle0.getURLText());
      assertTrue(textTitle0.getNotify());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertNull(textTitle0.getID());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle1.getWidth(), 0.01);
      assertNull(textTitle1.getToolTipText());
      assertEquals(1.0, textTitle1.getContentYOffset(), 0.01);
      assertNull(textTitle1.getURLText());
      assertFalse(textTitle1.getExpandToFitSpace());
      assertEquals("", textTitle1.getText());
      assertEquals(Integer.MAX_VALUE, textTitle1.getMaximumLinesToDisplay());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getHorizontalAlignment());
      assertEquals(1.0, textTitle1.getContentXOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, textTitle1.getVerticalAlignment());
      assertTrue(textTitle1.getNotify());
      assertEquals(0.0, textTitle1.getHeight(), 0.01);
      assertNull(textTitle1.getID());
      assertEquals(RectangleEdge.TOP, textTitle1.getPosition());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getTextAlignment());
      assertTrue(textTitle1.isVisible());
      assertNotNull(textTitle1);
      assertTrue(textTitle1.equals((Object)textTitle0));
      assertNotSame(textTitle0, textTitle1);
      assertNotSame(textTitle1, textTitle0);
      
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      textTitle0.setVerticalAlignment(verticalAlignment0);
      assertTrue(textTitle0.visible);
      assertNull(textTitle0.getURLText());
      assertTrue(textTitle0.getNotify());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertNull(textTitle0.getID());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      textTitle0.setPadding(0.0, (-338.9149), 1124.62013124, 0.0);
      assertTrue(textTitle0.visible);
      assertNull(textTitle0.getURLText());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertNull(textTitle0.getID());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      boolean boolean0 = textTitle0.getExpandToFitSpace();
      assertFalse(boolean0);
      assertTrue(textTitle0.visible);
      assertNull(textTitle0.getURLText());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertNull(textTitle0.getID());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      CategoryPlot categoryPlot0 = new CategoryPlot();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertNotNull(categoryPlot0);
      
      JFreeChart jFreeChart0 = new JFreeChart("f", categoryPlot0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNotNull(jFreeChart0);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(35, 10);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(35, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(35, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertNotNull(bufferedImage0);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(35, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(35, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertNotNull(sunGraphics2D0);
      
      Size2D size2D0 = textTitle0.arrangeNN(sunGraphics2D0);
      assertTrue(textTitle0.visible);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(0.0, size2D0.height, 0.01);
      assertNull(textTitle0.getURLText());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertTrue(textTitle0.getNotify());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getToolTipText());
      assertNull(textTitle0.getID());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertFalse(jFreeChart0.getElementHinting());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(35, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(35, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
      assertNotNull(size2D0);
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertTrue(compositeTitle0.visible);
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertNotNull(compositeTitle0);
      
      BlockContainer blockContainer0 = new BlockContainer();
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertNotNull(blockContainer0);
      
      compositeTitle0.setTitleContainer(blockContainer0);
      assertTrue(compositeTitle0.visible);
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertTrue(blockContainer0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.isItalic());
      assertEquals(18, font0.getSize());
      assertTrue(font0.isBold());
      assertEquals(1, font0.getStyle());
      assertFalse(font0.isTransformed());
      assertFalse(font0.isPlain());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(18.0F, font0.getSize2D(), 0.01F);
      assertNotNull(font0);
      
      TextTitle textTitle0 = new TextTitle(",'EqOm)/)xfP<9n", font0);
      assertTrue(textTitle0.visible);
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.isItalic());
      assertEquals(18, font0.getSize());
      assertTrue(font0.isBold());
      assertEquals(1, font0.getStyle());
      assertFalse(font0.isTransformed());
      assertFalse(font0.isPlain());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(18.0F, font0.getSize2D(), 0.01F);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals(",'EqOm)/)xfP<9n", textTitle0.getText());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertNull(textTitle0.getURLText());
      assertTrue(textTitle0.getNotify());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertNull(textTitle0.getID());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertNull(textTitle0.getToolTipText());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertTrue(textTitle0.isVisible());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertNotNull(textTitle0);
      
      CategoryPlot categoryPlot0 = new CategoryPlot();
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(categoryPlot0.isNotify());
      assertNotNull(categoryPlot0);
      
      JFreeChart jFreeChart0 = new JFreeChart(",'EqOm)/)xfP<9n", categoryPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(categoryPlot0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.getAntiAlias());
      assertFalse(jFreeChart0.isBorderVisible());
      assertNotNull(jFreeChart0);
      
      int int0 = 2;
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(categoryPlot0.isNotify());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertNull(jFreeChart0.getID());
      assertTrue(jFreeChart0.getAntiAlias());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(2, bufferedImage0.getWidth());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(10, bufferedImage0.getHeight());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(2, bufferedImage0.getTileWidth());
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      
      // Undeclared exception!
      try { 
        bufferedImage0.getSubimage(1643, 1643, 2, 15);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertNotNull(categoryPlot0);
      
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertNotNull(legendTitle0);
      
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(legendTitle0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertNotNull(titleChangeEvent0);
      
      JFreeChart jFreeChart0 = titleChangeEvent0.getChart();
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertNull(jFreeChart0);
      
      legendTitle0.removeChangeListener((TitleChangeListener) null);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      
      categoryPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      
      legendTitle0.setPadding((double) 1.0F, (double) 1.0F, (double) 10, (double) 10);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      legendTitle0.setVerticalAlignment(verticalAlignment0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(VerticalAlignment.TOP, legendTitle0.getVerticalAlignment());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      legendTitle0.setLegendItemGraphicLocation(rectangleAnchor0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertTrue(legendTitle0.visible);
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(RectangleAnchor.TOP_LEFT, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(VerticalAlignment.TOP, legendTitle0.getVerticalAlignment());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertTrue(legendTitle0.getNotify());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      
      BlockContainer blockContainer0 = new BlockContainer();
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNotNull(blockContainer0);
      
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      assertTrue(compositeTitle0.visible);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertNotNull(compositeTitle0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("7'*OF/;]}]e;_");
      assertTrue(shortTextTitle0.visible);
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertNull(shortTextTitle0.getID());
      assertEquals("7'*OF/;]}]e;_", shortTextTitle0.getText());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertTrue(shortTextTitle0.getNotify());
      assertNull(shortTextTitle0.getURLText());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertTrue(shortTextTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertNotNull(shortTextTitle0);
      
      shortTextTitle0.setVisible(false);
      assertFalse(shortTextTitle0.visible);
      assertEquals(0.0, shortTextTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, shortTextTitle0.getPosition());
      assertNull(shortTextTitle0.getToolTipText());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getHorizontalAlignment());
      assertEquals(1.0, shortTextTitle0.getContentYOffset(), 0.01);
      assertNull(shortTextTitle0.getID());
      assertEquals("7'*OF/;]}]e;_", shortTextTitle0.getText());
      assertFalse(shortTextTitle0.getExpandToFitSpace());
      assertEquals(1.0, shortTextTitle0.getContentXOffset(), 0.01);
      assertTrue(shortTextTitle0.getNotify());
      assertNull(shortTextTitle0.getURLText());
      assertEquals(Integer.MAX_VALUE, shortTextTitle0.getMaximumLinesToDisplay());
      assertEquals(HorizontalAlignment.CENTER, shortTextTitle0.getTextAlignment());
      assertEquals(0.0, shortTextTitle0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, shortTextTitle0.getVerticalAlignment());
      assertFalse(shortTextTitle0.isVisible());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertNotNull(paintScaleLegend0);
      
      paintScaleLegend0.setStripOutlinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      
      paintScaleLegend0.setStripOutlineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis1, categoryItemRenderer0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertNotNull(categoryPlot0);
      
      Plot plot0 = categoryPlot0.getParent();
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(categoryPlot0.isNotify());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertNull(plot0);
      
      Arrangement arrangement0 = mock(Arrangement.class, new ViolatedAssumptionAnswer());
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null, arrangement0, arrangement0);
      assertTrue(legendTitle0.visible);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertNull(legendTitle0.getID());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertTrue(legendTitle0.getNotify());
      assertNotNull(legendTitle0);
      
      Color color0 = (Color)legendTitle0.getItemPaint();
      assertTrue(legendTitle0.visible);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertNull(legendTitle0.getID());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertTrue(legendTitle0.getNotify());
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getBlue());
      assertNotNull(color0);
      
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 500
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertNotNull(categoryPlot0);
      
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = categoryPlot0.getRangeMarkers(0, layer0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertNull(collection0);
      
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      assertNotNull(legendTitle0);
      
      categoryPlot0.setNoDataMessagePaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer1 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      categoryPlot0.setRenderer(500, categoryItemRenderer1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      
      Layer layer1 = Layer.FOREGROUND;
      legendTitle0.setItemLabelPadding(categoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      
      categoryPlot0.setNoDataMessageFont(valueAxis0.DEFAULT_AXIS_LABEL_FONT);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      
      categoryPlot0.addRangeMarker(0, marker0, layer1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertFalse(layer1.equals((Object)layer0));
      assertNotSame(layer1, layer0);
      
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.CENTER;
      legendTitle0.setHorizontalAlignment(horizontalAlignment0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      
      Color color0 = (Color)legendTitle0.getItemPaint();
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      assertNotNull(color0);
      
      RectangleEdge rectangleEdge0 = legendTitle0.getLegendItemGraphicEdge();
      assertEquals(RectangleEdge.LEFT, rectangleEdge0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      
      legendTitle0.setNotify(false);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertFalse(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      
      Color color1 = (Color)legendTitle0.getItemPaint();
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(255, color1.getAlpha());
      assertEquals(0, color1.getRed());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getBlue());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertFalse(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      assertNotNull(color1);
      assertSame(color1, color0);
      
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn((double)0.0F).when(paintScale0).getLowerBound();
      doReturn(18.75236517616).when(paintScale0).getUpperBound();
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis1);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertTrue(paintScaleLegend0.isVisible());
      assertNotNull(paintScaleLegend0);
      
      paintScaleLegend0.addChangeListener((TitleChangeListener) null);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertTrue(paintScaleLegend0.isVisible());
      
      double double0 = paintScaleLegend0.getStripWidth();
      assertEquals(15.0, double0, 0.01);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertTrue(paintScaleLegend0.isVisible());
      
      ValueAxis valueAxis2 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      paintScaleLegend0.setAxis(valueAxis2);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertTrue(paintScaleLegend0.isVisible());
      
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertTrue(compositeTitle0.visible);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertTrue(compositeTitle0.getNotify());
      assertNotNull(compositeTitle0);
      
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      legendTitle0.setVerticalAlignment(verticalAlignment0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertTrue(legendTitle0.visible);
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertTrue(categoryPlot0.isNotify());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, categoryPlot0.getWeight());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.TOP, legendTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertFalse(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertTrue(legendTitle0.isVisible());
      
      Locale locale0 = Locale.ITALY;
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("IT", locale0.getCountry());
      assertEquals("it", locale0.getLanguage());
      assertEquals("it_IT", locale0.toString());
      assertNotNull(locale0);
      
      Color color2 = Color.darkGray;
      assertEquals(255, color2.getAlpha());
      assertEquals(64, color2.getRed());
      assertEquals(64, color2.getGreen());
      assertEquals((-12566464), color2.getRGB());
      assertEquals(64, color2.getBlue());
      assertEquals(1, color2.getTransparency());
      assertNotNull(color2);
      assertFalse(color2.equals((Object)color1));
      assertFalse(color2.equals((Object)color0));
      assertNotSame(color2, color1);
      assertNotSame(color2, color0);
      
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(11, locale0, valueAxis1.DEFAULT_AXIS_LABEL_FONT, color2, rectangleEdge0, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT, valueAxis0.DEFAULT_TICK_LABEL_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 11
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot(categoryDataset0, categoryAxis0, valueAxis0, categoryItemRenderer0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertNotNull(categoryPlot0);
      
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = categoryPlot0.getRangeMarkers(0, layer0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertNull(collection0);
      
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertNotNull(legendTitle0);
      
      categoryPlot0.setNoDataMessagePaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer1 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      categoryPlot0.setRenderer(500, categoryItemRenderer1);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      
      Layer layer1 = Layer.FOREGROUND;
      legendTitle0.setItemLabelPadding(categoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      
      categoryPlot0.setNoDataMessageFont(valueAxis0.DEFAULT_AXIS_LABEL_FONT);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      
      categoryPlot0.addRangeMarker(0, marker0, layer1);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertFalse(layer1.equals((Object)layer0));
      assertNotSame(layer1, layer0);
      
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.CENTER;
      legendTitle0.setHorizontalAlignment(horizontalAlignment0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      
      Color color0 = (Color)legendTitle0.getItemPaint();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertNotNull(color0);
      
      RectangleEdge rectangleEdge0 = legendTitle0.getLegendItemGraphicEdge();
      assertEquals(RectangleEdge.LEFT, rectangleEdge0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertNull(legendTitle0.getID());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      
      legendTitle0.setNotify(false);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertNull(legendTitle0.getID());
      assertFalse(legendTitle0.getNotify());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      
      Color color1 = (Color)legendTitle0.getItemPaint();
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(0, color1.getRed());
      assertEquals(0, color1.getBlue());
      assertEquals(0, color1.getGreen());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertNull(legendTitle0.getID());
      assertFalse(legendTitle0.getNotify());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertNotNull(color1);
      assertSame(color1, color0);
      
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn((double)0.0F).when(paintScale0).getLowerBound();
      doReturn(18.75236517616).when(paintScale0).getUpperBound();
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis1);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertNotNull(paintScaleLegend0);
      
      double double0 = paintScaleLegend0.getStripWidth();
      assertEquals(15.0, double0, 0.01);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertNull(paintScaleLegend0.getID());
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      
      ValueAxis valueAxis2 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertNotNull(compositeTitle0);
      
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      legendTitle0.setVerticalAlignment(verticalAlignment0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertTrue(legendTitle0.visible);
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isSubplot());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertEquals(2, categoryPlot0.getRendererCount());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertNull(legendTitle0.getID());
      assertEquals(VerticalAlignment.TOP, legendTitle0.getVerticalAlignment());
      assertFalse(legendTitle0.getNotify());
      assertTrue(legendTitle0.isVisible());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      
      Locale locale0 = Locale.ITALY;
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it_IT", locale0.toString());
      assertEquals("ITA", locale0.getISO3Country());
      assertEquals("IT", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("it", locale0.getLanguage());
      assertNotNull(locale0);
      
      Color color2 = Color.darkGray;
      assertEquals(255, color2.getAlpha());
      assertEquals(1, color2.getTransparency());
      assertEquals(64, color2.getGreen());
      assertEquals(64, color2.getBlue());
      assertEquals(64, color2.getRed());
      assertEquals((-12566464), color2.getRGB());
      assertNotNull(color2);
      assertFalse(color2.equals((Object)color1));
      assertFalse(color2.equals((Object)color0));
      assertNotSame(color2, color1);
      assertNotSame(color2, color0);
      
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(11, locale0, valueAxis1.DEFAULT_AXIS_LABEL_FONT, color2, rectangleEdge0, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT, valueAxis0.DEFAULT_TICK_LABEL_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 11
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      assertTrue(textTitle0.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertNotNull(textTitle0);
      
      Font font0 = TextTitle.DEFAULT_FONT;
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertTrue(font0.isBold());
      assertEquals(1, font0.getStyle());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(12, font0.getSize());
      assertFalse(font0.isItalic());
      assertFalse(font0.isTransformed());
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      assertNotNull(font0);
      
      textTitle0.setFont(font0);
      assertTrue(textTitle0.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertEquals(12.0F, font0.getSize2D(), 0.01F);
      assertTrue(font0.isBold());
      assertEquals(1, font0.getStyle());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(12, font0.getSize());
      assertFalse(font0.isItalic());
      assertFalse(font0.isTransformed());
      assertFalse(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals("SansSerif", font0.getName());
      
      TextTitle textTitle1 = (TextTitle)textTitle0.clone();
      assertTrue(textTitle0.visible);
      assertTrue(textTitle1.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertEquals(1.0, textTitle1.getContentXOffset(), 0.01);
      assertFalse(textTitle1.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle1.getMaximumLinesToDisplay());
      assertTrue(textTitle1.getNotify());
      assertEquals(RectangleEdge.TOP, textTitle1.getPosition());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getHorizontalAlignment());
      assertEquals("", textTitle1.getText());
      assertTrue(textTitle1.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getTextAlignment());
      assertEquals(VerticalAlignment.CENTER, textTitle1.getVerticalAlignment());
      assertEquals(0.0, textTitle1.getHeight(), 0.01);
      assertEquals(1.0, textTitle1.getContentYOffset(), 0.01);
      assertNull(textTitle1.getURLText());
      assertNull(textTitle1.getToolTipText());
      assertNull(textTitle1.getID());
      assertEquals(0.0, textTitle1.getWidth(), 0.01);
      assertNotNull(textTitle1);
      assertTrue(textTitle1.equals((Object)textTitle0));
      assertNotSame(textTitle0, textTitle1);
      assertNotSame(textTitle1, textTitle0);
      
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      textTitle0.setVerticalAlignment(verticalAlignment0);
      assertTrue(textTitle0.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      textTitle0.setPadding(0.0, (-338.9149), 1124.62013124, 0.0);
      assertTrue(textTitle0.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      boolean boolean0 = textTitle0.getExpandToFitSpace();
      assertFalse(boolean0);
      assertTrue(textTitle0.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      CategoryPlot categoryPlot0 = new CategoryPlot();
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertNotNull(categoryPlot0);
      
      JFreeChart jFreeChart0 = new JFreeChart("f", categoryPlot0);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNotNull(jFreeChart0);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(35, 10);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(35, bufferedImage0.getTileWidth());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(35, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(bufferedImage0);
      
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(35, bufferedImage0.getTileWidth());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(35, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertNotNull(sunGraphics2D0);
      
      Size2D size2D0 = textTitle0.arrangeNN(sunGraphics2D0);
      assertTrue(textTitle0.visible);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
      assertEquals(0, sunGraphics2D0.strokeHint);
      assertEquals(0, sunGraphics2D0.transformState);
      assertEquals(0, sunGraphics2D0.renderHint);
      assertEquals(1, sunGraphics2D0.interpolationType);
      assertEquals(1, sunGraphics2D0.antialiasHint);
      assertEquals(0, sunGraphics2D0.strokeState);
      assertEquals(0, sunGraphics2D0.paintState);
      assertEquals(0, sunGraphics2D0.compositeState);
      assertEquals(0, sunGraphics2D0.constrainY);
      assertEquals(0, sunGraphics2D0.clipState);
      assertEquals(0, sunGraphics2D0.constrainX);
      assertEquals(0, sunGraphics2D0.transY);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
      assertEquals(0, sunGraphics2D0.transX);
      assertEquals((-1), sunGraphics2D0.pixel);
      assertEquals((-1), sunGraphics2D0.eargb);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(1, bufferedImage0.getNumYTiles());
      assertFalse(bufferedImage0.isAlphaPremultiplied());
      assertTrue(bufferedImage0.hasTileWriters());
      assertEquals(10, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(0, bufferedImage0.getMinTileX());
      assertEquals(0, bufferedImage0.getTileGridYOffset());
      assertEquals(0, bufferedImage0.getMinTileY());
      assertEquals(2, bufferedImage0.getType());
      assertEquals(35, bufferedImage0.getTileWidth());
      assertEquals(10, bufferedImage0.getHeight());
      assertEquals(35, bufferedImage0.getWidth());
      assertEquals(0, bufferedImage0.getTileGridXOffset());
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
      assertEquals(0, bufferedImage0.getMinX());
      assertEquals(0, bufferedImage0.getMinY());
      assertEquals(1, bufferedImage0.getNumXTiles());
      assertEquals(0.0, size2D0.getWidth(), 0.01);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertNotNull(size2D0);
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertNotSame(textTitle0, textTitle1);
      
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertNotNull(compositeTitle0);
      
      CompositeTitle compositeTitle1 = (CompositeTitle)compositeTitle0.clone();
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertEquals(VerticalAlignment.CENTER, compositeTitle1.getVerticalAlignment());
      assertTrue(compositeTitle1.getNotify());
      assertEquals(RectangleEdge.TOP, compositeTitle1.getPosition());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle1.getHorizontalAlignment());
      assertTrue(compositeTitle1.isVisible());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertNotNull(compositeTitle1);
      assertTrue(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      
      BlockContainer blockContainer0 = new BlockContainer();
      assertTrue(blockContainer0.isEmpty());
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertNotNull(blockContainer0);
      
      compositeTitle0.setTitleContainer(blockContainer0);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(VerticalAlignment.CENTER, compositeTitle0.getVerticalAlignment());
      assertEquals(RectangleEdge.TOP, compositeTitle0.getPosition());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(HorizontalAlignment.CENTER, compositeTitle0.getHorizontalAlignment());
      assertTrue(blockContainer0.isEmpty());
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertTrue(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      
      LegendTitle legendTitle0 = jFreeChart0.getLegend(0);
      assertTrue(legendTitle0.visible);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(RectangleEdge.BOTTOM, legendTitle0.getPosition());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertNull(legendTitle0.getID());
      assertEquals(2.0, legendTitle0.getContentYOffset(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(2.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      assertNotNull(legendTitle0);
      
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      legendTitle0.setLegendItemGraphicEdge(rectangleEdge0);
      assertTrue(legendTitle0.visible);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertEquals(RectangleEdge.BOTTOM, legendTitle0.getPosition());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertNull(legendTitle0.getID());
      assertEquals(2.0, legendTitle0.getContentYOffset(), 0.01);
      assertTrue(legendTitle0.isVisible());
      assertEquals(2.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
      assertEquals(0, categoryPlot0.getWeight());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertNull(categoryPlot0.getNoDataMessage());
      assertEquals(0.5F, categoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(categoryPlot0.isRangeZeroBaselineVisible());
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
      assertEquals(1, categoryPlot0.getRangeAxisCount());
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(PlotOrientation.VERTICAL, categoryPlot0.getOrientation());
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
      assertFalse(categoryPlot0.fetchElementHintingFlag());
      assertEquals(CategoryAnchor.MIDDLE, categoryPlot0.getDomainGridlinePosition());
      assertTrue(categoryPlot0.isOutlineVisible());
      assertFalse(categoryPlot0.isRangeCrosshairVisible());
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getRowRenderingOrder());
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
      assertFalse(categoryPlot0.isSubplot());
      assertTrue(categoryPlot0.isNotify());
      assertEquals(SortOrder.ASCENDING, categoryPlot0.getColumnRenderingOrder());
      assertFalse(categoryPlot0.isRangePannable());
      assertEquals(1, categoryPlot0.getRendererCount());
      assertTrue(categoryPlot0.isRangeZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
      assertEquals(DatasetRenderingOrder.REVERSE, categoryPlot0.getDatasetRenderingOrder());
      assertFalse(categoryPlot0.isRangeMinorGridlinesVisible());
      assertEquals(15, categoryPlot0.getBackgroundImageAlignment());
      assertTrue(categoryPlot0.isRangeGridlinesVisible());
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(categoryPlot0.isDomainPannable());
      assertFalse(jFreeChart0.getElementHinting());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.isNotify());
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertNull(jFreeChart0.getID());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(jFreeChart0.getAntiAlias());
      
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertNotNull(paintScaleLegend0);
      
      TitleChangeEvent titleChangeEvent0 = new TitleChangeEvent(textTitle1);
      assertTrue(textTitle0.visible);
      assertTrue(textTitle1.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertEquals(1.0, textTitle1.getContentXOffset(), 0.01);
      assertFalse(textTitle1.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle1.getMaximumLinesToDisplay());
      assertTrue(textTitle1.getNotify());
      assertEquals(RectangleEdge.TOP, textTitle1.getPosition());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getHorizontalAlignment());
      assertEquals("", textTitle1.getText());
      assertTrue(textTitle1.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getTextAlignment());
      assertEquals(VerticalAlignment.CENTER, textTitle1.getVerticalAlignment());
      assertEquals(0.0, textTitle1.getHeight(), 0.01);
      assertEquals(1.0, textTitle1.getContentYOffset(), 0.01);
      assertNull(textTitle1.getURLText());
      assertNull(textTitle1.getToolTipText());
      assertNull(textTitle1.getID());
      assertEquals(0.0, textTitle1.getWidth(), 0.01);
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertNotNull(titleChangeEvent0);
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertFalse(textTitle1.equals((Object)textTitle0));
      
      JFreeChart jFreeChart1 = titleChangeEvent0.getChart();
      assertTrue(textTitle0.visible);
      assertTrue(textTitle1.visible);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(VerticalAlignment.BOTTOM, textTitle0.getVerticalAlignment());
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(0.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals((-338.9149), textTitle0.getContentXOffset(), 0.01);
      assertEquals("", textTitle0.getText());
      assertFalse(textTitle0.getExpandToFitSpace());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertEquals(1.0, textTitle1.getContentXOffset(), 0.01);
      assertFalse(textTitle1.getExpandToFitSpace());
      assertEquals(Integer.MAX_VALUE, textTitle1.getMaximumLinesToDisplay());
      assertTrue(textTitle1.getNotify());
      assertEquals(RectangleEdge.TOP, textTitle1.getPosition());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getHorizontalAlignment());
      assertEquals("", textTitle1.getText());
      assertTrue(textTitle1.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle1.getTextAlignment());
      assertEquals(VerticalAlignment.CENTER, textTitle1.getVerticalAlignment());
      assertEquals(0.0, textTitle1.getHeight(), 0.01);
      assertEquals(1.0, textTitle1.getContentYOffset(), 0.01);
      assertNull(textTitle1.getURLText());
      assertNull(textTitle1.getToolTipText());
      assertNull(textTitle1.getID());
      assertEquals(0.0, textTitle1.getWidth(), 0.01);
      assertEquals(ChartChangeEventType.GENERAL, titleChangeEvent0.getType());
      assertNull(jFreeChart1);
      assertFalse(textTitle0.equals((Object)textTitle1));
      assertFalse(textTitle1.equals((Object)textTitle0));
      assertNotSame(textTitle0, textTitle1);
      assertNotSame(textTitle1, textTitle0);
      
      paintScaleLegend0.removeChangeListener((TitleChangeListener) null);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      
      AxisChangeEvent axisChangeEvent0 = mock(AxisChangeEvent.class, new ViolatedAssumptionAnswer());
      doReturn((Axis) null).when(axisChangeEvent0).getAxis();
      paintScaleLegend0.axisChanged(axisChangeEvent0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertTrue(paintScaleLegend0.isVisible());
      assertNull(paintScaleLegend0.getID());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null);
      assertTrue(legendTitle0.visible);
      assertTrue(legendTitle0.isVisible());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertNotNull(legendTitle0);
      
      legendTitle0.hashCode();
      assertTrue(legendTitle0.visible);
      assertTrue(legendTitle0.isVisible());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      
      SystemColor systemColor0 = SystemColor.desktop;
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(92, systemColor0.getBlue());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(92, systemColor0.getGreen());
      assertEquals((-16753572), systemColor0.getRGB());
      assertEquals(0, systemColor0.getRed());
      assertNotNull(systemColor0);
      
      legendTitle0.setBackgroundPaint(systemColor0);
      assertTrue(legendTitle0.visible);
      assertTrue(legendTitle0.isVisible());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(92, systemColor0.getBlue());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(92, systemColor0.getGreen());
      assertEquals((-16753572), systemColor0.getRGB());
      assertEquals(0, systemColor0.getRed());
      
      RectangleInsets rectangleInsets0 = legendTitle0.getItemLabelPadding();
      assertTrue(legendTitle0.visible);
      assertTrue(legendTitle0.isVisible());
      assertEquals(1.0, legendTitle0.getContentXOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, legendTitle0.getHorizontalAlignment());
      assertTrue(legendTitle0.getNotify());
      assertEquals(RectangleEdge.TOP, legendTitle0.getPosition());
      assertEquals(SortOrder.ASCENDING, legendTitle0.getSortOrder());
      assertNull(legendTitle0.getID());
      assertEquals(0.0, legendTitle0.getWidth(), 0.01);
      assertEquals(RectangleEdge.LEFT, legendTitle0.getLegendItemGraphicEdge());
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicAnchor());
      assertEquals(VerticalAlignment.CENTER, legendTitle0.getVerticalAlignment());
      assertEquals(1.0, legendTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, legendTitle0.getHeight(), 0.01);
      assertEquals(RectangleAnchor.CENTER, legendTitle0.getLegendItemGraphicLocation());
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(2.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(2.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(2.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(2.0, rectangleInsets0.getLeft(), 0.01);
      assertNotNull(rectangleInsets0);
      
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle((-470));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style -470
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle("");
      assertTrue(textTitle0.visible);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals("", textTitle0.getText());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      assertNotNull(textTitle0);
      
      VerticalAlignment verticalAlignment0 = textTitle0.getVerticalAlignment();
      assertEquals(VerticalAlignment.CENTER, verticalAlignment0);
      assertTrue(textTitle0.visible);
      assertFalse(textTitle0.getExpandToFitSpace());
      assertEquals("", textTitle0.getText());
      assertTrue(textTitle0.getNotify());
      assertNull(textTitle0.getURLText());
      assertNull(textTitle0.getID());
      assertNull(textTitle0.getToolTipText());
      assertEquals(RectangleEdge.TOP, textTitle0.getPosition());
      assertEquals(1.0, textTitle0.getContentYOffset(), 0.01);
      assertEquals(0.0, textTitle0.getWidth(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getHorizontalAlignment());
      assertEquals(1.0, textTitle0.getContentXOffset(), 0.01);
      assertEquals(Integer.MAX_VALUE, textTitle0.getMaximumLinesToDisplay());
      assertTrue(textTitle0.isVisible());
      assertEquals(HorizontalAlignment.CENTER, textTitle0.getTextAlignment());
      assertEquals(0.0, textTitle0.getHeight(), 0.01);
      assertEquals(VerticalAlignment.CENTER, textTitle0.getVerticalAlignment());
      
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(197.540343222).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertNull(paintScaleLegend0.getID());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      assertNotNull(paintScaleLegend0);
      
      boolean boolean0 = paintScaleLegend0.isStripOutlineVisible();
      assertTrue(boolean0);
      assertTrue(paintScaleLegend0.visible);
      assertEquals(1.0, paintScaleLegend0.getContentYOffset(), 0.01);
      assertEquals(HorizontalAlignment.CENTER, paintScaleLegend0.getHorizontalAlignment());
      assertTrue(paintScaleLegend0.isVisible());
      assertEquals(1.0, paintScaleLegend0.getContentXOffset(), 0.01);
      assertEquals(AxisLocation.BOTTOM_OR_LEFT, paintScaleLegend0.getAxisLocation());
      assertEquals(0.0, paintScaleLegend0.getHeight(), 0.01);
      assertTrue(paintScaleLegend0.isStripOutlineVisible());
      assertEquals(VerticalAlignment.CENTER, paintScaleLegend0.getVerticalAlignment());
      assertTrue(paintScaleLegend0.getNotify());
      assertEquals(0.0, paintScaleLegend0.getAxisOffset(), 0.01);
      assertEquals(0.0, paintScaleLegend0.getWidth(), 0.01);
      assertEquals(RectangleEdge.TOP, paintScaleLegend0.getPosition());
      assertNull(paintScaleLegend0.getID());
      assertEquals(15.0, paintScaleLegend0.getStripWidth(), 0.01);
      assertEquals(100, paintScaleLegend0.getSubdivisionCount());
      
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis2 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset2 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PaintScale paintScale0 = mock(PaintScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.08).when(paintScale0).getLowerBound();
      doReturn(0.0).when(paintScale0).getUpperBound();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, valueAxis0);
      paintScaleLegend0.setStripOutlineVisible(true);
      paintScaleLegend0.setBorder(2.0F, 0.05, 0.05, 1217.531724484694);
      SystemColor systemColor0 = SystemColor.textText;
      paintScaleLegend0.setBackgroundPaint(systemColor0);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      CategoryAxis categoryAxis0 = mock(CategoryAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedLegendItems();
      CategoryItemRenderer categoryItemRenderer0 = mock(CategoryItemRenderer.class, new ViolatedAssumptionAnswer());
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TextTitle textTitle0 = new TextTitle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Plot plot0 = categoryPlot0.getRootPlot();
      JFreeChart jFreeChart0 = new JFreeChart("rG", textTitle0.DEFAULT_FONT, plot0, true);
      jFreeChart0.getLegend();
      EntityCollection entityCollection0 = mock(EntityCollection.class, new ViolatedAssumptionAnswer());
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10, (-3781.3), 10, 101.64039506080616);
      assertEquals((-3781.3), rectangle2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getLegendItems();
      Arrangement arrangement0 = mock(Arrangement.class, new ViolatedAssumptionAnswer());
      Arrangement arrangement1 = mock(Arrangement.class, new ViolatedAssumptionAnswer());
      LegendTitle legendTitle0 = new LegendTitle(categoryPlot0, arrangement0, arrangement1);
      CategoryPlot categoryPlot1 = new CategoryPlot();
      categoryPlot0.getChart();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      legendTitle0.setVerticalAlignment(verticalAlignment0);
      legendTitle0.addChangeListener((TitleChangeListener) null);
      legendTitle0.getHorizontalAlignment();
      CompositeTitle compositeTitle0 = new CompositeTitle();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      VerticalAlignment verticalAlignment1 = VerticalAlignment.TOP;
      ImageTitle imageTitle0 = null;
      try {
        imageTitle0 = new ImageTitle((Image) null, 10, 14, rectangleEdge0, horizontalAlignment0, verticalAlignment1, legendTitle0.DEFAULT_PADDING);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.title.ImageTitle", e);
      }
  }
}
