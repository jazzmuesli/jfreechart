/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:37:09 GMT 2019
 */

package org.jfree.chart.imagemap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicDriveToolTipTagFragmentGenerator_ESTest extends DynamicDriveToolTipTagFragmentGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator("*$c", 1245);
      // Undeclared exception!
      try { 
        dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator("*$c", 1245);
      String string0 = dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("*$c");
      assertEquals(" onMouseOver=\"return stm(['*$c','*$c'],Style[1245]);\" onMouseOut=\"return htm();\"", string0);
  }
}
