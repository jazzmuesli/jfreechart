/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:38:15 GMT 2019
 */

package org.jfree.chart.encoders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.jfree.chart.encoders.SunPNGEncoderAdapter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SunPNGEncoderAdapter_ESTest extends SunPNGEncoderAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("png", true);
      sunPNGEncoderAdapter0.encode(bufferedImage0, (OutputStream) mockFileOutputStream0);
      assertEquals(0.5F, bufferedImage0.getAccelerationPriority(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      // Undeclared exception!
      try { 
        sunPNGEncoderAdapter0.encode((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'bufferedImage' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      // Undeclared exception!
      try { 
        sunPNGEncoderAdapter0.encode((BufferedImage) null, (OutputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'bufferedImage' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      sunPNGEncoderAdapter0.setQuality(0.0F);
      assertFalse(sunPNGEncoderAdapter0.isEncodingAlpha());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      sunPNGEncoderAdapter0.setEncodingAlpha(false);
      assertFalse(sunPNGEncoderAdapter0.isEncodingAlpha());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      BufferedImage bufferedImage0 = new BufferedImage(9, 9, 9);
      byte[] byteArray0 = sunPNGEncoderAdapter0.encode(bufferedImage0);
      assertEquals(69, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      float float0 = sunPNGEncoderAdapter0.getQuality();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SunPNGEncoderAdapter sunPNGEncoderAdapter0 = new SunPNGEncoderAdapter();
      boolean boolean0 = sunPNGEncoderAdapter0.isEncodingAlpha();
      assertFalse(boolean0);
  }
}
