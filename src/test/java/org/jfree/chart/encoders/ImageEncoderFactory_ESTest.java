/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:32:29 GMT 2019
 */

package org.jfree.chart.encoders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.encoders.ImageEncoder;
import org.jfree.chart.encoders.ImageEncoderFactory;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImageEncoderFactory_ESTest extends ImageEncoderFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImageEncoder imageEncoder0 = ImageEncoderFactory.newInstance("org.jfree.chart.encoders.SunPNGEncoderAdapter", 0.0F);
      assertFalse(imageEncoder0.isEncodingAlpha());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("WI!(4&O&'y5Eh+-*", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - WI!(4&O&'y5Eh+-*
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("`oksIp$cf~P", 443.18207F, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - `oksIp$cf~P
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance("4#C\"nceF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - 4#C\"nceF
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ImageEncoder imageEncoder0 = ImageEncoderFactory.newInstance("org.jfree.chart.encoders.SunPNGEncoderAdapter");
      assertFalse(imageEncoder0.isEncodingAlpha());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ImageEncoder imageEncoder0 = ImageEncoderFactory.newInstance("org.jfree.chart.encoders.SunPNGEncoderAdapter", (-1.0F), true);
      assertEquals(0.0F, imageEncoder0.getQuality(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ImageEncoderFactory imageEncoderFactory0 = new ImageEncoderFactory();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ImageEncoderFactory.setImageEncoder("", "org.jfree.chart.encoders.SunPNGEncoderAdapter");
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImageEncoderFactory.newInstance((String) null, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported image format - null
         //
         verifyException("org.jfree.chart.encoders.ImageEncoderFactory", e);
      }
  }
}
