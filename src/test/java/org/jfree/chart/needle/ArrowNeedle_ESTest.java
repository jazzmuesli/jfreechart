/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:06:54 GMT 2019
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.WritableRaster;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.ArrowNeedle;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ArrowNeedle_ESTest extends ArrowNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      int[] intArray0 = new int[6];
      BigInteger bigInteger0 = BigInteger.ZERO;
      IndexColorModel indexColorModel0 = new IndexColorModel(1, 1, intArray0, (-831), 0, bigInteger0);
      WritableRaster writableRaster0 = indexColorModel0.createCompatibleWritableRaster(1, 4);
      BufferedImage bufferedImage0 = indexColorModel0.convertToIntDiscrete(writableRaster0, false);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2103.002, 2103.002, 0.0, (-3672.4711442625976));
      arrowNeedle0.drawNeedle(sunGraphics2D0, rectangle2D_Double0, (Point2D) null, 1);
      assertEquals(0, sunGraphics2D0.strokeState);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Point point0 = new Point((-1013), 1);
      Rectangle rectangle0 = new Rectangle(point0);
      arrowNeedle0.draw(graphics2D0, (Rectangle2D) rectangle0, (Point2D) point0, (double) 1);
      assertEquals(0.5, arrowNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      ArrowNeedle arrowNeedle1 = new ArrowNeedle(false);
      boolean boolean0 = arrowNeedle1.equals(arrowNeedle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      Color color0 = Color.GRAY;
      arrowNeedle0.setHighlightPaint(color0);
      ArrowNeedle arrowNeedle1 = new ArrowNeedle(true);
      boolean boolean0 = arrowNeedle0.equals(arrowNeedle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      Object object0 = arrowNeedle0.clone();
      boolean boolean0 = arrowNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      boolean boolean0 = arrowNeedle0.equals(arrowNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      boolean boolean0 = arrowNeedle0.equals("%M");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, 783.44F, 2.0F, 0.0F);
      arrowNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Float0, (Point2D) null, 0.0F);
      assertEquals(2.0F, rectangle2D_Float0.width, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      arrowNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Float0, point2D_Double0, (-550.77));
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 1210.5F, 1210.5F, (-422.1179F));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      arrowNeedle0.drawNeedle(sunGraphics2D0, rectangle2D_Float0, point2D_Float0, 0.0);
      assertEquals(0, sunGraphics2D0.paintState);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      arrowNeedle0.hashCode();
  }
}
