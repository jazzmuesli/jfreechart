/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:15:01 GMT 2019
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.needle.ShipNeedle;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ShipNeedle_ESTest extends ShipNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Line2D.Float line2D_Float0 = new Line2D.Float(927.0F, 927.0F, 927.0F, 927.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 14.0);
      shipNeedle0.drawNeedle((Graphics2D) null, rectangle2D0, point2D_Double0, 14.0);
      assertEquals(5, shipNeedle0.getSize());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Point point0 = new Point(0, 0);
      Dimension dimension0 = new Dimension(0, 0);
      dimension0.height = (-3144);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      shipNeedle0.drawNeedle((Graphics2D) null, rectangle2D0, point0, 0);
      assertEquals(0, point0.y);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      boolean boolean0 = shipNeedle0.equals(shipNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      boolean boolean0 = shipNeedle0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Object object0 = new Object();
      boolean boolean0 = shipNeedle0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      BufferedImage bufferedImage0 = new BufferedImage(794, 794, 1);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = (Rectangle)polygon0.getBounds2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0, 794, 0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)rectangle2D_Float0.createUnion(rectangle0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      shipNeedle0.drawNeedle(sunGraphics2D0, rectangle2D_Double0, point2D_Float0, (-381.14881710902));
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      shipNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Float0, (Point2D) null, 1.0);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Object object0 = shipNeedle0.clone();
      boolean boolean0 = shipNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.hashCode();
  }
}
