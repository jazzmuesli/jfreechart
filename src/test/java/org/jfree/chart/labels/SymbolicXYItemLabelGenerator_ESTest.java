/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:16:00 GMT 2019
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.labels.SymbolicXYItemLabelGenerator;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.gantt.XYTaskDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SymbolicXYItemLabelGenerator_ESTest extends SymbolicXYItemLabelGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      MatrixSeries matrixSeries0 = mock(MatrixSeries.class, new ViolatedAssumptionAnswer());
      doReturn(335).when(matrixSeries0).getItemColumn(anyInt());
      doReturn(335).when(matrixSeries0).getItemRow(anyInt());
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      String string0 = symbolicXYItemLabelGenerator0.generateToolTip(matrixSeriesCollection0, 0, 1067);
      assertEquals("X: 335.0, Y: 335.0", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip((XYDataset) null, 11, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.labels.SymbolicXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      MatrixSeries matrixSeries0 = mock(MatrixSeries.class, new ViolatedAssumptionAnswer());
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip(matrixSeriesCollection0, 100, 127);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 100, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip(xYTaskDataset0, 1442, 1442);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.gantt.TaskSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      boolean boolean0 = symbolicXYItemLabelGenerator0.equals(symbolicXYItemLabelGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      boolean boolean0 = symbolicXYItemLabelGenerator0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      MatrixSeries matrixSeries0 = mock(MatrixSeries.class, new ViolatedAssumptionAnswer());
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip(matrixSeriesCollection0, (-1235), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      symbolicXYItemLabelGenerator0.hashCode();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      MatrixSeries matrixSeries0 = mock(MatrixSeries.class, new ViolatedAssumptionAnswer());
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      String string0 = symbolicXYItemLabelGenerator0.generateLabel(matrixSeriesCollection0, 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      Object object0 = symbolicXYItemLabelGenerator0.clone();
      boolean boolean0 = symbolicXYItemLabelGenerator0.equals(object0);
      assertTrue(boolean0);
  }
}
