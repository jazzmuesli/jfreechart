/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:10:07 GMT 2019
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYZDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardXYZToolTipGenerator_ESTest extends StandardXYZToolTipGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("l", dateFormat0, dateFormat0, dateFormat0);
      Short short0 = new Short((short)1);
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2}, {3})").when(xYZDataset0).getSeriesKey(anyInt());
      doReturn(short0).when(xYZDataset0).getX(anyInt() , anyInt());
      doReturn(short0).when(xYZDataset0).getY(anyInt() , anyInt());
      doReturn((Number) null).when(xYZDataset0).getZ(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateToolTip(xYZDataset0, 0, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Date
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("l", dateFormat0, dateFormat0, dateFormat0);
      Short short0 = new Short((short)1);
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2}, {3})").when(xYZDataset0).getSeriesKey(anyInt());
      doReturn(short0).when(xYZDataset0).getX(anyInt() , anyInt());
      doReturn((Number) null).when(xYZDataset0).getY(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateToolTip(xYZDataset0, 0, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Date
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", dateFormat0, dateFormat0, dateFormat0);
      NumberFormat numberFormat0 = standardXYZToolTipGenerator0.getZFormat();
      assertNull(numberFormat0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.US;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols(locale0);
      DecimalFormat decimalFormat0 = new DecimalFormat("n#`%RJV8J&RYFf", decimalFormatSymbols0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", decimalFormat0, decimalFormat0, decimalFormat0);
      DecimalFormat decimalFormat1 = (DecimalFormat)standardXYZToolTipGenerator0.getZFormat();
      assertEquals("`%RJV8J&RYFf", decimalFormat1.getNegativeSuffix());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      DecimalFormat decimalFormat0 = (DecimalFormat)standardXYZToolTipGenerator0.getZFormat();
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      DecimalFormat decimalFormat0 = (DecimalFormat)standardXYZToolTipGenerator0.getZFormat();
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      DateFormat dateFormat0 = standardXYZToolTipGenerator0.getZDateFormat();
      assertNull(dateFormat0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("T:`dr~k");
      NumberFormat numberFormat0 = mock(NumberFormat.class, new ViolatedAssumptionAnswer());
      doReturn(stringBuffer0, (StringBuffer) null).when(numberFormat0).format(any() , any(java.lang.StringBuffer.class) , any(java.text.FieldPosition.class));
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2}, {3})").when(xYZDataset0).getSeriesKey(anyInt());
      doReturn(bigInteger0).when(xYZDataset0).getX(anyInt() , anyInt());
      doReturn((Number) null).when(xYZDataset0).getY(anyInt() , anyInt());
      int int0 = 2318;
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateToolTip(xYZDataset0, 2318, 2318);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.Format", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      Byte byte0 = new Byte((byte)13);
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2})").when(xYZDataset0).getSeriesKey(anyInt());
      doReturn(byte0).when(xYZDataset0).getX(anyInt() , anyInt());
      doReturn(byte0).when(xYZDataset0).getY(anyInt() , anyInt());
      doReturn(byte0).when(xYZDataset0).getZ(anyInt() , anyInt());
      String string0 = standardXYZToolTipGenerator0.generateLabelString(xYZDataset0, 3041, (-2888));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("l", dateFormat0, dateFormat0, dateFormat0);
      Short short0 = new Short((short)1);
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2}, {3})").when(xYZDataset0).getSeriesKey(anyInt());
      doReturn(short0).when(xYZDataset0).getX(anyInt() , anyInt());
      doReturn(short0).when(xYZDataset0).getY(anyInt() , anyInt());
      doReturn(short0).when(xYZDataset0).getZ(anyInt() , anyInt());
      Object[] objectArray0 = standardXYZToolTipGenerator0.createItemArray(xYZDataset0, (-1616), (short)1);
      assertEquals(4, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumberFormat numberFormat0 = mock(NumberFormat.class, new ViolatedAssumptionAnswer());
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("m[e", numberFormat0, numberFormat0, numberFormat0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateToolTip((XYZDataset) matrixSeriesCollection0, 0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateToolTip((XYZDataset) defaultXYZDataset0, (-3646), 335);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.DefaultXYZDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("vH", dateFormat0, dateFormat0, dateFormat0);
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateLabelString(defaultXYZDataset0, 3396, 1341);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.DefaultXYZDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", dateFormat0, dateFormat0, dateFormat0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateLabelString(xYDataset0, 5, 5);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataset$MockitoMock$54906924 cannot be cast to org.jfree.data.xy.XYZDataset
         //
         verifyException("org.jfree.chart.labels.StandardXYZToolTipGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NumberFormat numberFormat0 = mock(NumberFormat.class, new ViolatedAssumptionAnswer());
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator(".wqtnL6BfEL9", numberFormat0, numberFormat0, numberFormat0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.createItemArray(matrixSeriesCollection0, 0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn(comparable0).when(xYZDataset0).getSeriesKey(anyInt());
      doReturn((Number) null).when(xYZDataset0).getX(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.createItemArray(xYZDataset0, 612, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.createItemArray(defaultXYZDataset0, 274, (short)3571);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.DefaultXYZDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = null;
      try {
        standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator(")", (NumberFormat) null, (NumberFormat) null, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'xFormat' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = null;
      try {
        standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator((String) null, dateFormat0, dateFormat0, dateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      BigInteger bigInteger0 = BigInteger.ONE;
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2}, {3})").when(xYZDataset0).getSeriesKey(anyInt());
      doReturn(bigInteger0).when(xYZDataset0).getX(anyInt() , anyInt());
      doReturn(bigInteger0).when(xYZDataset0).getY(anyInt() , anyInt());
      doReturn((Number) null).when(xYZDataset0).getZ(anyInt() , anyInt());
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateLabelString(xYZDataset0, 2, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("OpU=f<E?p'T0H0=W9i", dateFormat0, dateFormat0, dateFormat0);
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator1 = new StandardXYZToolTipGenerator("", numberFormat0, numberFormat0, numberFormat0);
      boolean boolean0 = standardXYZToolTipGenerator0.equals(standardXYZToolTipGenerator1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      Object object0 = standardXYZToolTipGenerator0.clone();
      boolean boolean0 = standardXYZToolTipGenerator0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      boolean boolean0 = standardXYZToolTipGenerator0.equals(standardXYZToolTipGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("vH", dateFormat0, dateFormat0, dateFormat0);
      boolean boolean0 = standardXYZToolTipGenerator0.equals("vH");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      MatrixSeries matrixSeries0 = new MatrixSeries("SN7c4XEJZ%WBtnu", 682, 1);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateToolTip((XYZDataset) matrixSeriesCollection0, 0, 2485);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2485
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("l", dateFormat0, dateFormat0, dateFormat0);
      DateFormat dateFormat1 = standardXYZToolTipGenerator0.getZDateFormat();
      assertTrue(dateFormat1.isLenient());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("l", dateFormat0, dateFormat0, dateFormat0);
      Short short0 = new Short((short)1);
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2}, {3})").when(xYZDataset0).getSeriesKey(anyInt());
      doReturn(short0).when(xYZDataset0).getX(anyInt() , anyInt());
      doReturn(short0).when(xYZDataset0).getY(anyInt() , anyInt());
      doReturn(short0).when(xYZDataset0).getZ(anyInt() , anyInt());
      String string0 = standardXYZToolTipGenerator0.generateToolTip(xYZDataset0, 0, 0);
      assertEquals("l", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("r>K`JD'E*NQ", dateFormat0, dateFormat0, dateFormat0);
      // Undeclared exception!
      try { 
        standardXYZToolTipGenerator0.generateLabelString((XYDataset) null, 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.labels.StandardXYZToolTipGenerator", e);
      }
  }
}
