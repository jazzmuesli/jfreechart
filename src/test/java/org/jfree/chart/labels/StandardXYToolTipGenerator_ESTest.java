/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:29:36 GMT 2019
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.time.Instant;
import java.util.Date;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardXYToolTipGenerator_ESTest extends StandardXYToolTipGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, dateFormat0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[3];
      Instant instant0 = MockInstant.ofEpochSecond((-1017L));
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 0.0, 0, (-1.0), Double.NaN, (-1442.180811));
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItemArray0[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("", oHLCDataItemArray0);
      String string0 = standardXYToolTipGenerator0.generateToolTip(defaultOHLCDataset0, (-1774), 1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, numberFormat0, numberFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, numberFormat0, (DateFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'yFormat' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, dateFormat0, dateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", numberFormat0, numberFormat0);
      assertEquals("", standardXYToolTipGenerator0.getFormatString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      Locale locale0 = new Locale("z", "z");
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("z", dateFormat0, numberFormat0);
      TimeSeries timeSeries0 = new TimeSeries("{0}: ({1}, {2})");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(timeSeriesCollection0, (-1366), (-1366));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'series' argument is out of bounds (-1366).
         //
         verifyException("org.jfree.data.time.TimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, dateFormat0);
      Object object0 = standardXYToolTipGenerator0.clone();
      boolean boolean0 = standardXYToolTipGenerator0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("");
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", choiceFormat0, dateFormat0);
      boolean boolean0 = standardXYToolTipGenerator0.equals(standardXYToolTipGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("");
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", choiceFormat0, dateFormat0);
      boolean boolean0 = standardXYToolTipGenerator0.equals(dateFormat0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip((XYDataset) null, (-2256), 278);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getTimeInstance(0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, dateFormat0);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(histogramDataset0, (-733), (-764));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      MatrixSeries matrixSeries0 = new MatrixSeries("{0}: ({1}, {2})", 1, 1);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      String string0 = standardXYToolTipGenerator0.generateToolTip(matrixSeriesCollection0, 0, 0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("");
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", choiceFormat0, dateFormat0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(timeTableXYDataset0, 152, 1237);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 152, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
