/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:14:23 GMT 2019
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.ui.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ItemLabelPosition_ESTest extends ItemLabelPosition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE2;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, (-1431.57));
      TextAnchor textAnchor1 = itemLabelPosition0.getRotationAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1, textAnchor1, 0.0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertFalse(boolean0);
      assertFalse(itemLabelPosition1.equals((Object)itemLabelPosition0));
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      TextAnchor textAnchor0 = itemLabelPosition0.getTextAnchor();
      TextAnchor textAnchor1 = itemLabelPosition0.getRotationAnchor();
      ItemLabelAnchor itemLabelAnchor0 = itemLabelPosition0.getItemLabelAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1, textAnchor0, 0.0);
      TextAnchor textAnchor2 = itemLabelPosition1.getTextAnchor();
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertNotSame(textAnchor2, textAnchor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      TextAnchor textAnchor0 = itemLabelPosition0.getTextAnchor();
      ItemLabelAnchor itemLabelAnchor0 = itemLabelPosition0.getItemLabelAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 0.0);
      itemLabelPosition1.getRotationAnchor();
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertFalse(itemLabelPosition1.equals((Object)itemLabelPosition0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE12;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 5512.698449817806);
      double double0 = itemLabelPosition0.getAngle();
      assertEquals(5512.698449817806, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE6;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, (-2362.549));
      double double0 = itemLabelPosition0.getAngle();
      assertEquals((-2362.549), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.OUTSIDE7;
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, (TextAnchor) null, (TextAnchor) null, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'textAnchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE1;
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, (TextAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'textAnchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE4;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn("SWLj0@kf&PiKRf&20uc").when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 506.895166214299);
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1, textAnchor1, 0.0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertFalse(itemLabelPosition1.equals((Object)itemLabelPosition0));
      assertFalse(boolean0);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE10;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(">`H6n2qA=vas@)3'").when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 175.7);
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1);
      ItemLabelPosition itemLabelPosition2 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1);
      boolean boolean0 = itemLabelPosition1.equals(itemLabelPosition2);
      assertEquals(0.0, itemLabelPosition2.getAngle(), 0.01);
      assertFalse(itemLabelPosition2.equals((Object)itemLabelPosition0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE1;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      TextAnchor textAnchor1 = itemLabelPosition0.getRotationAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1, textAnchor1, 0.0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE5;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE1;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelAnchor0);
      assertFalse(boolean0);
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition0);
      assertTrue(boolean0);
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE1;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      double double0 = itemLabelPosition0.getAngle();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = ItemLabelAnchor.INSIDE10;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(">`H6n2qA=vas@)3'").when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 175.7);
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1);
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition1);
      assertEquals(0.0, itemLabelPosition1.getAngle(), 0.01);
      assertFalse(boolean0);
  }
}
