/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:40:19 GMT 2019
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.StandardURLTagFragmentGenerator;
import org.jfree.chart.imagemap.URLTagFragmentGenerator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartEntity_ESTest extends ChartEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-1696), (-1696));
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "uKK&I-\"nH['=@L~'", "uKK&I-\"nH['=@L~'");
      String string0 = chartEntity0.getShapeCoords();
      assertEquals("0,0,-1696,-1696", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.setFrame(1.0, 0.0, (-331.37), 1013.12272);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0, (String) null);
      String string0 = chartEntity0.getShapeCoords();
      assertEquals("1,0,-330,1013", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double((-5019.386439), (-5019.386439), (-5019.386439), 0.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      chartEntity0.setURLText(" onMouseOver=\"return stm(['AoGs*l-B)Lj-~lRs%','AoGs*l-B)Lj-~lRs%'],Style[-1633]);\" onMouseOut=\"return htm();\"");
      String string0 = chartEntity0.getURLText();
      assertEquals(" onMouseOver=\"return stm(['AoGs*l-B)Lj-~lRs%','AoGs*l-B)Lj-~lRs%'],Style[-1633]);\" onMouseOut=\"return htm();\"", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-3278));
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Shape shape0 = affineTransform0.createTransformedShape(line2D_Double0);
      ChartEntity chartEntity0 = new ChartEntity(shape0, "", "");
      String string0 = chartEntity0.getURLText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0);
      String string0 = chartEntity0.getToolTipText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point point0 = new Point((-259), (-2457));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, "", "");
      String string0 = chartEntity0.getToolTipText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      ChartEntity chartEntity0 = new ChartEntity(polygon0, "");
      String string0 = chartEntity0.getShapeCoords();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      // Undeclared exception!
      try { 
        chartEntity0.setArea((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Float0, "X", "X");
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator((String) null, 1);
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      // Undeclared exception!
      try { 
        chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null, "", " title=\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null, "i8g*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-3278));
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Shape shape0 = affineTransform0.createTransformedShape(line2D_Double0);
      ChartEntity chartEntity0 = new ChartEntity(shape0, "", "");
      String string0 = chartEntity0.getShapeType();
      assertEquals("poly", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-577), (-577), 0, 0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "h _o'G}99:A6&eYS", "h _o'G}99:A6&eYS");
      ChartEntity chartEntity1 = new ChartEntity(rectangle0, "h _o'G}99:A6&eYS", "ChartEntity: tooltip = h _o'G}99:A6&eYS");
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertEquals("h _o'G}99:A6&eYS", chartEntity1.getToolTipText());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double((-5035.217098481917), (-5035.217098481917), (-5035.217098481917), 0.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      ChartEntity chartEntity1 = new ChartEntity(line2D_Double0, "<area shape=\"rect\" coords=\"-5036,-5036,-5035,0\" href=\" onMouseOver=\"return stm(['</map>','</map>'],Style[5036]);\" onMouseOut=\"return htm();\"\" alt=\"\"/>");
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "2!9_gVt<h[_");
      boolean boolean0 = chartEntity0.equals("ChartEntity: tooltip = null");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point point0 = new Point((-259), (-259));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, "", "");
      boolean boolean0 = chartEntity0.equals(chartEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "2!9_gVt<h[_");
      ChartEntity chartEntity1 = new ChartEntity(rectangle0);
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point point0 = new Point((-259), (-259));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, "", "");
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      String string0 = chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, ",/`lPbNgK;|0^i[", ",/`lPbNgK;|0^i[");
      String string0 = chartEntity0.getShapeCoords();
      assertEquals("0,0,0,0", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double((-5035.217098481917), (-5035.217098481917), (-5035.217098481917), 0.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator("</map>", 5036);
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      chartEntity0.setURLText(" onMouseOver=\"return stm(['</map>','</map>'],Style[5036]);\" onMouseOut=\"return htm();\"");
      String string0 = chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertEquals("<area shape=\"rect\" coords=\"-5036,-5036,-5035,0\" href=\" onMouseOver=\"return stm(['</map>','</map>'],Style[5036]);\" onMouseOut=\"return htm();\"\" alt=\"\"/>", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "2!9_gVt<h[_");
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      String string0 = chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
      assertEquals("<area shape=\"rect\" coords=\"0,0,1,1\" onMouseOver=\"return overlib('2!9_gVt<h[_');\" onMouseOut=\"return nd();\" nohref=\"nohref\"/>", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "2!9_gVt<h[_");
      String string0 = chartEntity0.getShapeType();
      assertEquals("rect", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Point point0 = new Point((-259), (-259));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, "", "");
      Object object0 = chartEntity0.clone();
      boolean boolean0 = chartEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "2!9_gVt<h[_");
      chartEntity0.setURLText("9");
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      // Undeclared exception!
      try { 
        chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-577), (-577), 0, 0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "h _o'G}99:A6&eYS", "h _o'G}99:A6&eYS");
      Rectangle rectangle1 = (Rectangle)chartEntity0.getArea();
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "2!9_gVt<h[_");
      chartEntity0.setToolTipText("2!9_gVt<h[_");
      assertEquals("rect", chartEntity0.getShapeType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double((-5035.217098481917), (-5035.217098481917), (-5035.217098481917), 0.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      String string0 = chartEntity0.getURLText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "2!9_gVt<h[_");
      String string0 = chartEntity0.getToolTipText();
      assertEquals("2!9_gVt<h[_", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Point point0 = new Point((-259), (-259));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, "", "");
      chartEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Point point0 = new Point((-259), (-259));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, "", "");
      chartEntity0.setArea(line2D_Float0);
      assertEquals((-259.0F), line2D_Float0.x1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Point point0 = new Point((-259), (-259));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point2D_Float0);
      ChartEntity chartEntity0 = new ChartEntity(line2D_Float0, "", "");
      String string0 = chartEntity0.toString();
      assertEquals("ChartEntity: tooltip = ", string0);
  }
}
