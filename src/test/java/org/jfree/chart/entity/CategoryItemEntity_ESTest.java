/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:20:29 GMT 2019
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.entity.CategoryItemEntity;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryItemEntity_ESTest extends CategoryItemEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.0, 0.0);
      String[] stringArray0 = new String[8];
      Number[][] numberArray0 = new Number[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, (-1329), (-1329));
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D_Double0, "g*hdL+~;izbv|", "g*hdL+~;izbv|", slidingCategoryDataset0, (Comparable) null, "g*hdL+~;izbv|");
      Comparable comparable0 = categoryItemEntity0.getRowKey();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(32, 32, 1, 1);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultCategoryDataset0, 970, 3667);
      Comparable<CategoryItemEntity> comparable0 = (Comparable<CategoryItemEntity>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, (String) null, "g2wFKby(\"p9ST", slidingCategoryDataset0, comparable0, "g2wFKby(\"p9ST");
      categoryItemEntity0.setColumnKey((Comparable) null);
      Comparable comparable1 = categoryItemEntity0.getColumnKey();
      assertNull(comparable1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, ",vhTpw/ytV(cFm'r", "KRl:zRxZz~xNw|(H/q", defaultCategoryDataset0, 0, 0);
      // Undeclared exception!
      try { 
        categoryItemEntity0.setDataset((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point point0 = new Point();
      Dimension dimension0 = new Dimension(0, 0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      String[] stringArray0 = new String[7];
      Number[][] numberArray0 = new Number[0][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, (String) null, "org.jfree.chart.entity.CategoryItemEntity", defaultIntervalCategoryDataset0, stringArray0[3], comparable0);
      CategoryItemEntity categoryItemEntity1 = new CategoryItemEntity(rectangle0, (String) null, "V{eBq'MT7h", defaultIntervalCategoryDataset0, 0, 0);
      // Undeclared exception!
      try { 
        categoryItemEntity0.equals(categoryItemEntity1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.entity.CategoryItemEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.0, 303.3982421875561, 0.0);
      Point point0 = new Point((-2395), (-2395));
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Shape shape0 = affineTransform0.createTransformedShape(line2D_Double0);
      CategoryItemEntity categoryItemEntity0 = null;
      try {
        categoryItemEntity0 = new CategoryItemEntity(shape0, (String) null, (String) null, (CategoryDataset) null, (-2432.0), (-2432.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      double[][] doubleArray0 = new double[6][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D0, "org.jfree.data.general.AbstractSeriesDataset", "org.jfree.data.general.AbstractSeriesDataset", defaultIntervalCategoryDataset0, 0.0, 0.0);
      Object object0 = categoryItemEntity0.clone();
      boolean boolean0 = categoryItemEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      String[] stringArray0 = new String[18];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, "pU", "pU", defaultIntervalCategoryDataset0, "pU", 0.0);
      boolean boolean0 = categoryItemEntity0.equals("pU");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0F, 0.0F, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      double[][] doubleArray0 = new double[1][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D0, "org.jfree.data.general.AbstractSeriesDataset", "org.jfree.data.general.AbstractSeriesDataset", defaultIntervalCategoryDataset0, 0.0, 0.0);
      boolean boolean0 = categoryItemEntity0.equals(categoryItemEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      String[] stringArray0 = new String[18];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, "pU", "pU", defaultIntervalCategoryDataset0, "pU", 0.0);
      CategoryItemEntity categoryItemEntity1 = new CategoryItemEntity(rectangle2D_Double0, "pU", "CategoryItemEntity: rowKey=", defaultIntervalCategoryDataset0, 0, rectangle0.height);
      boolean boolean0 = categoryItemEntity0.equals(categoryItemEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0F, 0.0F, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      double[][] doubleArray0 = new double[1][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D0, "org.jfree.data.general.AbstractSeriesDataset", "org.jfree.data.general.AbstractSeriesDataset", defaultIntervalCategoryDataset0, 0.0, 0.0);
      Comparable comparable0 = categoryItemEntity0.getRowKey();
      assertEquals(0.0, comparable0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      String[] stringArray0 = new String[18];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, "pU", "pU", defaultIntervalCategoryDataset0, "pU", 0.0);
      categoryItemEntity0.setRowKey(0);
      CategoryItemEntity categoryItemEntity1 = new CategoryItemEntity(rectangle2D_Double0, "pU", "CategoryItemEntity: rowKey=", defaultIntervalCategoryDataset0, 0, rectangle0.width);
      boolean boolean0 = categoryItemEntity0.equals(categoryItemEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      String[] stringArray0 = new String[18];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, "pU", "pU", defaultIntervalCategoryDataset0, "pU", 0.0);
      categoryItemEntity0.setDataset(defaultIntervalCategoryDataset0);
      assertEquals(0, defaultIntervalCategoryDataset0.getCategoryCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0F, 0.0F, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      double[][] doubleArray0 = new double[1][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D0, "org.jfree.data.general.AbstractSeriesDataset", "org.jfree.data.general.AbstractSeriesDataset", defaultIntervalCategoryDataset0, 0.0, 0.0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = (DefaultIntervalCategoryDataset)categoryItemEntity0.getDataset();
      assertEquals(1, defaultIntervalCategoryDataset1.getSeriesCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      double[][] doubleArray0 = new double[6][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle2D0, "org.jfree.data.general.AbstractSeriesDataset", "org.jfree.data.general.AbstractSeriesDataset", defaultIntervalCategoryDataset0, 0.0, 0.0);
      String string0 = categoryItemEntity0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      String[] stringArray0 = new String[18];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      CategoryItemEntity categoryItemEntity0 = new CategoryItemEntity(rectangle0, "pU", "pU", defaultIntervalCategoryDataset0, "pU", 0.0);
      Comparable comparable0 = categoryItemEntity0.getColumnKey();
      assertEquals(0.0, comparable0);
  }
}
