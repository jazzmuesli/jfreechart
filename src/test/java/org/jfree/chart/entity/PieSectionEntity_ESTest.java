/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:19:03 GMT 2019
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.sql.Connection;
import javax.swing.JInternalFrame;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.entity.PieSectionEntity;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieSectionEntity_ESTest extends PieSectionEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("9 v3BH,mJ^z9J1jU");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultPieDataset0, (-1952), 0, "9 v3BH,mJ^z9J1jU", "9 v3BH,mJ^z9J1jU", "9 v3BH,mJ^z9J1jU");
      pieSectionEntity0.setSectionKey((Comparable) null);
      pieSectionEntity0.getSectionKey();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals((-1952), pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(389.95363359854, 389.95363359854, 1.0, 389.95363359854);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(line2D_Double0, (PieDataset) null, 0, 0, 389.95363359854, "org.jfree.data.time.Quarter", (String) null);
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      
      pieSectionEntity0.setSectionIndex(1);
      int int0 = pieSectionEntity0.getSectionIndex();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[][] objectArray0 = new Object[4][4];
      Object[] objectArray1 = new Object[1];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray0[0] = objectArray1;
      JTable jTable0 = new JTable(objectArray0, objectArray0[0]);
      Rectangle rectangle0 = jTable0.getVisibleRect();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 1, (-1071), 1, "", "");
      int int0 = pieSectionEntity0.getSectionIndex();
      assertEquals((-1071), int0);
      assertEquals(1, pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[][] objectArray0 = new Object[4][4];
      Object[] objectArray1 = new Object[1];
      Object object0 = new Object();
      objectArray1[0] = object0;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      Rectangle rectangle0 = jTable0.getVisibleRect();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 1, (-1071), 1, "", "");
      int int0 = pieSectionEntity0.getPieIndex();
      assertEquals(1, int0);
      assertEquals((-1071), pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[][] objectArray0 = new Object[4][4];
      Object[] objectArray1 = new Object[1];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray0[0] = objectArray1;
      JTable jTable0 = new JTable(objectArray0, objectArray0[0]);
      Rectangle rectangle0 = jTable0.getVisibleRect();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, jDBCPieDataset0, 1, (-1071), 1, "", "");
      assertEquals(1, pieSectionEntity0.getPieIndex());
      
      pieSectionEntity0.setPieIndex((-1071));
      int int0 = pieSectionEntity0.getPieIndex();
      assertEquals((-1071), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1873);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, (PieDataset) null, (-1220), 0, 0, "", "");
      pieSectionEntity0.getDataset();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals((-1220), pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle2D0, jDBCPieDataset0, 2940, 2940, (Comparable) null, "", (String) null);
      // Undeclared exception!
      try { 
        pieSectionEntity0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(taskSeriesCollection0, tableOrder0, 1);
      PieSectionEntity pieSectionEntity0 = null;
      try {
        pieSectionEntity0 = new PieSectionEntity((Shape) null, categoryToPieDataset0, (-150), (-150), tableOrder0, "series", "org.jfree.chart.entity.PieSectionEntity");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1873);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, (PieDataset) null, (-1220), 0, 0, "", "");
      PieSectionEntity pieSectionEntity1 = (PieSectionEntity)pieSectionEntity0.clone();
      pieSectionEntity1.setSectionIndex((-1));
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertEquals((-1), pieSectionEntity1.getSectionIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(defaultCaret0, defaultPieDataset0, 0, 0, 0, "]05`KhV@LZe2at", "keM7hdJ'epL&_I)");
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(defaultCaret0, defaultPieDataset0, 1711, 125, 0, "]05`KhV@LZe2at", "keM7hdJ'epL&_I)");
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertEquals(1711, pieSectionEntity1.getPieIndex());
      assertEquals(125, pieSectionEntity1.getSectionIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle2D0, defaultKeyedValuesDataset0, (-1450), (-1450), 0.0F, "", (String) null);
      boolean boolean0 = pieSectionEntity0.equals("");
      assertEquals((-1450), pieSectionEntity0.getPieIndex());
      assertEquals((-1450), pieSectionEntity0.getSectionIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1873);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, (PieDataset) null, (-1220), 0, 0, "", "");
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity0);
      assertEquals((-1220), pieSectionEntity0.getPieIndex());
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", "seriesKey");
      PieSectionEntity pieSectionEntity1 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", (String) null);
      boolean boolean0 = pieSectionEntity0.equals(pieSectionEntity1);
      assertFalse(boolean0);
      assertEquals(0, pieSectionEntity1.getPieIndex());
      assertEquals(0, pieSectionEntity1.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1873);
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, (PieDataset) null, (-1220), 0, 0, "", "");
      pieSectionEntity0.getSectionKey();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals((-1220), pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", "seriesKey");
      int int0 = pieSectionEntity0.getPieIndex();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", "seriesKey");
      pieSectionEntity0.hashCode();
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", "seriesKey");
      pieSectionEntity0.getDataset();
      assertEquals(0, pieSectionEntity0.getPieIndex());
      assertEquals(0, pieSectionEntity0.getSectionIndex());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", "seriesKey");
      int int0 = pieSectionEntity0.getSectionIndex();
      assertEquals(0, pieSectionEntity0.getPieIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", "seriesKey");
      pieSectionEntity0.setDataset(defaultKeyedValuesDataset0);
      assertEquals(0, pieSectionEntity0.getSectionIndex());
      assertEquals(0, pieSectionEntity0.getPieIndex());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PieSectionEntity pieSectionEntity0 = new PieSectionEntity(rectangle0, defaultKeyedValuesDataset0, 0, 0, 0, "seriesKey", "seriesKey");
      pieSectionEntity0.toString();
      assertEquals(0, pieSectionEntity0.getPieIndex());
      assertEquals(0, pieSectionEntity0.getSectionIndex());
  }
}
