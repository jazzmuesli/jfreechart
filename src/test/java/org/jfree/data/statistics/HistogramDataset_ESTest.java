/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:35:15 GMT 2019
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.beans.PropertyChangeListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.ComparableObjectItem;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.statistics.HistogramBin;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.HistogramType;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.VectorSeries;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.jfree.data.xy.XYIntervalSeries;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeries;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HistogramDataset_ESTest extends HistogramDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      HistogramDataset histogramDataset1 = (HistogramDataset)histogramDataset0.clone();
      HistogramType histogramType0 = HistogramType.RELATIVE_FREQUENCY;
      HistogramType histogramType1 = HistogramType.RELATIVE_FREQUENCY;
      histogramDataset0.setType(histogramType1);
      histogramDataset1.setType(histogramType0);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(histogramDataset0);
      histogramDataset1.seriesChanged(seriesChangeEvent0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      histogramDataset0.getYValue(0, 0);
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 7);
      histogramDataset0.removeChangeListener(categoryToPieDataset0);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndXValue(1889, 1889);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1889, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      CategoryDataset categoryDataset0 = null;
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      int int0 = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[3] = (double) 14;
      doubleArray0[4] = (double) 14;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 14;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      histogramDataset0.getYValue(0, 14);
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 7);
      double double0 = Double.NEGATIVE_INFINITY;
      TableOrder tableOrder1 = TableOrder.BY_COLUMN;
      // Undeclared exception!
      try { 
        categoryToPieDataset0.getValue(12);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // The 'item' index is out of bounds.
         //
         verifyException("org.jfree.data.category.CategoryToPieDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      HistogramDataset histogramDataset1 = (HistogramDataset)histogramDataset0.clone();
      // Undeclared exception!
      try { 
        histogramDataset1.addSeries((Comparable) null, (double[]) null, 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null or zero length 'values' argument.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      histogramDataset0.clone();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      double double0 = new Double(0.0);
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 7);
      histogramDataset0.removeChangeListener(categoryToPieDataset0);
      histogramDataset0.getEndXValue(0, 0);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY(91, 91);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 91, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.equals(histogramDataset0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 57.5577;
      doubleArray0[1] = 1939.2342;
      doubleArray0[2] = 891.2746741469557;
      // Undeclared exception!
      try { 
        histogramDataset0.getEndY((-2511), (-2511));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramDataset histogramDataset1 = (HistogramDataset)histogramDataset0.clone();
      HistogramDataset histogramDataset2 = (HistogramDataset)histogramDataset0.clone();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      histogramDataset0.getYValue(0, 0);
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 7);
      XYBarDataset xYBarDataset0 = new XYBarDataset(histogramDataset1, Double.NEGATIVE_INFINITY);
      categoryToPieDataset0.addChangeListener(xYBarDataset0);
      histogramDataset0.clone();
      // Undeclared exception!
      try { 
        histogramDataset2.getEndY(0, (-3110));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      histogramDataset0.clone();
      CategoryDataset categoryDataset0 = null;
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 15;
      doubleArray0[1] = (double) 15;
      doubleArray0[2] = (double) 15;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 15;
      doubleArray0[6] = (double) 15;
      doubleArray0[7] = (double) 0;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      // Undeclared exception!
      try { 
        histogramDataset0.getYValue(15, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      String string0 = "";
      histogramDataset0.equals("");
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.0;
      // Undeclared exception!
      histogramDataset0.addSeries((Comparable) 1.0, doubleArray0, 2145705922, (-446.0919840867), (-446.0919840867));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-941);
      // Undeclared exception!
      try { 
        histogramDataset0.getY((-941), (-941));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getBins((-130));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 1;
      MockDate mockDate0 = new MockDate(1);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2545.9816197897744, (-1993.8500091595), 0.0, (-642.1747), 0.0);
      double[] doubleArray0 = new double[0];
      mockDate0.setTime(1);
      histogramDataset0.addSeries((Comparable) oHLCDataItem0, doubleArray0, 1, (-1197.9650239285127), 0.0);
      histogramDataset0.indexOf(oHLCDataItem0);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 29;
      // Undeclared exception!
      try { 
        histogramDataset0.getEndY((-685), 29);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-445);
      // Undeclared exception!
      try { 
        histogramDataset0.getX((-445), (-445));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramBin histogramBin0 = new HistogramBin(1.0, 1.0);
      histogramBin0.incrementCount();
      histogramDataset0.equals(histogramBin0);
      int int0 = (-7);
      // Undeclared exception!
      try { 
        histogramDataset0.getItemCount((-7));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MockDate mockDate0 = new MockDate(1L);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, (-2455.32), (-1.7976931348623157E308));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-2455.32);
      doubleArray0[1] = (double) 1L;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) oHLCDataItem0, doubleArray0, (-382), 2386.9, 1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'bins' value must be at least 1.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-859);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndX((-859), (-859));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.getSeriesCount();
      int int0 = (-1283);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY((-1283), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 0;
      // Undeclared exception!
      try { 
        histogramDataset0.getItemCount(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getItemCount(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = HistogramType.SCALE_AREA_TO_1;
      histogramDataset0.setType(histogramType0);
      int int0 = (-3885);
      int int1 = 4;
      // Undeclared exception!
      try { 
        histogramDataset0.getStartX(4, 4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = HistogramType.SCALE_AREA_TO_1;
      histogramDataset0.setType(histogramType0);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndX(1, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(defaultTableXYDataset0);
      histogramDataset0.addChangeListener(xYDatasetTableModel0);
      int int0 = 1;
      // Undeclared exception!
      try { 
        histogramDataset0.getY(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.getSeriesCount();
      HistogramBin histogramBin0 = new HistogramBin((-1.0), 0);
      histogramBin0.clone();
      histogramBin0.incrementCount();
      histogramBin0.clone();
      histogramBin0.incrementCount();
      histogramDataset0.equals(histogramBin0);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndX(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.validateObject();
      int int0 = 0;
      // Undeclared exception!
      try { 
        histogramDataset0.getBins(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.addChangeListener((DatasetChangeListener) null);
      int int0 = 2244;
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey(2244);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2244, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1432.3166206;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 3261.666;
      doubleArray0[3] = 0.0;
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) null, doubleArray0, 0, 0.0, 131.081);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      histogramDataset0.addChangeListener(xYDatasetTableModel0);
      Object object0 = histogramDataset0.clone();
      histogramDataset0.equals(object0);
      int int0 = 37;
      // Undeclared exception!
      try { 
        histogramDataset0.getEndY(37, 37);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 37, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 0;
      DatasetGroup datasetGroup0 = new DatasetGroup();
      datasetGroup0.clone();
      histogramDataset0.setGroup(datasetGroup0);
      int int1 = 1;
      // Undeclared exception!
      try { 
        histogramDataset0.getX(0, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(histogramDataset0, true);
      histogramDataset0.removeChangeListener(intervalXYDelegate0);
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey(981);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 981, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY(3348, 2883);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3348, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getX(2646, 2646);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2646, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      MockDate mockDate0 = new MockDate((-2284), (-2284), (-2284));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-2284), (-1545.08877384348), 1206.9952342572021, 0.0, (-2284));
      XYSeries xYSeries0 = new XYSeries(oHLCDataItem0);
      XYSeries xYSeries1 = xYSeries0.createCopy((-2284), (-2284));
      xYSeries1.addOrUpdate(0.0, 0.0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1206.9952342572021;
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) null, doubleArray0, (-2284));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-3272);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartX((-3272), (-3272));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<HistogramDataset> comparable0 = null;
      double[] doubleArray0 = new double[6];
      double double0 = 1.5;
      // Undeclared exception!
      try { 
        histogramDataset0.getEndX(1488, (-4113));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1488, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getStartX(1297, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1297, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getEndY(812, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 812, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-251);
      // Undeclared exception!
      try { 
        histogramDataset0.getXValue((-251), (-251));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 10;
      int int1 = 1628;
      String string0 = "&bH#};D%h";
      histogramDataset0.equals("&bH#};D%h");
      // Undeclared exception!
      try { 
        histogramDataset0.getStartXValue((-1), 1628);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.getType();
      double[] doubleArray0 = new double[1];
      double double0 = 9.418811173841;
      doubleArray0[0] = 9.418811173841;
      // Undeclared exception!
      try { 
        histogramDataset0.getEndX(1621, 1621);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1621, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      histogramDataset0.clone();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[5] = (double) 0;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      histogramDataset0.getYValue(0, 0);
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 7);
      histogramDataset0.removeChangeListener(categoryToPieDataset0);
      Integer integer0 = new Integer(7);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY(91, 91);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 91, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramDataset histogramDataset1 = (HistogramDataset)histogramDataset0.clone();
      HistogramDataset histogramDataset2 = (HistogramDataset)histogramDataset0.clone();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      histogramDataset0.indexOf(1.0);
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (double) 0;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      Float float0 = new Float((double) 1658);
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 43);
      XYBarDataset xYBarDataset0 = new XYBarDataset(histogramDataset1, Double.NEGATIVE_INFINITY);
      categoryToPieDataset0.addChangeListener(xYBarDataset0);
      histogramDataset0.clone();
      // Undeclared exception!
      try { 
        histogramDataset2.getEndY(1, (-3110));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.clone();
      histogramDataset0.clone();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      histogramDataset0.addSeries((Comparable) tableOrder0, doubleArray0, 1658);
      histogramDataset0.getYValue(0, 0);
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 7);
      histogramDataset0.removeChangeListener(categoryToPieDataset0);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndXValue(1889, 1889);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1889, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Object object0 = histogramDataset0.clone();
      histogramDataset0.equals(object0);
      HistogramType histogramType0 = histogramDataset0.getType();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 57.5577;
      doubleArray0[1] = 1939.2342;
      doubleArray0[2] = 943.342012;
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) histogramType0, doubleArray0, (-2511));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'bins' value must be at least 1.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-1757);
      HistogramType histogramType0 = HistogramType.RELATIVE_FREQUENCY;
      histogramDataset0.setType(histogramType0);
      Integer integer0 = new Integer((-1757));
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey((-1757));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
