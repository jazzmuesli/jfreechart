/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:50:35 GMT 2019
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.Date;
import java.util.EventListener;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.gantt.XYTaskDataset;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.TableXYDataset;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DefaultWindDataset_ESTest extends DefaultWindDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      Object[][][] objectArray0 = new Object[1][3][9];
      Comparator<Float> comparator0 = (Comparator<Float>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Float float0 = new Float(473.0235);
      Float.max(0.0F, 0.0F);
      Float.isFinite(0.0F);
      linkedList0.clone();
      linkedList0.add(float0);
      linkedList0.sort(comparator0);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      defaultWindDataset0.clone();
      linkedList0.add((Float) null);
      defaultWindDataset0.validateObject();
      defaultWindDataset0.getNotify();
      Double double0 = new Double(0.0F);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindForce(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      Object[][][] objectArray0 = new Object[1][3][9];
      Object[][] objectArray1 = new Object[0][7];
      Float float0 = new Float(473.0235);
      float float1 = 0.0F;
      Float.max(0.0F, 0.0F);
      Float.isFinite(0.0F);
      linkedList0.clone();
      linkedList0.add(float0);
      objectArray0[0] = objectArray1;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      linkedList0.add(float0);
      defaultWindDataset0.validateObject();
      int int0 = 0;
      linkedList0.add(float0);
      defaultWindDataset0.getSeriesKey(0);
      Float float2 = new Float((double) 0.0F);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindDirection(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      Object[][][] objectArray0 = new Object[1][3][9];
      Object[][] objectArray1 = new Object[0][7];
      Comparator<Float> comparator0 = (Comparator<Float>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Float float0 = new Float(473.0235);
      linkedList0.clone();
      linkedList0.add(float0);
      linkedList0.sort(comparator0);
      objectArray0[0] = objectArray1;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      defaultWindDataset0.clone();
      linkedList0.add((Float) null);
      defaultWindDataset0.validateObject();
      linkedList0.add((Float) null);
      defaultWindDataset0.equals((Object) null);
      defaultWindDataset0.equals((Object) null);
      defaultWindDataset0.indexOf((Comparable) null);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getX(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      defaultWindDataset0.validateObject();
      defaultWindDataset0.equals(defaultWindDataset0);
      XYDatasetTableModel xYDatasetTableModel0 = null;
      try {
        xYDatasetTableModel0 = new XYDatasetTableModel((TableXYDataset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.XYDatasetTableModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Integer integer0 = new Integer((-3985));
      // Undeclared exception!
      try { 
        defaultWindDataset0.getX((-3985), 1060);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[][][] objectArrayArrayArray0 = null;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindDirection((-1075), 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[][][] objectArray0 = new Object[6][8][6];
      Object[][] objectArray1 = new Object[6][5];
      objectArray0[0] = objectArray1;
      Object[][] objectArray2 = new Object[8][7];
      Object[] objectArray3 = new Object[5];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      defaultWindDataset0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis(1695L);
      Object[][] objectArray0 = new Object[2][8];
      Object[] objectArray1 = new Object[3];
      Object object0 = new Object();
      objectArray1[0] = object0;
      Object[][][] objectArray2 = new Object[1][6][9];
      Object[][] objectArray3 = new Object[3][5];
      objectArray3[0] = objectArray1;
      objectArray3[1] = objectArray1;
      objectArray3[2] = objectArray1;
      objectArray2[0] = objectArray3;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray2);
      Object object1 = defaultWindDataset0.clone();
      objectArray1[1] = object1;
      Object object2 = defaultWindDataset0.clone();
      objectArray1[2] = object2;
      objectArray0[0] = objectArray1;
      Object[] objectArray4 = new Object[8];
      objectArray4[0] = (Object) defaultWindDataset0;
      DefaultWindDataset defaultWindDataset1 = (DefaultWindDataset)defaultWindDataset0.clone();
      objectArray4[1] = (Object) defaultWindDataset1;
      objectArray4[2] = object0;
      objectArray4[3] = (Object) defaultWindDataset0;
      objectArray4[4] = object1;
      objectArray4[5] = object1;
      objectArray4[6] = object0;
      objectArray4[7] = object2;
      objectArray0[1] = objectArray4;
      DefaultWindDataset.seriesNameListFromDataArray(objectArray0);
      // Undeclared exception!
      try { 
        defaultWindDataset1.getY((-3733), 905);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[][][] objectArrayArrayArray0 = null;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindForce((-4360), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[][] objectArray0 = new Object[9][9];
      Object[] objectArray1 = new Object[8];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object object0 = defaultWindDataset0.clone();
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[0] = object1;
      Object object2 = new Object();
      objectArray1[2] = object2;
      Object object3 = defaultWindDataset0.clone();
      Object object4 = new Object();
      objectArray1[4] = object4;
      Object object5 = new Object();
      objectArray1[5] = object5;
      Object object6 = defaultWindDataset0.clone();
      objectArray1[6] = object6;
      Object object7 = defaultWindDataset0.clone();
      objectArray1[7] = object7;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = object3;
      objectArray2[1] = object3;
      objectArray2[2] = object3;
      objectArray2[3] = object6;
      objectArray2[4] = object3;
      objectArray2[5] = object0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[8];
      Object[][][] objectArray4 = new Object[3][5][0];
      objectArray4[0] = objectArray0;
      Object[][] objectArray5 = new Object[4][7];
      objectArray5[0] = objectArray2;
      Object[] objectArray6 = new Object[7];
      objectArray6[0] = object0;
      objectArray6[1] = (Object) defaultWindDataset0;
      Object object8 = new Object();
      objectArray6[2] = object8;
      objectArray6[3] = object0;
      Object object9 = new Object();
      objectArray6[4] = object9;
      objectArray6[5] = object5;
      objectArray6[6] = (Object) defaultWindDataset0;
      objectArray5[1] = objectArray6;
      objectArray5[2] = objectArray2;
      objectArray5[3] = objectArray2;
      objectArray4[1] = objectArray5;
      Object[][] objectArray7 = new Object[0][0];
      objectArray4[2] = objectArray7;
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(objectArray4);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[][][] objectArray0 = new Object[7][5][8];
      Object[][] objectArray1 = new Object[6][0];
      Object[] objectArray2 = new Object[3];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object object0 = defaultWindDataset0.clone();
      objectArray2[0] = object0;
      Object object1 = new Object();
      objectArray2[1] = object1;
      Object object2 = defaultWindDataset0.clone();
      objectArray2[2] = object2;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) defaultWindDataset0;
      objectArray3[1] = (Object) defaultWindDataset0;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[5];
      objectArray4[0] = object1;
      Object object3 = new Object();
      objectArray4[1] = object3;
      objectArray4[2] = object0;
      objectArray4[3] = object2;
      objectArray4[4] = (Object) defaultWindDataset0;
      objectArray1[2] = objectArray4;
      Object[] objectArray5 = new Object[1];
      objectArray5[0] = object3;
      objectArray1[3] = objectArray5;
      Object[] objectArray6 = new Object[4];
      objectArray6[0] = object0;
      objectArray6[1] = object2;
      objectArray6[2] = object3;
      objectArray6[3] = object3;
      objectArray1[4] = objectArray6;
      Object[] objectArray7 = new Object[9];
      objectArray7[0] = object0;
      objectArray7[1] = object1;
      objectArray7[2] = object3;
      objectArray7[3] = object1;
      objectArray7[4] = object2;
      objectArray7[5] = (Object) defaultWindDataset0;
      objectArray7[6] = object1;
      objectArray7[7] = object3;
      objectArray7[8] = object1;
      objectArray1[5] = objectArray7;
      objectArray0[0] = objectArray1;
      Object[][] objectArray8 = new Object[9][3];
      objectArray8[0] = objectArray5;
      objectArray8[1] = objectArray4;
      objectArray8[2] = objectArray6;
      objectArray8[3] = objectArray7;
      Object[] objectArray9 = new Object[8];
      objectArray9[0] = object2;
      objectArray9[1] = object3;
      objectArray9[2] = object2;
      objectArray9[3] = object0;
      objectArray9[4] = object1;
      objectArray9[5] = object2;
      objectArray9[6] = object2;
      objectArray9[7] = object0;
      objectArray8[4] = objectArray9;
      objectArray8[5] = objectArray6;
      objectArray8[6] = objectArray3;
      objectArray8[7] = objectArray5;
      objectArray8[8] = objectArray3;
      objectArray0[1] = objectArray8;
      Object[][] objectArray10 = new Object[9][3];
      objectArray10[0] = objectArray2;
      objectArray10[1] = objectArray4;
      Object[] objectArray11 = new Object[3];
      objectArray11[0] = object1;
      objectArray11[1] = object2;
      objectArray11[2] = object2;
      objectArray10[2] = objectArray11;
      objectArray10[3] = objectArray3;
      objectArray10[4] = objectArray9;
      objectArray10[5] = objectArray3;
      objectArray10[6] = objectArray5;
      objectArray10[7] = objectArray7;
      objectArray10[8] = objectArray4;
      objectArray0[2] = objectArray10;
      Object[][] objectArray12 = new Object[9][0];
      objectArray12[0] = objectArray5;
      objectArray12[1] = objectArray7;
      objectArray12[2] = objectArray6;
      objectArray12[3] = objectArray2;
      objectArray12[4] = objectArray11;
      objectArray12[5] = objectArray4;
      objectArray12[6] = objectArray9;
      objectArray12[7] = objectArray2;
      objectArray12[8] = objectArray4;
      objectArray0[3] = objectArray12;
      Object[][] objectArray13 = new Object[2][5];
      objectArray13[0] = objectArray2;
      objectArray13[1] = objectArray5;
      objectArray0[4] = objectArray13;
      Object[][] objectArray14 = new Object[7][6];
      objectArray14[0] = objectArray9;
      objectArray14[1] = objectArray3;
      objectArray14[2] = objectArray7;
      objectArray14[3] = objectArray9;
      Object[] objectArray15 = new Object[8];
      objectArray15[0] = object0;
      objectArray15[1] = object3;
      objectArray15[2] = object0;
      objectArray15[3] = object3;
      objectArray15[4] = object0;
      objectArray15[5] = object1;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.jfree.data.time.TimePeriodValuesCollection";
      stringArray0[1] = "";
      stringArray0[2] = ",htY`,0";
      stringArray0[3] = "array";
      stringArray0[4] = "Be*^";
      stringArray0[5] = "";
      stringArray0[6] = "OURW5e<9Ocw12e`Wf";
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(stringArray0, objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(linkedList0, (Object[][][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getItemCount(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      Object[][][] objectArray0 = new Object[1][3][9];
      Object[][] objectArray1 = new Object[0][7];
      Comparator<Float> comparator0 = (Comparator<Float>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Float float0 = new Float(473.0235);
      Float.max(0.0F, 0.0F);
      Float.isFinite(0.0F);
      linkedList0.clone();
      linkedList0.add(float0);
      linkedList0.sort(comparator0);
      objectArray0[0] = objectArray1;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      Float float1 = null;
      defaultWindDataset0.clone();
      linkedList0.add((Float) null);
      defaultWindDataset0.validateObject();
      int int0 = 0;
      linkedList0.add((Float) null);
      defaultWindDataset0.getSeriesKey(0);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindForce(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[][][] objectArray0 = new Object[0][4][6];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(defaultWindDataset0);
      defaultWindDataset0.seriesChanged(seriesChangeEvent0);
      defaultWindDataset0.getSeriesCount();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindForce(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object[][][] objectArray0 = new Object[0][1][1];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      Object[][] objectArray1 = new Object[3][2];
      Object[] objectArray2 = new Object[5];
      objectArray2[0] = (Object) linkedList0;
      objectArray2[1] = (Object) linkedList0;
      objectArray2[2] = (Object) linkedList0;
      objectArray2[3] = (Object) defaultWindDataset0;
      objectArray2[4] = (Object) defaultWindDataset0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[4];
      objectArray3[0] = (Object) linkedList0;
      objectArray3[1] = (Object) linkedList0;
      objectArray3[2] = (Object) linkedList0;
      objectArray3[3] = (Object) defaultWindDataset0;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[5];
      objectArray4[0] = (Object) defaultWindDataset0;
      objectArray4[1] = (Object) defaultWindDataset0;
      objectArray4[2] = (Object) linkedList0;
      objectArray4[3] = (Object) linkedList0;
      objectArray4[4] = (Object) defaultWindDataset0;
      objectArray1[2] = objectArray4;
      DefaultWindDataset.seriesNameListFromDataArray(objectArray1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      DatasetGroup datasetGroup0 = new DatasetGroup();
      datasetGroup0.clone();
      datasetGroup0.clone();
      datasetGroup0.clone();
      defaultWindDataset0.setGroup(datasetGroup0);
      defaultWindDataset0.clone();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getSeriesKey(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[][] objectArrayArray0 = null;
      // Undeclared exception!
      try { 
        DefaultWindDataset.seriesNameListFromDataArray((Object[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[][][] objectArray0 = new Object[5][4][1];
      Object[][] objectArray1 = new Object[0][9];
      objectArray0[0] = objectArray1;
      Object[][] objectArray2 = new Object[9][1];
      Object[] objectArray3 = new Object[1];
      String[] stringArray0 = new String[5];
      stringArray0[0] = "B/cmF";
      stringArray0[1] = "@VU,G;HE}uk01{YPLe";
      stringArray0[2] = "x";
      stringArray0[3] = " 2HUw3A_=qm";
      stringArray0[4] = "Series ";
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(stringArray0, objectArray0);
      Object object0 = defaultWindDataset0.clone();
      objectArray3[0] = object0;
      objectArray2[0] = objectArray3;
      Object[] objectArray4 = new Object[1];
      objectArray4[0] = (Object) "B/cmF";
      objectArray2[1] = objectArray4;
      Object[] objectArray5 = new Object[5];
      objectArray5[0] = (Object) "B/cmF";
      objectArray5[1] = (Object) "Series ";
      objectArray5[2] = (Object) " 2HUw3A_=qm";
      objectArray5[3] = (Object) "Series ";
      Object object1 = new Object();
      objectArray5[4] = object1;
      objectArray2[2] = objectArray5;
      Object[] objectArray6 = new Object[7];
      objectArray6[0] = (Object) " 2HUw3A_=qm";
      objectArray6[1] = (Object) "Series ";
      Object object2 = new Object();
      objectArray6[2] = object2;
      objectArray6[3] = (Object) "Series ";
      objectArray6[4] = (Object) "Series ";
      objectArray6[5] = (Object) " 2HUw3A_=qm";
      objectArray6[6] = object0;
      objectArray2[3] = objectArray6;
      Object[] objectArray7 = new Object[3];
      objectArray7[0] = object2;
      objectArray7[1] = (Object) " 2HUw3A_=qm";
      objectArray7[2] = (Object) "@VU,G;HE}uk01{YPLe";
      objectArray2[4] = objectArray7;
      Object[] objectArray8 = new Object[0];
      objectArray2[5] = objectArray8;
      Object[] objectArray9 = new Object[5];
      objectArray9[0] = object0;
      objectArray9[1] = (Object) defaultWindDataset0;
      objectArray9[2] = (Object) "@VU,G;HE}uk01{YPLe";
      objectArray9[3] = object2;
      objectArray9[4] = (Object) "B/cmF";
      objectArray2[6] = objectArray9;
      Object[] objectArray10 = new Object[0];
      objectArray2[7] = objectArray10;
      Object[] objectArray11 = new Object[7];
      objectArray11[0] = object0;
      objectArray11[1] = (Object) "Series ";
      objectArray11[2] = (Object) "@VU,G;HE}uk01{YPLe";
      objectArray11[3] = (Object) "@VU,G;HE}uk01{YPLe";
      objectArray11[4] = object2;
      Object object3 = defaultWindDataset0.clone();
      objectArray11[5] = object3;
      objectArray11[6] = (Object) "Series ";
      objectArray2[8] = objectArray11;
      objectArray0[1] = objectArray2;
      Object[][] objectArray12 = new Object[7][9];
      objectArray12[0] = objectArray7;
      objectArray12[1] = objectArray9;
      objectArray12[2] = (Object[]) stringArray0;
      objectArray12[3] = objectArray9;
      objectArray12[4] = objectArray3;
      objectArray12[5] = objectArray6;
      objectArray12[6] = objectArray7;
      objectArray0[2] = objectArray12;
      Object[][] objectArray13 = new Object[4][4];
      Object[] objectArray14 = new Object[9];
      objectArray14[0] = (Object) "B/cmF";
      Object object4 = new Object();
      objectArray14[1] = object4;
      objectArray14[2] = (Object) defaultWindDataset0;
      objectArray14[3] = (Object) "@VU,G;HE}uk01{YPLe";
      Object object5 = defaultWindDataset0.clone();
      objectArray14[4] = object5;
      objectArray14[5] = (Object) "B/cmF";
      Object object6 = defaultWindDataset0.clone();
      objectArray14[6] = object6;
      objectArray14[7] = (Object) "@VU,G;HE}uk01{YPLe";
      objectArray14[8] = (Object) defaultWindDataset0;
      objectArray13[0] = objectArray14;
      objectArray13[1] = objectArray7;
      objectArray13[2] = objectArray10;
      Object[] objectArray15 = new Object[6];
      objectArray15[0] = object1;
      objectArray15[1] = (Object) "@VU,G;HE}uk01{YPLe";
      Object object7 = defaultWindDataset0.clone();
      objectArray15[2] = object7;
      objectArray15[3] = (Object) defaultWindDataset0;
      Object object8 = new Object();
      objectArray15[4] = object8;
      objectArray15[5] = object1;
      objectArray13[3] = objectArray15;
      objectArray0[3] = objectArray13;
      Object[][] objectArray16 = new Object[0][0];
      objectArray0[4] = objectArray16;
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][7];
      DefaultWindDataset.seriesNameListFromDataArray(objectArray0);
      String[] stringArray0 = new String[0];
      Object[][][] objectArray1 = new Object[6][7][9];
      objectArray1[0] = objectArray0;
      objectArray1[1] = objectArray0;
      objectArray1[2] = objectArray0;
      objectArray1[3] = objectArray0;
      objectArray1[4] = objectArray0;
      objectArray1[5] = objectArray0;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(stringArray0, objectArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Object[][][] objectArray0 = new Object[9][6][2];
      Object[][] objectArray1 = new Object[8][5];
      Object[] objectArray2 = new Object[0];
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[8];
      objectArray3[0] = (Object) linkedList0;
      objectArray3[1] = (Object) linkedList0;
      objectArray3[2] = (Object) linkedList0;
      objectArray3[3] = (Object) linkedList0;
      objectArray3[4] = (Object) linkedList0;
      objectArray3[5] = (Object) linkedList0;
      objectArray3[6] = (Object) linkedList0;
      objectArray3[7] = (Object) linkedList0;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[3];
      objectArray4[0] = (Object) linkedList0;
      Object object0 = new Object();
      objectArray4[1] = object0;
      objectArray4[2] = (Object) linkedList0;
      objectArray1[2] = objectArray4;
      Object[] objectArray5 = new Object[5];
      objectArray5[0] = object0;
      objectArray5[1] = object0;
      objectArray5[2] = (Object) linkedList0;
      objectArray5[3] = (Object) linkedList0;
      objectArray5[4] = (Object) linkedList0;
      objectArray1[3] = objectArray5;
      Object[] objectArray6 = new Object[6];
      objectArray6[0] = (Object) linkedList0;
      objectArray6[1] = object0;
      objectArray6[2] = object0;
      objectArray6[3] = (Object) linkedList0;
      objectArray6[4] = (Object) linkedList0;
      objectArray6[5] = (Object) linkedList0;
      objectArray1[4] = objectArray6;
      Object[] objectArray7 = new Object[1];
      objectArray7[0] = (Object) linkedList0;
      objectArray1[5] = objectArray7;
      Object[] objectArray8 = new Object[0];
      objectArray1[6] = objectArray8;
      Object[] objectArray9 = new Object[1];
      objectArray9[0] = (Object) linkedList0;
      objectArray1[7] = objectArray9;
      objectArray0[0] = objectArray1;
      Object[][] objectArray10 = new Object[5][4];
      objectArray10[0] = objectArray9;
      objectArray10[1] = objectArray3;
      objectArray10[2] = objectArray6;
      objectArray10[3] = objectArray5;
      objectArray10[4] = objectArray9;
      objectArray0[1] = objectArray10;
      Object[][] objectArray11 = new Object[8][9];
      objectArray11[0] = objectArray2;
      objectArray11[1] = objectArray9;
      objectArray11[2] = objectArray9;
      objectArray11[3] = objectArray7;
      objectArray11[4] = objectArray3;
      objectArray11[5] = objectArray9;
      objectArray11[6] = objectArray8;
      objectArray11[7] = objectArray6;
      objectArray0[2] = objectArray11;
      Object[][] objectArray12 = new Object[5][1];
      objectArray12[0] = objectArray4;
      objectArray12[1] = objectArray4;
      objectArray12[2] = objectArray3;
      Object[] objectArray13 = new Object[4];
      objectArray13[0] = object0;
      Object object1 = new Object();
      objectArray13[1] = object1;
      objectArray13[2] = (Object) linkedList0;
      objectArray13[3] = object0;
      objectArray12[3] = objectArray13;
      objectArray12[4] = objectArray8;
      objectArray0[3] = objectArray12;
      Object[][] objectArray14 = new Object[4][7];
      objectArray14[0] = objectArray13;
      Object[] objectArray15 = new Object[5];
      objectArray15[0] = object1;
      objectArray15[1] = object1;
      Object object2 = new Object();
      objectArray15[2] = object2;
      objectArray15[3] = object1;
      objectArray15[4] = object0;
      objectArray14[1] = objectArray15;
      objectArray14[2] = objectArray8;
      objectArray14[3] = objectArray4;
      objectArray0[4] = objectArray14;
      Object[][] objectArray16 = new Object[2][7];
      objectArray16[0] = objectArray3;
      objectArray16[1] = objectArray9;
      objectArray0[5] = objectArray16;
      Object[][] objectArray17 = new Object[7][5];
      objectArray17[0] = objectArray5;
      Object[] objectArray18 = new Object[3];
      objectArray18[0] = object1;
      objectArray18[1] = object1;
      objectArray18[2] = object0;
      objectArray17[1] = objectArray18;
      Object[] objectArray19 = new Object[7];
      objectArray19[0] = (Object) linkedList0;
      objectArray19[1] = object1;
      objectArray19[2] = (Object) linkedList0;
      objectArray19[3] = object0;
      objectArray19[4] = object1;
      objectArray19[5] = object0;
      objectArray19[6] = (Object) linkedList0;
      objectArray17[2] = objectArray19;
      objectArray17[3] = objectArray5;
      objectArray17[4] = objectArray7;
      objectArray17[5] = objectArray8;
      objectArray17[6] = objectArray13;
      objectArray0[6] = objectArray17;
      Object[][] objectArray20 = new Object[4][2];
      objectArray20[0] = objectArray18;
      objectArray20[1] = objectArray19;
      objectArray20[2] = objectArray3;
      Object[] objectArray21 = new Object[6];
      objectArray21[0] = object1;
      objectArray21[1] = object2;
      objectArray21[2] = object2;
      objectArray21[3] = (Object) linkedList0;
      objectArray21[4] = object2;
      objectArray21[5] = object0;
      objectArray20[3] = objectArray21;
      objectArray0[7] = objectArray20;
      Object[][] objectArray22 = new Object[5][8];
      objectArray22[0] = objectArray9;
      objectArray22[1] = objectArray18;
      objectArray22[2] = objectArray4;
      objectArray22[3] = objectArray21;
      Object[] objectArray23 = new Object[8];
      objectArray23[0] = object1;
      objectArray23[1] = (Object) linkedList0;
      objectArray23[2] = object2;
      objectArray23[3] = object0;
      objectArray23[4] = object2;
      Object object3 = new Object();
      objectArray23[5] = object3;
      objectArray23[6] = object0;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Negative 'width' argument.";
      stringArray0[1] = "seriesKeys";
      stringArray0[2] = "fT";
      stringArray0[3] = "2Xt!<X4/@E1Y^&?gL/";
      stringArray0[4] = "";
      stringArray0[5] = "/}>''OFfCB1W_9J";
      stringArray0[6] = "qT56[W";
      stringArray0[7] = "";
      stringArray0[8] = ") is not recognised.";
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getSeriesKey(29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 29
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<DefaultWindDataset> linkedList0 = new LinkedList<DefaultWindDataset>();
      Object[][][] objectArray0 = new Object[0][6][6];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getX(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[][][] objectArray0 = new Object[1][2][2];
      Object[][] objectArray1 = new Object[3][0];
      Object[] objectArray2 = new Object[6];
      Object object0 = new Object();
      objectArray2[0] = object0;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      Object object1 = defaultWindDataset0.clone();
      objectArray2[1] = object1;
      Object object2 = new Object();
      objectArray2[2] = object2;
      Object object3 = defaultWindDataset0.clone();
      objectArray2[3] = object3;
      Object object4 = new Object();
      objectArray2[4] = object4;
      Object object5 = defaultWindDataset0.clone();
      objectArray2[5] = object5;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) defaultWindDataset0;
      objectArray3[1] = object4;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[5];
      objectArray4[0] = object2;
      objectArray4[1] = object1;
      objectArray4[2] = object0;
      objectArray4[3] = object2;
      objectArray4[4] = object0;
      objectArray1[2] = objectArray4;
      objectArray0[0] = objectArray1;
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.DefaultWindDataset cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      int int0 = 230;
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindDirection(230, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 230, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[][][] objectArrayArrayArray0 = null;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset((Object[][][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object[][][] objectArrayArrayArray0 = null;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset((String[]) null, (Object[][][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      DefaultWindDataset defaultWindDataset1 = new DefaultWindDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      int int0 = 0;
      defaultWindDataset0.setNotify(false);
      defaultWindDataset1.removeChangeListener(xYDatasetTableModel0);
      xYDatasetTableModel0.findColumn("Y\"(");
      xYDatasetTableModel0.getColumnClass(0);
      defaultWindDataset1.hasListener(xYDatasetTableModel0);
      xYDatasetTableModel0.fireTableRowsInserted(0, 0);
      xYDatasetTableModel0.getValueAt(0, 0);
      defaultWindDataset1.removeChangeListener(xYDatasetTableModel0);
      defaultWindDataset0.hasListener(defaultWindDataset1);
      int int1 = 193;
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindDirection(193, 193);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 193, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Short short0 = new Short((short)2);
      defaultWindDataset0.equals(short0);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getY(0, (short)2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      DatasetGroup datasetGroup0 = new DatasetGroup("c");
      datasetGroup0.clone();
      datasetGroup0.clone();
      defaultWindDataset0.setGroup(datasetGroup0);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindDirection(2479, 2479);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2479, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Byte byte0 = new Byte((byte)0);
      defaultWindDataset0.indexOf(byte0);
      defaultWindDataset0.clone();
      defaultWindDataset0.validateObject();
      defaultWindDataset0.hasListener((EventListener) null);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getYValue(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[][][] objectArray0 = new Object[3][2][2];
      Object[][] objectArray1 = new Object[7][5];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getX(2, (-854));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object[][] objectArray0 = new Object[9][9];
      Object[] objectArray1 = new Object[8];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object object0 = defaultWindDataset0.clone();
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[1] = object1;
      Object object2 = new Object();
      objectArray1[2] = object2;
      Object object3 = defaultWindDataset0.clone();
      objectArray1[3] = object3;
      Object object4 = new Object();
      objectArray1[4] = object4;
      Object object5 = new Object();
      objectArray1[5] = object5;
      Object object6 = defaultWindDataset0.clone();
      objectArray1[6] = object6;
      Object object7 = defaultWindDataset0.clone();
      objectArray1[7] = object7;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = object3;
      objectArray2[1] = object3;
      objectArray2[2] = object3;
      objectArray2[3] = object6;
      objectArray2[4] = object3;
      objectArray2[5] = object0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[8];
      Object[][][] objectArray4 = new Object[3][5][0];
      objectArray4[0] = objectArray0;
      Object[][] objectArray5 = new Object[4][7];
      objectArray5[0] = objectArray2;
      Object[] objectArray6 = new Object[7];
      objectArray6[0] = object0;
      objectArray6[1] = (Object) defaultWindDataset0;
      Object object8 = new Object();
      objectArray6[2] = object8;
      objectArray6[3] = object0;
      Object object9 = new Object();
      objectArray6[4] = object9;
      objectArray6[5] = object5;
      objectArray6[6] = (Object) defaultWindDataset0;
      objectArray5[1] = objectArray6;
      objectArray5[2] = objectArray2;
      objectArray5[3] = objectArray2;
      objectArray4[1] = objectArray5;
      Object[][] objectArray7 = new Object[0][0];
      objectArray4[2] = objectArray7;
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(objectArray4);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(defaultTableXYDataset0);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      xYDatasetTableModel0.getListeners(class0);
      defaultWindDataset0.addChangeListener(xYDatasetTableModel0);
      defaultWindDataset0.equals("");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object[][][] objectArray0 = new Object[2][2][6];
      Object[][] objectArray1 = new Object[2][1];
      Object[] objectArray2 = new Object[1];
      Object object0 = new Object();
      objectArray2[0] = object0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[3];
      objectArray3[0] = object0;
      objectArray3[1] = object0;
      objectArray3[2] = object0;
      objectArray1[1] = objectArray3;
      objectArray0[0] = objectArray1;
      Object[][] objectArray4 = new Object[9][7];
      objectArray4[0] = objectArray2;
      objectArray4[1] = objectArray3;
      objectArray4[2] = objectArray3;
      objectArray4[3] = objectArray3;
      objectArray4[4] = objectArray2;
      objectArray4[5] = objectArray2;
      objectArray4[6] = objectArray2;
      objectArray4[7] = objectArray3;
      objectArray4[8] = objectArray3;
      objectArray0[1] = objectArray4;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      int int0 = 0;
      // Undeclared exception!
      try { 
        defaultWindDataset0.getItemCount((-3479));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: -3479
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Object[][][] objectArray0 = new Object[8][9][0];
      Object[][] objectArray1 = new Object[3][8];
      Object[] objectArray2 = new Object[9];
      objectArray2[0] = (Object) linkedList0;
      Object object0 = new Object();
      objectArray2[1] = object0;
      objectArray2[2] = (Object) linkedList0;
      objectArray2[3] = (Object) linkedList0;
      objectArray2[4] = (Object) linkedList0;
      Object object1 = new Object();
      objectArray2[5] = object1;
      objectArray2[6] = (Object) linkedList0;
      objectArray2[7] = (Object) linkedList0;
      objectArray2[8] = (Object) linkedList0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[9];
      objectArray3[0] = object1;
      objectArray3[1] = object0;
      objectArray3[2] = object0;
      objectArray3[3] = object0;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object object2 = defaultWindDataset0.clone();
      objectArray3[4] = object2;
      objectArray3[5] = object0;
      objectArray3[6] = object1;
      objectArray3[7] = object1;
      objectArray3[8] = object0;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[7];
      objectArray4[0] = (Object) defaultWindDataset0;
      objectArray4[1] = object0;
      objectArray4[2] = (Object) linkedList0;
      objectArray4[3] = (Object) defaultWindDataset0;
      objectArray4[4] = object1;
      objectArray4[5] = object0;
      objectArray4[6] = (Object) defaultWindDataset0;
      objectArray1[2] = objectArray4;
      objectArray0[0] = objectArray1;
      Object[][] objectArray5 = new Object[1][4];
      objectArray5[0] = objectArray4;
      objectArray0[1] = objectArray5;
      Object[][] objectArray6 = new Object[0][3];
      objectArray0[2] = objectArray6;
      Object[][] objectArray7 = new Object[8][3];
      objectArray7[0] = objectArray3;
      objectArray7[1] = objectArray2;
      objectArray7[2] = objectArray2;
      objectArray7[3] = objectArray2;
      Object[] objectArray8 = new Object[3];
      objectArray8[0] = (Object) linkedList0;
      objectArray8[1] = object1;
      objectArray8[2] = object2;
      objectArray7[4] = objectArray8;
      objectArray7[5] = objectArray3;
      objectArray7[6] = objectArray3;
      objectArray7[7] = objectArray4;
      objectArray0[3] = objectArray7;
      Object[][] objectArray9 = new Object[8][0];
      objectArray9[0] = objectArray8;
      objectArray9[1] = objectArray8;
      objectArray9[2] = objectArray2;
      objectArray9[3] = objectArray3;
      objectArray9[4] = objectArray8;
      objectArray9[5] = objectArray4;
      objectArray9[6] = objectArray3;
      objectArray9[7] = objectArray8;
      objectArray0[4] = objectArray9;
      Object[][] objectArray10 = new Object[4][8];
      objectArray10[0] = objectArray8;
      objectArray10[1] = objectArray4;
      objectArray10[2] = objectArray8;
      objectArray10[3] = objectArray2;
      objectArray0[5] = objectArray10;
      Object[][] objectArray11 = new Object[5][8];
      objectArray11[0] = objectArray2;
      objectArray11[1] = objectArray8;
      objectArray11[2] = objectArray2;
      Object[] objectArray12 = new Object[9];
      objectArray12[0] = object1;
      objectArray12[1] = object0;
      objectArray12[2] = (Object) linkedList0;
      objectArray12[3] = (Object) linkedList0;
      objectArray12[4] = (Object) defaultWindDataset0;
      objectArray12[5] = (Object) linkedList0;
      objectArray12[6] = object1;
      objectArray12[7] = object1;
      objectArray12[8] = object0;
      objectArray11[3] = objectArray12;
      objectArray11[4] = objectArray2;
      objectArray0[6] = objectArray11;
      Object[][] objectArray13 = new Object[6][2];
      objectArray13[0] = objectArray8;
      objectArray13[1] = objectArray4;
      objectArray13[2] = objectArray3;
      Object[] objectArray14 = new Object[9];
      objectArray14[0] = (Object) linkedList0;
      objectArray14[1] = (Object) defaultWindDataset0;
      Object object3 = defaultWindDataset0.clone();
      objectArray14[2] = object3;
      objectArray14[3] = (Object) defaultWindDataset0;
      objectArray14[4] = (Object) linkedList0;
      objectArray14[5] = object2;
      objectArray14[6] = object1;
      Object object4 = defaultWindDataset0.clone();
      objectArray14[7] = object4;
      objectArray14[8] = object0;
      objectArray13[3] = objectArray14;
      objectArray13[4] = objectArray4;
      objectArray13[5] = objectArray8;
      objectArray0[7] = objectArray13;
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(linkedList0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object[][][] objectArray0 = new Object[4][6][0];
      Object[][] objectArray1 = new Object[4][1];
      Object[] objectArray2 = new Object[6];
      Object object0 = new Object();
      objectArray2[0] = object0;
      Object object1 = new Object();
      objectArray2[1] = object1;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object object2 = defaultWindDataset0.clone();
      objectArray2[2] = object2;
      Object object3 = defaultWindDataset0.clone();
      objectArray2[3] = object3;
      Object object4 = new Object();
      objectArray2[4] = object4;
      Object object5 = new Object();
      objectArray2[5] = object5;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[3];
      objectArray3[0] = object1;
      objectArray3[1] = object0;
      Object object6 = defaultWindDataset0.clone();
      objectArray3[2] = object6;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[4];
      objectArray4[0] = object6;
      Object object7 = defaultWindDataset0.clone();
      objectArray4[1] = object7;
      objectArray4[2] = (Object) defaultWindDataset0;
      Object object8 = new Object();
      objectArray4[3] = object8;
      objectArray1[2] = objectArray4;
      Object[] objectArray5 = new Object[5];
      objectArray5[0] = object1;
      objectArray5[1] = object3;
      Object object9 = defaultWindDataset0.clone();
      objectArray5[2] = object9;
      objectArray5[3] = object1;
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "DefaultIntervalCategoryDataset.getValue(): series index out of range.";
      stringArray0[1] = "iY`5";
      stringArray0[2] = "&Ie4ursfQO*<";
      stringArray0[3] = "";
      stringArray0[4] = "umi8eXB@d`m?_JF T@Q";
      stringArray0[5] = "'c~Ahw2LY";
      stringArray0[6] = "='  g";
      stringArray0[7] = "Be<%i=fh?]F?.U a8L)";
      stringArray0[8] = "GsFS-[Xl~9xQMaK ";
      Object[][][] objectArray0 = new Object[8][4][3];
      Object[][] objectArray1 = new Object[7][9];
      objectArray1[0] = (Object[]) stringArray0;
      objectArray1[1] = (Object[]) stringArray0;
      objectArray1[2] = (Object[]) stringArray0;
      objectArray1[3] = (Object[]) stringArray0;
      objectArray1[4] = (Object[]) stringArray0;
      objectArray1[5] = (Object[]) stringArray0;
      objectArray1[6] = (Object[]) stringArray0;
      objectArray0[0] = objectArray1;
      Object[][] objectArray2 = new Object[8][1];
      objectArray2[0] = (Object[]) stringArray0;
      objectArray2[1] = (Object[]) stringArray0;
      objectArray2[2] = (Object[]) stringArray0;
      objectArray2[3] = (Object[]) stringArray0;
      objectArray2[4] = (Object[]) stringArray0;
      objectArray2[5] = (Object[]) stringArray0;
      objectArray2[6] = (Object[]) stringArray0;
      objectArray2[7] = (Object[]) stringArray0;
      objectArray0[1] = objectArray2;
      Object[][] objectArray3 = new Object[7][7];
      Object[] objectArray4 = new Object[2];
      objectArray4[0] = (Object) "";
      objectArray4[1] = (Object) "iY`5";
      objectArray3[0] = objectArray4;
      objectArray3[1] = (Object[]) stringArray0;
      objectArray3[2] = (Object[]) stringArray0;
      Object[] objectArray5 = new Object[7];
      objectArray5[0] = (Object) "&Ie4ursfQO*<";
      objectArray5[1] = (Object) "='  g";
      objectArray5[2] = (Object) "umi8eXB@d`m?_JF T@Q";
      objectArray5[3] = (Object) "umi8eXB@d`m?_JF T@Q";
      objectArray5[4] = (Object) "umi8eXB@d`m?_JF T@Q";
      objectArray5[5] = (Object) "iY`5";
      objectArray5[6] = (Object) "umi8eXB@d`m?_JF T@Q";
      objectArray3[3] = objectArray5;
      objectArray3[4] = (Object[]) stringArray0;
      Object[] objectArray6 = new Object[0];
      objectArray3[5] = objectArray6;
      objectArray3[6] = (Object[]) stringArray0;
      objectArray0[2] = objectArray3;
      Object[][] objectArray7 = new Object[0][9];
      objectArray0[3] = objectArray7;
      Object[][] objectArray8 = new Object[2][9];
      Object[] objectArray9 = new Object[5];
      objectArray9[0] = (Object) "='  g";
      Object object0 = new Object();
      objectArray9[1] = object0;
      objectArray9[2] = (Object) "GsFS-[Xl~9xQMaK ";
      objectArray9[3] = (Object) "Be<%i=fh?]F?.U a8L)";
      objectArray9[4] = (Object) "&Ie4ursfQO*<";
      objectArray8[0] = objectArray9;
      objectArray8[1] = objectArray5;
      objectArray0[4] = objectArray8;
      Object[][] objectArray10 = new Object[0][3];
      objectArray0[5] = objectArray10;
      Object[][] objectArray11 = new Object[8][7];
      objectArray11[0] = objectArray6;
      objectArray11[1] = objectArray4;
      objectArray11[2] = objectArray5;
      objectArray11[3] = objectArray5;
      objectArray11[4] = objectArray5;
      objectArray11[5] = (Object[]) stringArray0;
      objectArray11[6] = objectArray6;
      objectArray11[7] = objectArray5;
      objectArray0[6] = objectArray11;
      Object[][] objectArray12 = new Object[6][2];
      objectArray12[0] = objectArray6;
      objectArray12[1] = objectArray5;
      Object[] objectArray13 = new Object[9];
      objectArray13[0] = (Object) "Be<%i=fh?]F?.U a8L)";
      objectArray13[1] = (Object) "Be<%i=fh?]F?.U a8L)";
      objectArray13[2] = (Object) "GsFS-[Xl~9xQMaK ";
      objectArray13[3] = (Object) "umi8eXB@d`m?_JF T@Q";
      objectArray13[4] = (Object) "GsFS-[Xl~9xQMaK ";
      objectArray13[5] = (Object) "";
      objectArray13[6] = (Object) "&Ie4ursfQO*<";
      objectArray13[7] = (Object) "Be<%i=fh?]F?.U a8L)";
      objectArray13[8] = (Object) "";
      objectArray12[2] = objectArray13;
      objectArray12[3] = objectArray4;
      objectArray12[4] = objectArray6;
      objectArray12[5] = (Object[]) stringArray0;
      objectArray0[7] = objectArray12;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(stringArray0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      defaultWindDataset0.validateObject();
      int int0 = (-1905);
      int int1 = 2297;
      // Undeclared exception!
      try { 
        defaultWindDataset0.getItemCount(2297);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 2297
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Object[][][] objectArray0 = new Object[5][7][0];
      Object[][] objectArray1 = new Object[7][1];
      objectArray1[0] = (Object[]) null;
      Object[] objectArray2 = new Object[4];
      Object object0 = new Object();
      objectArray2[1] = object0;
      Object object1 = new Object();
      objectArray2[1] = object1;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object[][][] objectArray0 = new Object[5][6][2];
      Object[][] objectArray1 = new Object[14][7];
      Object[] objectArray2 = new Object[2];
      objectArray2[0] = (Object) linkedList0;
      Object[][][] objectArray3 = new Object[2][16][7];
      objectArray3[0] = objectArray1;
      objectArray3[1] = objectArray1;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object[][][] objectArray0 = new Object[0][5][6];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      defaultWindDataset0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        defaultWindDataset0.getItemCount((-759));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: -759
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      Object[][][] objectArray0 = new Object[1][3][9];
      Object[][] objectArray1 = new Object[0][7];
      Comparator<Float> comparator0 = (Comparator<Float>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Float float0 = new Float(473.0235);
      Float.max(0.0F, 0.0F);
      Float.isFinite(0.0F);
      linkedList0.clone();
      linkedList0.add(float0);
      linkedList0.sort(comparator0);
      objectArray0[0] = objectArray1;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      defaultWindDataset0.clone();
      defaultWindDataset0.getNotify();
      defaultWindDataset0.validateObject();
      defaultWindDataset0.getNotify();
      Double double0 = new Double(0.0F);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindForce(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(defaultWindDataset0, false);
      double double0 = 1690.188923185;
      // Undeclared exception!
      try { 
        defaultWindDataset0.getSeriesKey((-297));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: -297
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      System.setCurrentTimeMillis(1695L);
      Object[][] objectArray0 = new Object[10][8];
      Object[] objectArray1 = new Object[3];
      Object object0 = new Object();
      objectArray1[0] = object0;
      Object[][][] objectArray2 = new Object[1][6][9];
      Object[][] objectArray3 = new Object[3][5];
      objectArray3[0] = objectArray1;
      objectArray3[1] = objectArray1;
      objectArray3[2] = objectArray1;
      objectArray2[0] = objectArray3;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray2);
      Object object1 = defaultWindDataset0.clone();
      objectArray1[1] = (Object) defaultWindDataset0;
      DefaultWindDataset defaultWindDataset1 = (DefaultWindDataset)defaultWindDataset0.clone();
      objectArray1[2] = (Object) defaultWindDataset1;
      objectArray0[0] = objectArray1;
      Object[] objectArray4 = new Object[8];
      objectArray4[0] = (Object) defaultWindDataset0;
      DefaultWindDataset defaultWindDataset2 = (DefaultWindDataset)defaultWindDataset0.clone();
      objectArray4[1] = (Object) defaultWindDataset2;
      objectArray4[2] = object0;
      objectArray4[3] = (Object) defaultWindDataset0;
      objectArray4[4] = object1;
      objectArray4[5] = object1;
      objectArray4[6] = object0;
      Float float0 = Float.valueOf(0.0F);
      defaultWindDataset1.indexOf(float0);
      objectArray4[7] = (Object) defaultWindDataset1;
      objectArray0[1] = objectArray4;
      LinkedList<Date> linkedList0 = new LinkedList<Date>();
      Object[][] objectArray5 = new Object[2][5];
      objectArray5[0] = objectArray1;
      objectArray5[1] = objectArray1;
      DefaultWindDataset.seriesNameListFromDataArray(objectArray5);
      // Undeclared exception!
      try { 
        defaultWindDataset2.getY((-3733), 905);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      System.setCurrentTimeMillis(1695L);
      Object[][] objectArray0 = new Object[2][8];
      Object[] objectArray1 = new Object[3];
      Object[][][] objectArray2 = new Object[1][6][9];
      Object[][] objectArray3 = new Object[3][5];
      objectArray3[0] = objectArray1;
      objectArray3[1] = objectArray1;
      objectArray3[2] = objectArray1;
      objectArray2[0] = objectArray3;
      objectArray0[0] = objectArray1;
      objectArray0[1] = objectArray1;
      DefaultWindDataset.seriesNameListFromDataArray(objectArray0);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray2);
      defaultWindDataset0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object[][] objectArrayArray0 = null;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      defaultWindDataset0.validateObject();
      defaultWindDataset0.equals(linkedList0);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getItemCount(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object[][] objectArray0 = new Object[9][3];
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) defaultWindDataset0;
      objectArray1[1] = (Object) defaultWindDataset0;
      objectArray1[2] = (Object) defaultWindDataset0;
      Object object0 = new Object();
      objectArray1[3] = object0;
      Object object1 = new Object();
      objectArray1[4] = object1;
      DefaultWindDataset defaultWindDataset1 = new DefaultWindDataset();
      objectArray1[5] = (Object) defaultWindDataset1;
      objectArray1[6] = (Object) defaultWindDataset0;
      objectArray1[7] = (Object) defaultWindDataset0;
      objectArray1[8] = (Object) defaultWindDataset0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[1];
      objectArray2[0] = (Object) defaultWindDataset0;
      objectArray0[1] = objectArray2;
      Object object2 = new Object();
      objectArray0[2] = objectArray2;
      Object[] objectArray3 = new Object[0];
      objectArray0[3] = objectArray3;
      Object[] objectArray4 = new Object[2];
      objectArray4[0] = (Object) defaultWindDataset1;
      objectArray4[1] = object2;
      objectArray0[4] = objectArray4;
      Object[] objectArray5 = new Object[3];
      objectArray5[0] = (Object) defaultWindDataset1;
      objectArray5[1] = (Object) defaultWindDataset0;
      Object object3 = new Object();
      objectArray5[2] = object3;
      objectArray0[5] = objectArray5;
      objectArray0[6] = objectArray5;
      Object[] objectArray6 = new Object[1];
      objectArray1[6] = object1;
      objectArray0[7] = objectArray6;
      Object[] objectArray7 = new Object[1];
      objectArray7[0] = (Object) defaultWindDataset0;
      DefaultWindDataset.seriesNameListFromDataArray(objectArray0);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getItemCount(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 0
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object[][][] objectArray0 = new Object[0][1][1];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
      Object[] objectArray1 = new Object[5];
      objectArray1[0] = (Object) linkedList0;
      objectArray1[1] = (Object) linkedList0;
      objectArray1[2] = (Object) linkedList0;
      objectArray1[3] = (Object) defaultWindDataset0;
      objectArray1[4] = (Object) defaultWindDataset0;
      Object[] objectArray2 = new Object[4];
      objectArray2[0] = (Object) linkedList0;
      objectArray2[1] = (Object) linkedList0;
      objectArray2[2] = (Object) linkedList0;
      objectArray2[3] = (Object) defaultWindDataset0;
      Object[] objectArray3 = new Object[5];
      objectArray3[0] = (Object) defaultWindDataset0;
      objectArray3[1] = (Object) defaultWindDataset0;
      objectArray3[2] = (Object) linkedList0;
      objectArray3[3] = (Object) linkedList0;
      // Undeclared exception!
      try { 
        defaultWindDataset0.getXValue(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      int int0 = 29;
      // Undeclared exception!
      try { 
        defaultWindDataset0.getSeriesKey(29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid series index: 29
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object object0 = defaultWindDataset0.clone();
      Object[][] objectArray0 = new Object[2][1];
      Object[] objectArray1 = new Object[4];
      object0.equals(defaultWindDataset0);
      objectArray1[0] = (Object) defaultWindDataset0;
      objectArray1[1] = object0;
      objectArray1[2] = (Object) defaultWindDataset0;
      objectArray1[3] = object0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[1];
      objectArray2[0] = (Object) defaultWindDataset0;
      objectArray0[1] = objectArray2;
      DefaultWindDataset.seriesNameListFromDataArray(objectArray0);
      // Undeclared exception!
      try { 
        defaultWindDataset0.getWindDirection(1439, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1439, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "D";
      stringArray0[2] = "org.jfree.data.Range";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "*h.2foC\"w";
      stringArray0[6] = "seriesKeys";
      stringArray0[7] = "";
      Object[][][] objectArray0 = new Object[9][8][5];
      Object[][] objectArray1 = new Object[0][9];
      objectArray0[0] = objectArray1;
      Object[][] objectArray2 = new Object[2][5];
      Object[] objectArray3 = new Object[1];
      objectArray3[0] = (Object) "";
      objectArray2[0] = objectArray3;
      Object[] objectArray4 = new Object[8];
      objectArray4[0] = (Object) "seriesKeys";
      objectArray4[1] = (Object) "D";
      objectArray4[2] = (Object) "*h.2foC\"w";
      objectArray4[3] = (Object) "";
      Object object0 = new Object();
      objectArray4[4] = object0;
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      Object object1 = defaultWindDataset0.clone();
      objectArray4[5] = object1;
      objectArray4[6] = (Object) "";
      objectArray4[7] = (Object) "seriesKeys";
      objectArray2[1] = objectArray4;
      objectArray0[1] = objectArray2;
      Object[][] objectArray5 = new Object[3][0];
      objectArray5[0] = objectArray4;
      objectArray5[1] = objectArray3;
      objectArray5[2] = (Object[]) stringArray0;
      objectArray0[2] = objectArray5;
      Object[][] objectArray6 = new Object[7][9];
      Object[] objectArray7 = new Object[8];
      objectArray7[0] = (Object) "";
      objectArray7[1] = object1;
      objectArray7[2] = (Object) "";
      objectArray7[3] = (Object) "org.jfree.data.Range";
      objectArray7[4] = (Object) "D";
      objectArray7[5] = (Object) "seriesKeys";
      objectArray7[6] = object0;
      objectArray7[7] = (Object) "";
      objectArray6[0] = objectArray7;
      objectArray6[1] = (Object[]) stringArray0;
      objectArray6[2] = objectArray4;
      objectArray6[3] = objectArray3;
      objectArray6[4] = objectArray4;
      objectArray6[5] = objectArray4;
      objectArray6[6] = objectArray3;
      objectArray0[3] = objectArray6;
      Object[][] objectArray8 = new Object[2][6];
      objectArray8[0] = objectArray3;
      objectArray8[1] = (Object[]) stringArray0;
      objectArray0[4] = objectArray8;
      Object[][] objectArray9 = new Object[6][8];
      objectArray9[0] = objectArray3;
      objectArray9[1] = (Object[]) stringArray0;
      objectArray9[2] = (Object[]) stringArray0;
      objectArray9[3] = objectArray7;
      objectArray9[4] = objectArray7;
      objectArray9[5] = objectArray3;
      objectArray0[5] = objectArray9;
      Object[][] objectArray10 = new Object[6][5];
      objectArray10[0] = objectArray3;
      objectArray10[1] = objectArray3;
      objectArray10[2] = objectArray3;
      objectArray10[3] = objectArray3;
      objectArray10[4] = (Object[]) stringArray0;
      objectArray10[5] = objectArray4;
      objectArray0[6] = objectArray10;
      Object[][] objectArray11 = new Object[2][2];
      objectArray11[0] = objectArray3;
      objectArray11[1] = objectArray7;
      objectArray0[7] = objectArray11;
      Object[][] objectArray12 = new Object[7][1];
      objectArray12[0] = objectArray4;
      objectArray12[1] = (Object[]) stringArray0;
      objectArray12[2] = objectArray7;
      objectArray12[3] = objectArray3;
      Object[] objectArray13 = new Object[3];
      objectArray13[0] = (Object) defaultWindDataset0;
      objectArray13[1] = (Object) "D";
      objectArray13[2] = (Object) "";
      objectArray12[4] = objectArray13;
      objectArray12[5] = (Object[]) stringArray0;
      objectArray12[6] = objectArray3;
      objectArray0[8] = objectArray12;
      DefaultWindDataset defaultWindDataset1 = null;
      try {
        defaultWindDataset1 = new DefaultWindDataset(stringArray0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      Object object0 = defaultWindDataset0.clone();
      boolean boolean0 = defaultWindDataset0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][8];
      Object[] objectArray1 = new Object[3];
      Object object0 = new Object();
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[1] = object1;
      objectArray1[2] = object0;
      objectArray0[0] = objectArray1;
      DefaultWindDataset.seriesNameListFromDataArray(objectArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.jfree.data.xy.DefaultWindDataset";
      stringArray0[1] = "Q`<S/Fjey.H|D^!";
      stringArray0[2] = "@k|@Vs .}1V1lj^";
      Object[][][] objectArray2 = new Object[1][1][6];
      objectArray2[0] = objectArray0;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(stringArray0, objectArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }
}
