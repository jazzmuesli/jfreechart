/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:09:48 GMT 2019
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.xy.OHLCDataItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OHLCDataItem_ESTest extends OHLCDataItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1L);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, (-1.0), 0.0, 1L, (-894.872));
      Number number0 = oHLCDataItem0.getVolume();
      assertEquals((-894.872), number0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, 0.0);
      Number number0 = oHLCDataItem0.getVolume();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 1735L, 1735L);
      Number number0 = oHLCDataItem0.getVolume();
      assertEquals(1735.0, number0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 2358, 2358, 2358, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 2358, 752.2, 752.2, (-3666.8621150472745));
      Number number0 = oHLCDataItem0.getOpen();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-5074.72092), (-5074.72092), 0.0, 0.0, (-1575.0));
      Number number0 = oHLCDataItem0.getOpen();
      assertEquals((-5074.72092), number0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1871), 3170, (-1871));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 3170, (-1028.778223), (-1871), 1.0, 1.0);
      Number number0 = oHLCDataItem0.getLow();
      assertEquals((-1871.0), number0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-5074.72092), (-5074.72092), 0.0, 0.0, (-1575.0));
      Number number0 = oHLCDataItem0.getLow();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 839.58924, (-1.0), 605.50178933, 605.50178933, (-699.58));
      Number number0 = oHLCDataItem0.getLow();
      assertEquals(605.50178933, number0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-2361.2598322846443), (-2361.2598322846443), (-2361.2598322846443), (-2361.2598322846443), (-2361.2598322846443));
      Number number0 = oHLCDataItem0.getHigh();
      assertEquals((-2361.2598322846443), number0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-147), (-147), (-147));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-147), 0.0, (-147), (-147), 0.0);
      Number number0 = oHLCDataItem0.getHigh();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate(978, 978, 978);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 978, 978, 1952.6785981627884, 978, 978);
      Number number0 = oHLCDataItem0.getHigh();
      assertEquals(978.0, number0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-5074.72092), (-5074.72092), 0.0, 0.0, (-1575.0));
      Number number0 = oHLCDataItem0.getClose();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, (-205.113), 2228.78095858);
      Number number0 = oHLCDataItem0.getClose();
      assertEquals((-205.113), number0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1L);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 1L, (-1.0), 0.0, 1L, 1L);
      MockDate mockDate1 = new MockDate();
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate1, 1L, 275.0, 1629.34461751934, 1219.891803962089, 0.0);
      int int0 = oHLCDataItem1.compareTo(oHLCDataItem0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1L);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 1L, (-1.0), 0.0, 1L, 1L);
      MockDate mockDate1 = new MockDate();
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate1, 1L, 275.0, 1629.34461751934, 1219.891803962089, 0.0);
      int int0 = oHLCDataItem0.compareTo(oHLCDataItem1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OHLCDataItem oHLCDataItem0 = null;
      try {
        oHLCDataItem0 = new OHLCDataItem((Date) null, 1.0, 2353.5891, 1.0, 1.0, 2353.5891);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'date' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 1L, 1L, 1L, 1L, 1L);
      int int0 = oHLCDataItem0.compareTo(oHLCDataItem0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-2960.1380354602), 0.0, (-2960.1380354602), (-2960.1380354602), (-2960.1380354602));
      // Undeclared exception!
      try { 
        oHLCDataItem0.compareTo(mockDate0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // OHLCDataItem.compareTo().
         //
         verifyException("org.jfree.data.xy.OHLCDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-2960.1380354602), 0.0, (-2960.1380354602), (-2960.1380354602), (-2960.1380354602));
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, (-2960.1380354602), 0.0, (-2960.1380354602), 0.0, 0.0);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-563.386882660219), 0.0, 2361.62982681, 0.0, 0.0);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, 0.0, 0.0, 2361.62982681, 0.0, (-563.386882660219));
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-563.386882660219), 0.0, 2361.62982681, 0.0, 0.0);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, (-563.386882660219));
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, 0.0);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 1502.3248208343707, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 2049.273917363641);
      Instant instant1 = MockInstant.ofEpochSecond(1735L, 1735L);
      Date date1 = Date.from(instant1);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(date1, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 1735L, 1735L);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockDate mockDate0 = new MockDate(978, 978, 978);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 978, 978, 1952.6785981627884, 978, 978);
      boolean boolean0 = oHLCDataItem0.equals(mockDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockDate mockDate0 = new MockDate(978, 978, 978);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 978, 978, 1952.6785981627884, 978, 978);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 1502.3248208343707, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 2049.273917363641);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(date0, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 1735L, 1735L);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockDate mockDate0 = new MockDate(978, 978, 978);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 978, 978, 1952.6785981627884, 978, 978);
      Number number0 = oHLCDataItem0.getOpen();
      assertEquals(978.0, number0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 1502.3248208343707, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 2049.273917363641);
      Number number0 = oHLCDataItem0.getClose();
      assertEquals(1502.3248208343707, number0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 1502.3248208343707, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 2049.273917363641);
      Date date1 = oHLCDataItem0.getDate();
      assertSame(date0, date1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 1502.3248208343707, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 2049.273917363641);
      Number number0 = oHLCDataItem0.getHigh();
      assertEquals(2049.273917363641, number0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 1502.3248208343707, 2049.273917363641, 1502.3248208343707, 1502.3248208343707, 2049.273917363641);
      Number number0 = oHLCDataItem0.getVolume();
      assertEquals(2049.273917363641, number0);
  }
}
