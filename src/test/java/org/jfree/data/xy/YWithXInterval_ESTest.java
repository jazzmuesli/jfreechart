/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:21:24 GMT 2019
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.YWithXInterval;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class YWithXInterval_ESTest extends YWithXInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(0.0, 0.0, 1050.086506829214);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertFalse(boolean0);
      assertEquals(0.0, yWithXInterval0.getXHigh(), 0.01);
      assertEquals(0.0, yWithXInterval1.getY(), 0.01);
      assertEquals(0.0, yWithXInterval1.getXLow(), 0.01);
      assertFalse(yWithXInterval1.equals((Object)yWithXInterval0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(0.0, (-26.23), (-399.93855));
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals((-26.23), yWithXInterval1.getXLow(), 0.01);
      assertFalse(boolean0);
      assertEquals((-399.93855), yWithXInterval1.getXHigh(), 0.01);
      assertEquals(0.0, yWithXInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1279.407535829054, 0.0, 17.4785245422);
      YWithXInterval yWithXInterval1 = new YWithXInterval(0.0, 0.0, 1279.407535829054);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
      assertEquals(1279.407535829054, yWithXInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(1279.407535829054, yWithXInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      double double0 = yWithXInterval0.getY();
      assertEquals(0.0, yWithXInterval0.getXHigh(), 0.01);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1.0, 1.0, 1.0);
      double double0 = yWithXInterval0.getY();
      assertEquals(1.0, yWithXInterval0.getXHigh(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, yWithXInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      double double0 = yWithXInterval0.getXLow();
      assertEquals(0.0, yWithXInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, yWithXInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-745.27), (-745.27), (-745.27));
      double double0 = yWithXInterval0.getXLow();
      assertEquals((-745.27), yWithXInterval0.getY(), 0.01);
      assertEquals((-745.27), double0, 0.01);
      assertEquals((-745.27), yWithXInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      double double0 = yWithXInterval0.getXHigh();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, yWithXInterval0.getY(), 0.01);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1.0, 1.0, 1.0);
      double double0 = yWithXInterval0.getXHigh();
      assertEquals(1.0, yWithXInterval0.getY(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, yWithXInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1.0, 1.0, 1.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(1.0, 1.0, (-1179.68233));
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertFalse(boolean0);
      assertEquals(1.0, yWithXInterval1.getY(), 0.01);
      assertFalse(yWithXInterval1.equals((Object)yWithXInterval0));
      assertEquals(1.0, yWithXInterval1.getXLow(), 0.01);
      assertEquals((-1179.68233), yWithXInterval1.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(1.0, 1.0, 1.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(1.0, 1019.6424260234667, 2448.379442);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(1019.6424260234667, yWithXInterval1.getXLow(), 0.01);
      assertEquals(2448.379442, yWithXInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, yWithXInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(2952.062831, 0.0, (-42.5728));
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(0.0, yWithXInterval1.getXLow(), 0.01);
      assertEquals((-42.5728), yWithXInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(2952.062831, yWithXInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      YWithXInterval yWithXInterval1 = new YWithXInterval(0.0, 0.0, 0.0);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval1);
      assertEquals(0.0, yWithXInterval1.getXLow(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, yWithXInterval1.getXHigh(), 0.01);
      assertEquals(0.0, yWithXInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval(0.0, 0.0, 0.0);
      boolean boolean0 = yWithXInterval0.equals(yWithXInterval0);
      assertEquals(0.0, yWithXInterval0.getXHigh(), 0.01);
      assertEquals(0.0, yWithXInterval0.getXLow(), 0.01);
      assertEquals(0.0, yWithXInterval0.getY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-1.0), 967.8019123469101, (-1.0));
      Object object0 = new Object();
      boolean boolean0 = yWithXInterval0.equals(object0);
      assertEquals((-1.0), yWithXInterval0.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals(967.8019123469101, yWithXInterval0.getXLow(), 0.01);
      assertEquals((-1.0), yWithXInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-1.0), 967.8019123469101, (-1.0));
      double double0 = yWithXInterval0.getY();
      assertEquals((-1.0), yWithXInterval0.getXHigh(), 0.01);
      assertEquals(967.8019123469101, yWithXInterval0.getXLow(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-1.0), 967.8019123469101, (-1.0));
      double double0 = yWithXInterval0.getXHigh();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(967.8019123469101, yWithXInterval0.getXLow(), 0.01);
      assertEquals((-1.0), yWithXInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      YWithXInterval yWithXInterval0 = new YWithXInterval((-1.0), 967.8019123469101, (-1.0));
      double double0 = yWithXInterval0.getXLow();
      assertEquals((-1.0), yWithXInterval0.getXHigh(), 0.01);
      assertEquals(967.8019123469101, double0, 0.01);
      assertEquals((-1.0), yWithXInterval0.getY(), 0.01);
  }
}
