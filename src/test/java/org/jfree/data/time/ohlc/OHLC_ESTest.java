/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:15:31 GMT 2019
 */

package org.jfree.data.time.ohlc;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.time.ohlc.OHLC;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OHLC_ESTest extends OHLC_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-3013.7), (-3013.7), (-3013.7), (-3013.7));
      OHLC oHLC1 = new OHLC((-3013.7), (-3013.7), (-2724.0), (-3013.7));
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertFalse(oHLC1.equals((Object)oHLC0));
      assertEquals((-3013.7), oHLC1.getHigh(), 0.01);
      assertEquals((-2724.0), oHLC1.getLow(), 0.01);
      assertFalse(boolean0);
      assertEquals((-3013.7), oHLC1.getClose(), 0.01);
      assertEquals((-3013.7), oHLC1.getOpen(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2607.5008), (-1.0), (-1.0), 0.0);
      OHLC oHLC1 = new OHLC((-2607.5008), 0.1410769149714384, 1.0, 0.0);
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertEquals(0.0, oHLC1.getClose(), 0.01);
      assertEquals(1.0, oHLC1.getLow(), 0.01);
      assertEquals(0.1410769149714384, oHLC1.getHigh(), 0.01);
      assertEquals((-2607.5008), oHLC1.getOpen(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-761.419209), 0.0, (-761.419209), (-761.419209));
      OHLC oHLC1 = new OHLC((-761.419209), 0.0, (-761.419209), 0.0);
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertEquals((-761.419209), oHLC1.getOpen(), 0.01);
      assertEquals((-761.419209), oHLC1.getLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, oHLC0.getHigh(), 0.01);
      assertFalse(oHLC1.equals((Object)oHLC0));
      assertEquals((-761.419209), oHLC0.getClose(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OHLC oHLC0 = new OHLC(243.4965053797, 849.2071, 849.2071, 243.4965053797);
      OHLC oHLC1 = new OHLC((-1.0), 1.0, 243.4965053797, (-1.0));
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertEquals((-1.0), oHLC1.getOpen(), 0.01);
      assertEquals((-1.0), oHLC1.getClose(), 0.01);
      assertFalse(boolean0);
      assertEquals(243.4965053797, oHLC1.getLow(), 0.01);
      assertEquals(1.0, oHLC1.getHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OHLC oHLC0 = new OHLC(0.0, 0.0, 0.0, 0.0);
      double double0 = oHLC0.getOpen();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, oHLC0.getHigh(), 0.01);
      assertEquals(0.0, oHLC0.getLow(), 0.01);
      assertEquals(0.0, oHLC0.getClose(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OHLC oHLC0 = new OHLC(4070.16790966, 4070.16790966, 4070.16790966, 4070.16790966);
      double double0 = oHLC0.getOpen();
      assertEquals(4070.16790966, double0, 0.01);
      assertEquals(4070.16790966, oHLC0.getLow(), 0.01);
      assertEquals(4070.16790966, oHLC0.getHigh(), 0.01);
      assertEquals(4070.16790966, oHLC0.getClose(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OHLC oHLC0 = new OHLC(3425.53113, 278.67176459, 0.0, 1.0);
      double double0 = oHLC0.getLow();
      assertEquals(3425.53113, oHLC0.getOpen(), 0.01);
      assertEquals(1.0, oHLC0.getClose(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(278.67176459, oHLC0.getHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-968.1625435), (-968.1625435), (-968.1625435), (-1177.2));
      double double0 = oHLC0.getLow();
      assertEquals((-968.1625435), oHLC0.getOpen(), 0.01);
      assertEquals((-968.1625435), oHLC0.getHigh(), 0.01);
      assertEquals((-1177.2), oHLC0.getClose(), 0.01);
      assertEquals((-968.1625435), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OHLC oHLC0 = new OHLC(0.0, 0.0, 0.0, 0.0);
      double double0 = oHLC0.getHigh();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, oHLC0.getClose(), 0.01);
      assertEquals(0.0, oHLC0.getOpen(), 0.01);
      assertEquals(0.0, oHLC0.getLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2428.5), (-2428.5), (-2428.5), (-2428.5));
      double double0 = oHLC0.getHigh();
      assertEquals((-2428.5), oHLC0.getOpen(), 0.01);
      assertEquals((-2428.5), double0, 0.01);
      assertEquals((-2428.5), oHLC0.getLow(), 0.01);
      assertEquals((-2428.5), oHLC0.getClose(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OHLC oHLC0 = new OHLC(0.0, 0.0, 0.0, 0.0);
      double double0 = oHLC0.getClose();
      assertEquals(0.0, oHLC0.getLow(), 0.01);
      assertEquals(0.0, oHLC0.getHigh(), 0.01);
      assertEquals(0.0, oHLC0.getOpen(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2428.5), (-2428.5), (-2428.5), (-2428.5));
      double double0 = oHLC0.getClose();
      assertEquals((-2428.5), oHLC0.getHigh(), 0.01);
      assertEquals((-2428.5), oHLC0.getOpen(), 0.01);
      assertEquals((-2428.5), oHLC0.getLow(), 0.01);
      assertEquals((-2428.5), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OHLC oHLC0 = new OHLC(243.4965053797, 849.2071, 849.2071, 243.4965053797);
      OHLC oHLC1 = new OHLC(243.4965053797, 849.2071, (-985.667), 243.4965053797);
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertEquals(849.2071, oHLC1.getHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(243.4965053797, oHLC1.getClose(), 0.01);
      assertEquals((-985.667), oHLC1.getLow(), 0.01);
      assertEquals(243.4965053797, oHLC1.getOpen(), 0.01);
      assertFalse(oHLC1.equals((Object)oHLC0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OHLC oHLC0 = new OHLC(0.0, 0.0, 0.0, 0.0);
      OHLC oHLC1 = new OHLC(0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertEquals(0.0, oHLC1.getLow(), 0.01);
      assertEquals(0.0, oHLC1.getHigh(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, oHLC1.getOpen(), 0.01);
      assertEquals(0.0, oHLC1.getClose(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2246.08573483274), 2731.8888972, 4303.2065, 4303.2065);
      OHLC oHLC1 = new OHLC((-2246.08573483274), 2731.8888972, 4303.2065, 0.0);
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertEquals((-2246.08573483274), oHLC1.getOpen(), 0.01);
      assertEquals(4303.2065, oHLC1.getLow(), 0.01);
      assertEquals(2731.8888972, oHLC1.getHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, oHLC1.getClose(), 0.01);
      assertFalse(oHLC1.equals((Object)oHLC0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OHLC oHLC0 = new OHLC(4070.16790966, 4070.16790966, 4070.16790966, 4070.16790966);
      OHLC oHLC1 = new OHLC(4070.16790966, 0.0, 4070.16790966, 4070.16790966);
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertFalse(boolean0);
      assertFalse(oHLC1.equals((Object)oHLC0));
      assertEquals(4070.16790966, oHLC1.getOpen(), 0.01);
      assertEquals(4070.16790966, oHLC0.getHigh(), 0.01);
      assertEquals(4070.16790966, oHLC1.getClose(), 0.01);
      assertEquals(4070.16790966, oHLC1.getLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OHLC oHLC0 = new OHLC(0.0, 0.0, 0.0, 0.0);
      Object object0 = new Object();
      boolean boolean0 = oHLC0.equals(object0);
      assertEquals(0.0, oHLC0.getHigh(), 0.01);
      assertEquals(0.0, oHLC0.getLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, oHLC0.getClose(), 0.01);
      assertEquals(0.0, oHLC0.getOpen(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OHLC oHLC0 = new OHLC(1.0, 278.67176459, 278.67176459, 278.67176459);
      boolean boolean0 = oHLC0.equals(oHLC0);
      assertTrue(boolean0);
      assertEquals(278.67176459, oHLC0.getClose(), 0.01);
      assertEquals(278.67176459, oHLC0.getHigh(), 0.01);
      assertEquals(1.0, oHLC0.getOpen(), 0.01);
      assertEquals(278.67176459, oHLC0.getLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OHLC oHLC0 = new OHLC(1.0, 278.67176459, 278.67176459, 278.67176459);
      OHLC oHLC1 = new OHLC(3425.53113, 278.67176459, 0.0, 1.0);
      boolean boolean0 = oHLC0.equals(oHLC1);
      assertEquals(278.67176459, oHLC1.getHigh(), 0.01);
      assertEquals(3425.53113, oHLC1.getOpen(), 0.01);
      assertEquals(1.0, oHLC1.getClose(), 0.01);
      assertEquals(0.0, oHLC1.getLow(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OHLC oHLC0 = new OHLC(1.0, 278.67176459, 278.67176459, 278.67176459);
      double double0 = oHLC0.getHigh();
      assertEquals(278.67176459, oHLC0.getClose(), 0.01);
      assertEquals(1.0, oHLC0.getOpen(), 0.01);
      assertEquals(278.67176459, double0, 0.01);
      assertEquals(278.67176459, oHLC0.getLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2246.08573483274), 2731.8888972, 4303.2065, 4303.2065);
      double double0 = oHLC0.getLow();
      assertEquals((-2246.08573483274), oHLC0.getOpen(), 0.01);
      assertEquals(4303.2065, double0, 0.01);
      assertEquals(2731.8888972, oHLC0.getHigh(), 0.01);
      assertEquals(4303.2065, oHLC0.getClose(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2246.08573483274), 2731.8888972, 4303.2065, 4303.2065);
      oHLC0.hashCode();
      assertEquals(2731.8888972, oHLC0.getHigh(), 0.01);
      assertEquals((-2246.08573483274), oHLC0.getOpen(), 0.01);
      assertEquals(4303.2065, oHLC0.getClose(), 0.01);
      assertEquals(4303.2065, oHLC0.getLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2246.08573483274), 2731.8888972, 4303.2065, 4303.2065);
      double double0 = oHLC0.getClose();
      assertEquals(2731.8888972, oHLC0.getHigh(), 0.01);
      assertEquals(4303.2065, double0, 0.01);
      assertEquals(4303.2065, oHLC0.getLow(), 0.01);
      assertEquals((-2246.08573483274), oHLC0.getOpen(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OHLC oHLC0 = new OHLC((-2246.08573483274), 2731.8888972, 4303.2065, 4303.2065);
      double double0 = oHLC0.getOpen();
      assertEquals((-2246.08573483274), double0, 0.01);
      assertEquals(4303.2065, oHLC0.getLow(), 0.01);
      assertEquals(2731.8888972, oHLC0.getHigh(), 0.01);
      assertEquals(4303.2065, oHLC0.getClose(), 0.01);
  }
}
