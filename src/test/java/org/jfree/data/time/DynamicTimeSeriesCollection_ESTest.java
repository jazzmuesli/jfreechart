/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:10:13 GMT 2019
 */

package org.jfree.data.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.event.MouseListener;
import java.awt.event.WindowListener;
import java.awt.geom.AffineTransform;
import java.text.ParsePosition;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.JLayer;
import javax.swing.JTextArea;
import javax.swing.plaf.LayerUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.jfree.chart.date.SerialDate;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultHeatMapDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Month;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimePeriodAnchor;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Year;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DynamicTimeSeriesCollection_ESTest extends DynamicTimeSeriesCollection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 969;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      Year year0 = new Year(969);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.setTimeBase(year0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // org.jfree.data.time.Year
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Second second0 = new Second();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(984, 14, second0);
      dynamicTimeSeriesCollection0.setTimeBase(second0);
      float[] floatArray0 = new float[3];
      floatArray0[0] = 1947.3353F;
      dynamicTimeSeriesCollection0.validateObject();
      floatArray0[1] = (float) 1;
      floatArray0[2] = (float) 984;
      second0.getSerialIndex();
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.appendData(floatArray0, 59, 984);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 59
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection$ValueSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 2;
      dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
      dynamicTimeSeriesCollection0.offsetFromOldest(0);
      dynamicTimeSeriesCollection0.wrapOffset((-5172));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1110, 1110);
      boolean boolean0 = false;
      float[] floatArray0 = new float[2];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (float) 2;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addSeries(floatArray0, 3163, 2.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // TimeSeriesDataset.addSeries(): cannot add more series than specified in c'tor
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 2730;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2730, 2730);
      dynamicTimeSeriesCollection0.historyCount = (-1675);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 1;
      dynamicTimeSeriesCollection0.invalidateRangeInfo();
      floatArray0[3] = (float) 1;
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(dynamicTimeSeriesCollection0, false);
      intervalXYDelegate0.setFixedIntervalWidth(2730);
      dynamicTimeSeriesCollection0.hasListener(intervalXYDelegate0);
      floatArray0[4] = (float) 0;
      dynamicTimeSeriesCollection0.setNotify(true);
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 0;
      int int1 = 0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.appendData(floatArray0, 0, 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection$ValueSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 2;
      dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
      dynamicTimeSeriesCollection0.findMaxValue();
      dynamicTimeSeriesCollection0.getPosition();
      dynamicTimeSeriesCollection0.translateGet(699);
      dynamicTimeSeriesCollection0.getItemCount(0);
      dynamicTimeSeriesCollection0.offsetFromOldest((-971));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      float[] floatArray0 = new float[6];
      int int0 = 1879;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1879, 808);
      dynamicTimeSeriesCollection0.wrapOffset((-656));
      floatArray0[4] = (float) 0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getY(152, 152);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float[] floatArray0 = new float[6];
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1879, 808);
      dynamicTimeSeriesCollection0.wrapOffset(808);
      floatArray0[4] = (float) 0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.findDomainLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2154, 305);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster0);
      DefaultCaret defaultCaret1 = (DefaultCaret)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) defaultCaret0);
      dynamicTimeSeriesCollection0.hasListener(defaultCaret1);
      JTextArea jTextArea0 = new JTextArea("", 42, 3);
      defaultCaret0.install(jTextArea0);
      dynamicTimeSeriesCollection0.getPosition();
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 0;
      dynamicTimeSeriesCollection0.appendData(floatArray0);
      dynamicTimeSeriesCollection0.indexOf(0);
      dynamicTimeSeriesCollection0.getStartY(0, 37);
      dynamicTimeSeriesCollection0.getNewestIndex();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 969;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      DynamicTimeSeriesCollection.ValueSequence[] dynamicTimeSeriesCollection_ValueSequenceArray0 = new DynamicTimeSeriesCollection.ValueSequence[6];
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence(2);
      dynamicTimeSeriesCollection_ValueSequenceArray0[0] = dynamicTimeSeriesCollection_ValueSequence0;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence1 = dynamicTimeSeriesCollection0.new ValueSequence();
      dynamicTimeSeriesCollection_ValueSequenceArray0[1] = dynamicTimeSeriesCollection_ValueSequence1;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence2 = dynamicTimeSeriesCollection0.new ValueSequence(2);
      dynamicTimeSeriesCollection_ValueSequenceArray0[2] = dynamicTimeSeriesCollection_ValueSequence2;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence3 = dynamicTimeSeriesCollection0.new ValueSequence();
      dynamicTimeSeriesCollection_ValueSequenceArray0[3] = dynamicTimeSeriesCollection_ValueSequence3;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence4 = dynamicTimeSeriesCollection0.new ValueSequence();
      dynamicTimeSeriesCollection_ValueSequenceArray0[4] = dynamicTimeSeriesCollection_ValueSequence4;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence5 = dynamicTimeSeriesCollection0.new ValueSequence();
      dynamicTimeSeriesCollection_ValueSequenceArray0[5] = dynamicTimeSeriesCollection_ValueSequence5;
      dynamicTimeSeriesCollection0.valueHistory = dynamicTimeSeriesCollection_ValueSequenceArray0;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 969;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection$ValueSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2154, 305);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      DefaultCaret defaultCaret1 = (DefaultCaret)AWTEventMulticaster.remove(mouseListener0, (MouseListener) defaultCaret0);
      defaultCaret1.getPathIterator((AffineTransform) null);
      dynamicTimeSeriesCollection0.hasListener(defaultCaret1);
      dynamicTimeSeriesCollection0.getPosition();
      dynamicTimeSeriesCollection0.offsetFromNewest(0);
      dynamicTimeSeriesCollection0.indexOf(0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getStartX(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      RegularTimePeriod[] regularTimePeriodArray0 = new RegularTimePeriod[6];
      Year year0 = new Year();
      regularTimePeriodArray0[0] = (RegularTimePeriod) year0;
      dynamicTimeSeriesCollection0.appendData(floatArray0, 677, 677);
      Second second0 = null;
      try {
        second0 = new Second(677, (-295), 1, 2, (-9999), 688);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'year' argument must be in range 1900 to 9999.
         //
         verifyException("org.jfree.chart.date.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, timeZone0);
      dynamicTimeSeriesCollection0.getItemCount(0);
      int int1 = 152;
      MockDate mockDate0 = new MockDate(0, 0, 152);
      MockCalendar.getInstance();
      int int2 = 1559;
      dynamicTimeSeriesCollection0.wrapOffset(1559);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getY(1559, (-938));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1559
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 984;
      Second second0 = new Second();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(984, 984, second0);
      float[] floatArray0 = new float[3];
      floatArray0[0] = 1947.3353F;
      dynamicTimeSeriesCollection0.validateObject();
      floatArray0[1] = (float) 1;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getX(5594, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3768, 3768, millisecond0, timeZone0);
      dynamicTimeSeriesCollection0.addValue(1794, 1784, 1794);
      dynamicTimeSeriesCollection0.offsetFromOldest(114);
      millisecond0.getMiddleMillisecond();
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence(0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 1;
      floatArray0[2] = (float) 114;
      floatArray0[3] = (float) 1784;
      dynamicTimeSeriesCollection_ValueSequence0.dataPoints = floatArray0;
      dynamicTimeSeriesCollection_ValueSequence0.getData(1);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getDomainBounds(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3213, 2145);
      dynamicTimeSeriesCollection0.offsetFromNewest((-1502));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 2;
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(dynamicTimeSeriesCollection0);
      dynamicTimeSeriesCollection0.addChangeListener(intervalXYDelegate0);
      floatArray0[6] = (float) 2;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 2;
      dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
      dynamicTimeSeriesCollection0.offsetFromNewest(0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2923L);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, fixedMillisecond0);
      dynamicTimeSeriesCollection0.translateGet(0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addValue((-642), 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -642
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 2723;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2723, 2723);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 1;
      dynamicTimeSeriesCollection0.invalidateRangeInfo();
      floatArray0[3] = (float) 1;
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(dynamicTimeSeriesCollection0, false);
      // Undeclared exception!
      try { 
        intervalXYDelegate0.getEndX(1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      dynamicTimeSeriesCollection0.appendData(floatArray0);
      dynamicTimeSeriesCollection0.validateObject();
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 2;
      dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 0;
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, timeZone0);
      dynamicTimeSeriesCollection0.getItemCount(0);
      int int1 = 0;
      int int2 = 152;
      MockDate mockDate0 = new MockDate(0, 0, 152);
      dynamicTimeSeriesCollection0.getRangeBounds(true);
      MockCalendar.getInstance();
      float[] floatArray0 = new float[1];
      floatArray0[0] = (-484.08F);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.appendData(floatArray0, 152, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // More data than series to put them in
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 2;
      int int1 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 0);
      dynamicTimeSeriesCollection0.getRangeBounds(true);
      dynamicTimeSeriesCollection0.translateGet(26);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getEndXValue(969, 24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 2;
      int int1 = 30;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 30);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getEndXValue(969, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(243, 243);
      int int0 = DynamicTimeSeriesCollection.START;
      dynamicTimeSeriesCollection0.getNewestIndex();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      float[] floatArray0 = new float[6];
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1879, 808);
      dynamicTimeSeriesCollection0.wrapOffset((-656));
      floatArray0[4] = (float) 0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.findDomainLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      dynamicTimeSeriesCollection0.validateObject();
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 2;
      dynamicTimeSeriesCollection0.fireSeriesChanged();
      floatArray0[6] = (float) 2;
      dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Year year0 = new Year((-1957));
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(9999, (-1957), (TimeZone) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3776, 3776, millisecond0, timeZone0);
      dynamicTimeSeriesCollection0.offsetFromOldest(114);
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence(0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 114;
      floatArray0[1] = (float) 114;
      floatArray0[2] = (float) 114;
      floatArray0[3] = (float) 114;
      floatArray0[4] = (float) 114;
      floatArray0[5] = (float) 1;
      floatArray0[6] = (float) 0;
      floatArray0[7] = (float) 114;
      floatArray0[8] = (float) 0;
      dynamicTimeSeriesCollection_ValueSequence0.dataPoints = floatArray0;
      dynamicTimeSeriesCollection_ValueSequence0.getData(1);
      dynamicTimeSeriesCollection0.getRangeLowerBound(true);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      float[] floatArray0 = new float[0];
      dynamicTimeSeriesCollection0.appendData(floatArray0);
      dynamicTimeSeriesCollection0.appendData(floatArray0, (-159), 718);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, timeZone0);
      timeZone0.toZoneId();
      RegularTimePeriod[] regularTimePeriodArray0 = null;
      int int0 = 212;
      int int1 = 29;
      int int2 = (-666);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getDomainBounds(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("XWl_i");
      TimeZone.setDefault(timeZone0);
      timeZone0.setRawOffset(1436);
      timeZone0.setID("XWl_i");
      TimeZone.getDefault();
      float[] floatArray0 = new float[0];
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1038, 1436, timeZone0);
      dynamicTimeSeriesCollection0.getOldestTime();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 956;
      Second second0 = new Second();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 956, second0);
      int int1 = (-159);
      dynamicTimeSeriesCollection0.historyCount = 963;
      Second.parseSecond("");
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.findDomainLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addValue(1, 2016, 268.1F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // TimeSeriesDataset.addValue(): series #1unspecified in c'tor
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      Hour hour0 = new Hour();
      Hour.parseHour("");
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.setSeriesKey(1634, hour0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1634
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, timeZone0);
      float[] floatArray0 = new float[3];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (float) 2;
      floatArray0[2] = (float) 2;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // TimeSeriesDataset.addSeries(): cannot add more series than specified in c'tor
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.US;
      locale0.hasExtensions();
      timeZone0.getDisplayName(locale0);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1440, 1440, timeZone0);
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      defaultEditorKit_InsertTabAction0.getPropertyChangeListeners();
      dynamicTimeSeriesCollection0.hasListener(defaultEditorKit_InsertTabAction0);
      timeZone0.toZoneId();
      dynamicTimeSeriesCollection0.getRangeBounds(true);
      dynamicTimeSeriesCollection0.getRangeBounds(true);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getStartX((-1), 1440);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1440
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Day day0 = new Day();
      Hour hour0 = new Hour(Integer.MAX_VALUE, day0);
      RegularTimePeriod regularTimePeriod0 = hour0.previous();
      regularTimePeriod0.getStart();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1224, 0, regularTimePeriod0);
      dynamicTimeSeriesCollection0.getSeriesKey(0);
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence();
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 1224;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 1;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) Integer.MAX_VALUE;
      floatArray0[5] = (float) 23;
      floatArray0[6] = (float) 0;
      dynamicTimeSeriesCollection_ValueSequence0.dataPoints = floatArray0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection_ValueSequence0.getData(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection$ValueSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 5508;
      int int1 = 2038;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(5508, 2038);
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence();
      int int2 = 2;
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 2;
      floatArray0[1] = (float) 5508;
      floatArray0[2] = (float) 5508;
      floatArray0[3] = (float) 5508;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 0;
      floatArray0[6] = (float) 2038;
      floatArray0[7] = 0.0F;
      dynamicTimeSeriesCollection_ValueSequence0.dataPoints = floatArray0;
      dynamicTimeSeriesCollection0.workingCalendar = null;
      dynamicTimeSeriesCollection_ValueSequence0.enterData(2, 0.0F);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.advanceTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1520, 0, timeZone0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getOldestTime();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getEndY(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = (-2497);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2497), "X");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, simpleTimeZone0);
      dynamicTimeSeriesCollection0.setPosition((-2497));
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.advanceTime();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2730, 2730);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 1;
      dynamicTimeSeriesCollection0.invalidateRangeInfo();
      floatArray0[3] = (float) 1;
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(dynamicTimeSeriesCollection0, false);
      intervalXYDelegate0.setFixedIntervalWidth(2730);
      dynamicTimeSeriesCollection0.hasListener(intervalXYDelegate0);
      floatArray0[4] = (float) 0;
      dynamicTimeSeriesCollection0.setNotify(true);
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 0;
      int int0 = 0;
      // Undeclared exception!
      dynamicTimeSeriesCollection0.appendData(floatArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2095, 2000);
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 2000;
      float[] floatArray1 = new float[3];
      floatArray1[0] = (-2512.084F);
      floatArray1[1] = (float) 1;
      floatArray1[2] = (float) 2095;
      dynamicTimeSeriesCollection0.addSeries(floatArray1, 30, 2095.0F);
      floatArray0[1] = 207.0F;
      floatArray0[2] = (float) 0;
      floatArray0[3] = (float) 0;
      int int0 = 1416;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getY(2095, (-2594));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2095
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3902, 3902);
      dynamicTimeSeriesCollection0.getNewestTime();
      RegularTimePeriod[] regularTimePeriodArray0 = new RegularTimePeriod[9];
      regularTimePeriodArray0[0] = null;
      regularTimePeriodArray0[1] = null;
      regularTimePeriodArray0[2] = null;
      Millisecond millisecond0 = new Millisecond();
      regularTimePeriodArray0[3] = (RegularTimePeriod) millisecond0;
      Class<Millisecond> class0 = Millisecond.class;
      SerialDate serialDate0 = SerialDate.createInstance(2);
      SerialDate serialDate1 = SerialDate.addYears(0, serialDate0);
      Date date0 = serialDate1.toDate();
      TimeZone timeZone0 = TimeZone.getTimeZone(",pi4[Eu[+?|*=");
      Locale locale0 = Locale.PRC;
      locale0.getDisplayName();
      RegularTimePeriod.createInstance(class0, date0, timeZone0, locale0);
      regularTimePeriodArray0[4] = null;
      regularTimePeriodArray0[5] = null;
      regularTimePeriodArray0[6] = null;
      regularTimePeriodArray0[7] = null;
      regularTimePeriodArray0[8] = null;
      dynamicTimeSeriesCollection0.pointsInTime = regularTimePeriodArray0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getY((-2927), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2927
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(46, 0);
      dynamicTimeSeriesCollection0.getRangeUpperBound(false);
      dynamicTimeSeriesCollection0.getNewestIndex();
      int int0 = 335;
      // Undeclared exception!
      try { 
        SerialDate.createInstance((-4112));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SpreadsheetDate: Serial must be in range 2 to 2958465.
         //
         verifyException("org.jfree.chart.date.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1, 0, simpleTimeZone0);
      dynamicTimeSeriesCollection0.getOldestIndex();
      dynamicTimeSeriesCollection0.getRangeBounds(false);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 1002;
      int int1 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1002, 0, (RegularTimePeriod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Month month0 = new Month();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 1, month0);
      dynamicTimeSeriesCollection0.getOldestIndex();
      dynamicTimeSeriesCollection0.getItemCount(0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      fixedMillisecond0.toString();
      TimeZone timeZone0 = TimeZone.getDefault();
      TimePeriodAnchor timePeriodAnchor0 = TimePeriodAnchor.MIDDLE;
      timeZone0.clone();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.after("Fri Feb 14 20:21:21 GMT 2014");
      mockGregorianCalendar0.isWeekDateSupported();
      fixedMillisecond0.getMillisecond(timePeriodAnchor0, mockGregorianCalendar0);
      fixedMillisecond0.previous();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(453, (-153), fixedMillisecond0, timeZone0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getOldestTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = (-198);
      int int1 = 0;
      Minute minute0 = new Minute();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "G(R<+$I'f3");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection((-198), 0, minute0, simpleTimeZone0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 0, (-246), (-4177));
      Month month0 = new Month(mockDate0);
      month0.getStart();
      month0.previous();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, month0);
      dynamicTimeSeriesCollection0.validateObject();
      dynamicTimeSeriesCollection0.getRangeLowerBound(true);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getNewestTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = "";
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(400, 400, timeZone0);
      int int0 = (-810);
      int int1 = 2000;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.advanceTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      int int1 = (-52);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.advanceTime();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 0;
      Instant instant0 = MockInstant.ofEpochMilli(0);
      Date date0 = Date.from(instant0);
      Minute minute0 = new Minute(date0);
      TimeZone timeZone0 = TimeZone.getTimeZone("org.jfree.data.time.DynamicTimeSeriesCollection$ValueSequence");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-3269), minute0, timeZone0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      float[] floatArray0 = new float[6];
      DynamicTimeSeriesCollection.ValueSequence[] dynamicTimeSeriesCollection_ValueSequenceArray0 = new DynamicTimeSeriesCollection.ValueSequence[8];
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence();
      dynamicTimeSeriesCollection_ValueSequenceArray0[0] = dynamicTimeSeriesCollection_ValueSequence0;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence1 = dynamicTimeSeriesCollection0.new ValueSequence(0);
      dynamicTimeSeriesCollection_ValueSequenceArray0[1] = dynamicTimeSeriesCollection_ValueSequence1;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence2 = dynamicTimeSeriesCollection0.new ValueSequence(2);
      dynamicTimeSeriesCollection_ValueSequenceArray0[2] = dynamicTimeSeriesCollection_ValueSequence2;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence3 = dynamicTimeSeriesCollection0.new ValueSequence(0);
      dynamicTimeSeriesCollection_ValueSequenceArray0[3] = dynamicTimeSeriesCollection_ValueSequence3;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence4 = dynamicTimeSeriesCollection0.new ValueSequence(0);
      dynamicTimeSeriesCollection_ValueSequenceArray0[4] = dynamicTimeSeriesCollection_ValueSequence4;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence5 = dynamicTimeSeriesCollection0.new ValueSequence(2000);
      dynamicTimeSeriesCollection_ValueSequenceArray0[5] = dynamicTimeSeriesCollection_ValueSequence5;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence6 = dynamicTimeSeriesCollection0.new ValueSequence(707);
      dynamicTimeSeriesCollection_ValueSequenceArray0[6] = dynamicTimeSeriesCollection_ValueSequence6;
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence7 = dynamicTimeSeriesCollection0.new ValueSequence();
      dynamicTimeSeriesCollection_ValueSequenceArray0[7] = dynamicTimeSeriesCollection_ValueSequence7;
      dynamicTimeSeriesCollection0.valueHistory = dynamicTimeSeriesCollection_ValueSequenceArray0;
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 0;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 1;
      floatArray0[5] = (float) 0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.appendData(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(93, "<", 93, 0, (-800), 0, 2626, 0, 93, 1);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, simpleTimeZone0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = 4401.5F;
      floatArray0[3] = (float) 0;
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) 0;
      floatArray0[6] = (float) 2;
      floatArray0[7] = (float) 2626;
      floatArray0[8] = (float) 0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.appendData(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // More data than series to put them in
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(775, 775, regularTimePeriod0);
      dynamicTimeSeriesCollection0.invalidateRangeInfo();
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.findDomainLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = 4031;
      int int1 = 2282;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(4031, 2282);
      int int2 = 0;
      int int3 = (-1201);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getX(0, (-1201));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1201
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = 2805;
      TimeZone timeZone0 = TimeZone.getTimeZone("DefaultIntervalCategoryDataset: the number of categories in the start value dataset does not match the number of categories in the end value dataset.");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2805, 29, timeZone0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 29;
      floatArray0[2] = (float) 29;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 1;
      floatArray0[6] = (float) 2805;
      floatArray0[7] = 0.0F;
      timeZone0.clone();
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.appendData(floatArray0, (-1), 29);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      float[] floatArray0 = new float[0];
      dynamicTimeSeriesCollection0.appendData(floatArray0, (-159), 718);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = 0;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 87, timeZone0);
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence();
      int int1 = 0;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getY(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      int int1 = 0;
      Second second0 = new Second();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(90, 59, 2);
      second0.getFirstMillisecond((Calendar) mockGregorianCalendar0);
      RegularTimePeriod regularTimePeriod0 = second0.next();
      regularTimePeriod0.getStart();
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.setTimeBase(regularTimePeriod0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3776, 3776, millisecond0, timeZone0);
      dynamicTimeSeriesCollection0.offsetFromOldest(114);
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence(0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection_ValueSequence0.getData(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection$ValueSequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = 1041;
      int int1 = 92;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1041, 92, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.GregorianCalendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.findDomainLimits();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = 812;
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(812, 812, timeZone0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getDomainUpperBound(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3183, 3129);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getDomainUpperBound(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 2, simpleTimeZone0);
      dynamicTimeSeriesCollection0.findMaxValue();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      int int0 = 0;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0);
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      fixedMillisecond0.getTime();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, regularTimePeriod0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(2, (-1929), 2360, 3284, 0, 3284);
      regularTimePeriod0.getMiddleMillisecond((Calendar) mockGregorianCalendar0);
      JLayer<DefaultTreeCellRenderer> jLayer0 = new JLayer<DefaultTreeCellRenderer>(defaultTreeCellRenderer0, (LayerUI<DefaultTreeCellRenderer>) null);
      dynamicTimeSeriesCollection0.hasListener(jLayer0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getStartY(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(366, 0);
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence();
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection_ValueSequence0.enterData(0, 366);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 2;
      int int1 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getEndXValue(969, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      ParsePosition parsePosition0 = new ParsePosition((-500));
      Date date0 = mockSimpleDateFormat0.parse("", parsePosition0);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.JAPANESE;
      Hour hour0 = new Hour(date0, timeZone0, locale0);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(91, 0, hour0, timeZone0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getDomainLowerBound(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = 1930;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(841, 1930);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getXValue(0, 1930);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1930
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      int int0 = 2;
      int int1 = 1;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 1);
      int int2 = (-1145);
      int int3 = (-1566);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.findDomainLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Year year0 = new Year((-1984));
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(244, (-1984), year0, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.GregorianCalendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Minute minute0 = new Minute();
      Day day0 = minute0.getDay();
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-345), day0, timeZone0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) (-345);
      floatArray0[1] = (float) 2;
      floatArray0[2] = (float) 2;
      float float0 = 0.0F;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.findDomainLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      int int0 = 266;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(266, 266);
      int int1 = (-2484);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addValue(266, (-2484), 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // TimeSeriesDataset.addValue(): series #266unspecified in c'tor
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = 0;
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, timeZone0);
      boolean boolean0 = false;
      Locale locale0 = Locale.JAPAN;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) arrayList0);
      Locale.setDefault(locale0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getStartX(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      int int0 = 182;
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getYValue(182, 182);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 182
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("XWl_i");
      timeZone0.setRawOffset(1436);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, timeZone0);
      TimeZone.getDefault();
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.addValue(0, 0, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // TimeSeriesDataset.addValue(): series #0unspecified in c'tor
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 1, 1);
      mockDate0.toInstant();
      Year year0 = new Year(mockDate0);
      year0.getEnd();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(386, 386, year0);
      dynamicTimeSeriesCollection0.setPosition((-9999));
      int int0 = (-176);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getSeriesKey((-176));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -176
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      int int2 = (-814);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getStartXValue(0, (-814));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -814
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      int int0 = (-1);
      String string0 = "";
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1), "");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection((-1), (-1), simpleTimeZone0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      int int0 = (-1601);
      int int1 = (-2211);
      Minute.parseMinute("FQp^*rTw57r[y3");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection((-1601), (-2211), (RegularTimePeriod) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection((-754), (-754));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2154, 305);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      MouseListener mouseListener1 = AWTEventMulticaster.remove(mouseListener0, (MouseListener) defaultCaret0);
      dynamicTimeSeriesCollection0.hasListener(mouseListener1);
      dynamicTimeSeriesCollection0.getPosition();
      dynamicTimeSeriesCollection0.indexOf(0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getStartY(0, 37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getY(0, (-459));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(30, 184);
      dynamicTimeSeriesCollection0.getPosition();
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(4, 1);
      dynamicTimeSeriesCollection0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      int int0 = 2;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2, 30);
      dynamicTimeSeriesCollection0.getRangeLowerBound(false);
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset((-4965), 2000, 2, 2, 1, (-4965));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'xSamples' > 0
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      int int0 = 0;
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0, timeZone0);
      dynamicTimeSeriesCollection0.getItemCount(0);
      int int1 = 0;
      int int2 = 152;
      MockDate mockDate0 = new MockDate(0, 0, 152);
      Minute minute0 = null;
      try {
        minute0 = new Minute(mockDate0, timeZone0, (Locale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'locale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      int int0 = (-1601);
      int int1 = (-2193);
      Minute.parseMinute("FQp^*rTw57r[y3");
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = null;
      try {
        dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-2193));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(969, 969);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 2;
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 2;
      dynamicTimeSeriesCollection0.addSeries(floatArray0, 0, 2.0F);
      dynamicTimeSeriesCollection0.findMaxValue();
      dynamicTimeSeriesCollection0.getPosition();
      dynamicTimeSeriesCollection0.translateGet(699);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getEndY(699, 3765);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      int int0 = 2730;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2730, 2730);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 1;
      dynamicTimeSeriesCollection0.invalidateRangeInfo();
      floatArray0[3] = (float) 1;
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(dynamicTimeSeriesCollection0, false);
      intervalXYDelegate0.setFixedIntervalWidth(2730);
      dynamicTimeSeriesCollection0.hasListener(intervalXYDelegate0);
      floatArray0[4] = (float) 0;
      dynamicTimeSeriesCollection0.setNotify(true);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection0.getEndYValue(2460, 2730);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TimeZone timeZone0 = TimeZone.getDefault();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(3768, 3768, millisecond0, timeZone0);
      dynamicTimeSeriesCollection0.addValue(1794, 1784, 1794);
      dynamicTimeSeriesCollection0.offsetFromOldest(114);
      millisecond0.getMiddleMillisecond();
      DynamicTimeSeriesCollection.ValueSequence dynamicTimeSeriesCollection_ValueSequence0 = dynamicTimeSeriesCollection0.new ValueSequence(0);
      // Undeclared exception!
      try { 
        dynamicTimeSeriesCollection_ValueSequence0.getData(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection$ValueSequence", e);
      }
  }
}
