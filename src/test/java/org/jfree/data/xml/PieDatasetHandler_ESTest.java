/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:25:15 GMT 2019
 */

package org.jfree.data.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.xml.PieDatasetHandler;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieDatasetHandler_ESTest extends PieDatasetHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      pieDatasetHandler0.startElement(":$OD?", ":$OD?", "Item", (Attributes) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      pieDatasetHandler0.startElement("Z", "PieDataset", "PieDataset", attributes2Impl0);
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Float float0 = new Float((-877.526));
      pieDatasetHandler0.addItem(comparable0, float0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      pieDatasetHandler0.startElement("", "g2&.J/m|{F5$@)^", "PieDataset", attributes2Impl0);
      DefaultPieDataset defaultPieDataset0 = (DefaultPieDataset)pieDatasetHandler0.getDataset();
      assertTrue(defaultPieDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      // Undeclared exception!
      try { 
        pieDatasetHandler0.startElement("", "", (String) null, attributes2Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      pieDatasetHandler0.startElement("", "Item", "Item", (Attributes) null);
      try { 
        pieDatasetHandler0.endElement((String) null, "", "");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Expecting </Key> but found 
         //
         verifyException("org.jfree.data.xml.KeyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      pieDatasetHandler0.startElement("", "Item", "Item", attributesImpl0);
      // Undeclared exception!
      try { 
        pieDatasetHandler0.endElement("& 0y.]l^S", "PieDataset", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xml.KeyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      pieDatasetHandler0.endElement((String) null, "-F'#Z-lU/r}AFrf]", "PieDataset");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      pieDatasetHandler0.startElement("", "g2&.J/m|{F5$@)^", "PieDataset", attributes2Impl0);
      Short short0 = new Short((short) (-2393));
      // Undeclared exception!
      try { 
        pieDatasetHandler0.addItem((Comparable) null, short0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      pieDatasetHandler0.startElement("", "Item", "Item", attributesImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      try { 
        pieDatasetHandler0.startElement("org.jfree.data.xml.ItemHandler", (String) null, "& 0y.]l^S", attributes2Impl0);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Expecting <Key> but found & 0y.]l^S
         //
         verifyException("org.jfree.data.xml.KeyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      pieDatasetHandler0.startElement("6WsrzT?", "", "41JIm", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      Short short0 = new Short((short) (-2393));
      // Undeclared exception!
      try { 
        pieDatasetHandler0.addItem((Comparable) null, short0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xml.PieDatasetHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      PieDataset pieDataset0 = pieDatasetHandler0.getDataset();
      assertNull(pieDataset0);
  }
}
