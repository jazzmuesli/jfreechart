/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:24:33 GMT 2019
 */

package org.jfree.data.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EmptyStackException;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xml.RootHandler;
import org.junit.runner.RunWith;
import org.xml.sax.helpers.DefaultHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class RootHandler_ESTest extends RootHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      rootHandler0.pushSubHandler((DefaultHandler) null);
      DefaultHandler defaultHandler0 = rootHandler0.popSubHandler();
      assertNull(defaultHandler0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      rootHandler0.pushSubHandler(rootHandler0);
      DefaultHandler defaultHandler0 = rootHandler0.popSubHandler();
      assertSame(rootHandler0, defaultHandler0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      rootHandler0.pushSubHandler((DefaultHandler) null);
      Stack stack0 = rootHandler0.getSubHandlers();
      assertEquals("[null]", stack0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      DefaultHandler defaultHandler0 = rootHandler0.getCurrentHandler();
      assertSame(rootHandler0, defaultHandler0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      rootHandler0.pushSubHandler((DefaultHandler) null);
      DefaultHandler defaultHandler0 = rootHandler0.getCurrentHandler();
      assertSame(rootHandler0, defaultHandler0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      RootHandler rootHandler1 = new RootHandler();
      rootHandler0.pushSubHandler(rootHandler1);
      char[] charArray0 = new char[1];
      rootHandler0.characters(charArray0, (-1), 0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      char[] charArray0 = new char[1];
      rootHandler0.characters(charArray0, 0, 0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      Stack stack0 = rootHandler0.getSubHandlers();
      assertTrue(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      // Undeclared exception!
      try { 
        rootHandler0.popSubHandler();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      rootHandler0.pushSubHandler(rootHandler0);
      DefaultHandler defaultHandler0 = rootHandler0.getCurrentHandler();
      assertSame(defaultHandler0, rootHandler0);
  }
}
