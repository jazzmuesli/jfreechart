/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:04:08 GMT 2019
 */

package org.jfree.data.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EventListener;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.data.DefaultKeyedValues2D;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DefaultCategoryDataset_ESTest extends DefaultCategoryDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      double double0 = 0.8;
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("#Jk@-2&qj-342z;=m", "gc{'", "r\u0000EkhZXQpc6s", "", "").when(comparable0).toString();
      defaultCategoryDataset0.setValue(0.8, comparable0, comparable0);
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      defaultCategoryDataset0.getRowKeys();
      Comparable<String> comparable1 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeValue(comparable1, comparable1);
      DefaultCategoryDataset defaultCategoryDataset2 = (DefaultCategoryDataset)defaultCategoryDataset0.clone();
      defaultCategoryDataset2.getValue(0, 0);
      defaultCategoryDataset0.equals(defaultCategoryDataset2);
      int int0 = (-2153);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnKey((-2153));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue(1994.0, (Comparable) "8AN.KkT|;o:m", (Comparable) "8AN.KkT|;o:m");
      defaultCategoryDataset0.equals("8AN.KkT|;o:m");
      defaultCategoryDataset0.equals("8AN.KkT|;o:m");
      defaultCategoryDataset0.addValue(0.0, (Comparable) "8AN.KkT|;o:m", (Comparable) "8AN.KkT|;o:m");
      defaultCategoryDataset0.removeChangeListener((DatasetChangeListener) null);
      defaultCategoryDataset0.getRowIndex(comparable0);
      defaultCategoryDataset0.removeRow((Comparable) "8AN.KkT|;o:m");
      defaultCategoryDataset0.getColumnKeys();
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("").when(comparable1).toString();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.incrementValue((-1), comparable1, comparable1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised columnKey: 
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Object object0 = defaultCategoryDataset0.clone();
      object0.equals(object0);
      Comparable<DefaultCategoryDataset> comparable0 = null;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnIndex((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowKeys();
      defaultCategoryDataset0.addValue(1994.0, (Comparable) "8AN.KkT|;o:m", (Comparable) "8AN.KkT|;o:m");
      defaultCategoryDataset0.equals("8AN.KkT|;o:m");
      defaultCategoryDataset0.equals(comparable0);
      defaultCategoryDataset0.equals("8AN.KkT|;o:m");
      defaultCategoryDataset0.addValue(0.0, (Comparable) "8AN.KkT|;o:m", (Comparable) "8AN.KkT|;o:m");
      defaultCategoryDataset0.getColumnKey(0);
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<SlidingCategoryDataset> comparable0 = null;
      defaultCategoryDataset0.getRowCount();
      defaultCategoryDataset0.hashCode();
      Comparable<SlidingCategoryDataset> comparable1 = (Comparable<SlidingCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue((Number) 871, (Comparable) comparable1, (Comparable) comparable1);
      int int0 = 0;
      defaultCategoryDataset0.getValue(0, 0);
      defaultCategoryDataset0.clone();
      Comparable<DefaultCategoryDataset> comparable2 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable2).toString();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow(comparable2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown key: null
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.clone();
      Number number0 = null;
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      defaultCategoryDataset0.setValue((Number) null, comparable0, comparable0);
      Comparable<DefaultCategoryDataset> comparable1 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable1).toString();
      defaultCategoryDataset1.addValue((Number) null, comparable1, comparable1);
      defaultCategoryDataset0.equals(defaultCategoryDataset1);
      Comparable<Object> comparable2 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.setValue((Number) null, comparable2, comparable2);
      defaultCategoryDataset0.removeRow(0);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getValue(10, (-1681));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getRowKey((-840));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getRowKey(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getValue(0, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.clone();
      defaultCategoryDataset0.getColumnCount();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getValue(comparable0, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'columnKey' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.clear();
      Comparable<DefaultCategoryDataset> comparable0 = null;
      String string0 = "or!f<*=R|N\"SHrRn0'Q";
      defaultCategoryDataset0.equals("or!f<*=R|N\"SHrRn0'Q");
      double double0 = (-345.461722592);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.incrementValue((-345.461722592), (Comparable) null, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rowKey' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      double double0 = 0.0;
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable1).toString();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.incrementValue(0.0, comparable0, comparable1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised columnKey: Mock for Comparable, hashCode: 1304372041
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<DefaultKeyedValues2D> comparable0 = (Comparable<DefaultKeyedValues2D>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<String> comparable1 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue(2516.570390660562, comparable1, comparable1);
      defaultCategoryDataset0.getColumnIndex(comparable0);
      defaultCategoryDataset0.getRowCount();
      defaultCategoryDataset0.removeRow(0);
      defaultCategoryDataset0.equals((Object) null);
      defaultCategoryDataset0.getRowCount();
      defaultCategoryDataset0.removeColumn(0);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnKey((-394));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DatasetGroup datasetGroup0 = defaultCategoryDataset0.getGroup();
      defaultCategoryDataset0.setGroup(datasetGroup0);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow(555);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 555, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getValue(1893, 1893);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1893, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<SlidingCategoryDataset> comparable0 = null;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnIndex((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.clear();
      double double0 = 0.8;
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      defaultCategoryDataset0.equals(defaultCategoryDataset1);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getValue((-455), (-455));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Number number0 = null;
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue((Number) null, comparable0, comparable0);
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      DatasetGroup datasetGroup0 = defaultCategoryDataset1.getGroup();
      defaultCategoryDataset0.setGroup(datasetGroup0);
      defaultCategoryDataset0.getColumnCount();
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.setValue((double) 1, (Comparable) comparable1, (Comparable) comparable1);
      Comparable<DefaultCategoryDataset> comparable2 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeValue(1, comparable2);
      defaultCategoryDataset0.hashCode();
      Comparable<SlidingCategoryDataset> comparable3 = (Comparable<SlidingCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getColumnCount();
      defaultCategoryDataset0.getRowIndex(2);
      defaultCategoryDataset0.addValue((Number) (-125144880), (Comparable) comparable3, (Comparable) comparable3);
      Comparable<DefaultCategoryDataset> comparable4 = null;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeValue((Comparable) null, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      defaultCategoryDataset0.setValue(3410.49988, comparable0, comparable0);
      Comparable<DefaultIntervalCategoryDataset> comparable1 = (Comparable<DefaultIntervalCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowIndex(comparable1);
      DatasetChangeListener datasetChangeListener0 = null;
      defaultCategoryDataset0.removeChangeListener((DatasetChangeListener) null);
      defaultCategoryDataset0.getRowKeys();
      Comparable<String> comparable2 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getColumnIndex(comparable2);
      Comparable<String> comparable3 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue((Number) (-1), (Comparable) comparable3, (Comparable) comparable3);
      Comparable<Integer> comparable4 = null;
      Comparable<Object> comparable5 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.setValue(0.0, (Comparable) null, comparable5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DatasetChangeListener datasetChangeListener0 = mock(DatasetChangeListener.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeChangeListener(datasetChangeListener0);
      Comparable<DefaultIntervalCategoryDataset> comparable0 = (Comparable<DefaultIntervalCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowIndex(comparable0);
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable1).toString();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.incrementValue(1895.9, comparable1, comparable1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised columnKey: null
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<DefaultCategoryDataset> comparable0 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getColumnKeys();
      Comparable<DefaultCategoryDataset> comparable1 = null;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getRowIndex((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.setNotify(false);
      defaultCategoryDataset0.getRowCount();
      defaultCategoryDataset0.getColumnKeys();
      defaultCategoryDataset0.getRowKeys();
      Comparable<Integer> comparable0 = null;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.addValue((Number) 0, (Comparable) null, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getColumnIndex(comparable0);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.setValue(0.0, (Comparable) (-1), (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowIndex(comparable0);
      defaultCategoryDataset0.getRowKeys();
      Comparable<Object> comparable1 = null;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rowKey' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Number number0 = null;
      Comparable<DefaultCategoryDataset> comparable0 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<String> comparable1 = null;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.setValue((Number) null, (Comparable) null, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.clear();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.addValue(Double.POSITIVE_INFINITY, comparable0, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnKey(1110);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1110, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.hashCode();
      DatasetChangeListener datasetChangeListener0 = mock(DatasetChangeListener.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeColumn(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue(1368.0, comparable0, comparable0);
      defaultCategoryDataset0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      double double0 = 0.8;
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(comparable0).toString();
      defaultCategoryDataset0.setValue(0.8, comparable0, comparable0);
      defaultCategoryDataset0.clone();
      defaultCategoryDataset0.getRowKeys();
      Comparable<String> comparable1 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeValue(comparable1, comparable1);
      Object object0 = defaultCategoryDataset0.clone();
      defaultCategoryDataset0.equals(object0);
      int int0 = (-2153);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnKey((-2153));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeValue(comparable0, comparable0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnKey(1702);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1702, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      int int0 = 3553;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getValue(3553, 3553);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3553, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.hashCode();
      Comparable<DefaultCategoryDataset> comparable0 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getColumnIndex(comparable0);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeColumn((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<DefaultCategoryDataset> comparable0 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeColumn(comparable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown key: Mock for Comparable, hashCode: 2000704302
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.getColumnCount();
      defaultCategoryDataset0.getColumnCount();
      Comparable<DefaultKeyedValues2D> comparable0 = (Comparable<DefaultKeyedValues2D>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      defaultCategoryDataset0.hashCode();
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue((Number) 871, (Comparable) comparable1, (Comparable) comparable1);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getValue((Comparable) 0, (Comparable) comparable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised columnKey: null
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      DatasetGroup datasetGroup0 = defaultCategoryDataset1.getGroup();
      Comparable<DefaultKeyedValues2D> comparable1 = (Comparable<DefaultKeyedValues2D>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.setNotify(false);
      defaultCategoryDataset1.getColumnIndex(comparable1);
      Comparable<String> comparable2 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.setValue((Number) (-1), (Comparable) comparable2, (Comparable) comparable2);
      defaultCategoryDataset0.setGroup(datasetGroup0);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow(comparable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown key: null
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeColumn(5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeColumn((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'columnKey' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.hashCode();
      Comparable<DefaultCategoryDataset> comparable0 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue((Number) 871, (Comparable) comparable0, (Comparable) comparable0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.addValue(1.0, (Comparable) null, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.incrementValue((-822.4256874), (Comparable) null, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rowKey' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Object object0 = defaultCategoryDataset0.clone();
      defaultCategoryDataset0.equals(object0);
      defaultCategoryDataset0.clone();
      defaultCategoryDataset0.clone();
      defaultCategoryDataset0.hashCode();
      defaultCategoryDataset0.getRowIndex(871);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow((Comparable) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown key: -1
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.setValue(0.0, comparable0, comparable0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnIndex((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow((-288));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DatasetChangeListener datasetChangeListener0 = mock(DatasetChangeListener.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeChangeListener(datasetChangeListener0);
      Comparable<DefaultCategoryDataset> comparable0 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      DatasetGroup datasetGroup0 = defaultCategoryDataset0.getGroup();
      defaultCategoryDataset0.setGroup(datasetGroup0);
      defaultCategoryDataset0.addValue(1294.253, comparable0, comparable0);
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowIndex(comparable1);
      String string0 = "org.jfree.data.category.DefaultCategoryDataset";
      defaultCategoryDataset0.equals("org.jfree.data.category.DefaultCategoryDataset");
      defaultCategoryDataset0.setGroup(datasetGroup0);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeColumn((Comparable) "org.jfree.data.category.DefaultCategoryDataset");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown key: org.jfree.data.category.DefaultCategoryDataset
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      double double0 = 0.8;
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("", "", (String) null, "GmD?g+NvS", "org.jfree.data.category.DefaultCategoryDataset").when(comparable0).toString();
      defaultCategoryDataset0.setValue(0.8, comparable0, comparable0);
      defaultCategoryDataset0.clone();
      defaultCategoryDataset0.getRowKeys();
      Comparable<String> comparable1 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeValue(comparable1, comparable1);
      Object object0 = defaultCategoryDataset0.clone();
      defaultCategoryDataset0.equals(object0);
      int int0 = (-2153);
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.getColumnKey((-2153));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<String> comparable1 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<DefaultIntervalCategoryDataset> comparable2 = (Comparable<DefaultIntervalCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<DefaultIntervalCategoryDataset> comparable3 = (Comparable<DefaultIntervalCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<String> comparable4 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<Object> comparable5 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<DefaultKeyedValues2D> comparable6 = (Comparable<DefaultKeyedValues2D>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("uPy<aW'LH.").when(comparable6).toString();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow(comparable6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown key: uPy<aW'LH.
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("#Jk@-2&qj-342z;=m", "gc{'", "r\u0000EkhZXQpc6s", "", "").when(comparable0).toString();
      defaultCategoryDataset0.setValue(0.8, comparable0, comparable0);
      Object object0 = defaultCategoryDataset0.clone();
      defaultCategoryDataset0.getRowKeys();
      Comparable<String> comparable1 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeValue(comparable1, comparable1);
      Object object1 = defaultCategoryDataset0.clone();
      boolean boolean0 = defaultCategoryDataset0.equals(object1);
      defaultCategoryDataset0.hashCode();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      boolean boolean1 = defaultCategoryDataset0.equals(defaultCategoryDataset1);
      assertFalse(boolean1 == boolean0);
      assertNotSame(defaultCategoryDataset0, object0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Comparable<DefaultKeyedValues2D> comparable0 = (Comparable<DefaultKeyedValues2D>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.clear();
      int int0 = 2124;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeColumn(2124);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2124, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      DatasetChangeListener datasetChangeListener0 = mock(DatasetChangeListener.class, new ViolatedAssumptionAnswer());
      Comparable<DefaultKeyedValues2D> comparable1 = (Comparable<DefaultKeyedValues2D>) mock(Comparable.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.equals(defaultCategoryDataset0);
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowIndex(comparable0);
      Comparable<String> comparable1 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.validateObject();
      defaultCategoryDataset0.getColumnIndex(comparable1);
      defaultCategoryDataset0.getRowKeys();
      Comparable<String> comparable2 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getColumnIndex(comparable2);
      Comparable<String> comparable3 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.setValue((double) (-1), (Comparable) (-1), (Comparable) comparable3);
      defaultCategoryDataset0.validateObject();
      Comparable<DefaultCategoryDataset> comparable4 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparable<DefaultKeyedValues2D> comparable5 = (Comparable<DefaultKeyedValues2D>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue((double) (-1), (Comparable) comparable5, (Comparable) comparable5);
      defaultCategoryDataset0.setValue((Number) null, comparable4, comparable4);
      Comparable<Object> comparable6 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.addValue((Number) null, comparable6, comparable6);
      Comparable<Object> comparable7 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("BJ?6%%',[.").when(comparable7).toString();
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.incrementValue((-1), comparable7, comparable7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised columnKey: BJ?6%%',[.
         //
         verifyException("org.jfree.data.DefaultKeyedValues2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.getColumnCount();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("K,O[/sB6==:x5n", "CV;s", "CV;s").when(comparable0).toString();
      defaultCategoryDataset0.getColumnKeys();
      defaultCategoryDataset0.addValue((Number) 0, (Comparable) comparable0, (Comparable) comparable0);
      Comparable<DefaultIntervalCategoryDataset> comparable1 = (Comparable<DefaultIntervalCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowIndex(comparable1);
      DatasetChangeListener datasetChangeListener0 = mock(DatasetChangeListener.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.removeChangeListener(datasetChangeListener0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.hasListener(eventListener0);
      defaultCategoryDataset0.hashCode();
      defaultCategoryDataset0.getRowKeys();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      DefaultCategoryDataset defaultCategoryDataset2 = new DefaultCategoryDataset();
      DatasetGroup datasetGroup0 = defaultCategoryDataset2.getGroup();
      Comparable<String> comparable2 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset0.getRowIndex(comparable2);
      defaultCategoryDataset0.getRowKeys();
      defaultCategoryDataset1.setGroup(datasetGroup0);
      defaultCategoryDataset0.equals(defaultCategoryDataset1);
      Comparable<DefaultCategoryDataset> comparable3 = (Comparable<DefaultCategoryDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      defaultCategoryDataset1.removeValue(comparable3, comparable3);
      // Undeclared exception!
      try { 
        defaultCategoryDataset2.getRowKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
