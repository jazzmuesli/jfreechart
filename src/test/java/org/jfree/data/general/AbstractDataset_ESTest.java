/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 22:22:04 GMT 2019
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultHeatMapDataset;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AbstractDataset_ESTest extends AbstractDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      XYBarDataset xYBarDataset0 = new XYBarDataset(defaultTableXYDataset0, 1052.809);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(xYBarDataset0);
      defaultTableXYDataset0.seriesChanged(seriesChangeEvent0);
      assertTrue(xYBarDataset0.getNotify());
      assertTrue(defaultTableXYDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(47, 47);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(waferMapDataset0, waferMapDataset0);
      waferMapDataset0.notifyListeners(datasetChangeEvent0);
      assertTrue(waferMapDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(2434, 2434);
      waferMapDataset0.fireDatasetChanged();
      assertTrue(waferMapDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(10, 0);
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset((Connection) null);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(jDBCXYDataset0);
      waferMapDataset0.addChangeListener(xYDatasetTableModel0);
      assertTrue(jDBCXYDataset0.getNotify());
      assertTrue(waferMapDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long((-805L));
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-603), (-603), long0);
      DatasetGroup datasetGroup0 = waferMapDataset0.getGroup();
      waferMapDataset0.setGroup(datasetGroup0);
      assertTrue(waferMapDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 2, 1, 1, (-1.0), 0);
      assertTrue(defaultHeatMapDataset0.getNotify());
      
      defaultHeatMapDataset0.setNotify(false);
      boolean boolean0 = defaultHeatMapDataset0.getNotify();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(9);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(1501, 327, integer0);
      // Undeclared exception!
      try { 
        waferMapDataset0.setGroup((DatasetGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'group' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(2434, 2434);
      WaferMapDataset waferMapDataset1 = (WaferMapDataset)waferMapDataset0.clone();
      assertNotSame(waferMapDataset1, waferMapDataset0);
      assertTrue(waferMapDataset1.getNotify());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(2434, 2434);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      boolean boolean0 = waferMapDataset0.hasListener(jTableHeader0);
      assertTrue(waferMapDataset0.getNotify());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      defaultTableXYDataset0.setNotify(true);
      assertTrue(defaultTableXYDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 2, 1, 1, (-1.0), 0);
      boolean boolean0 = defaultHeatMapDataset0.getNotify();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TimePeriodValues timePeriodValues0 = new TimePeriodValues("group", "", "q9'c\"eZ<y=5,:F:#0V");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      double[][] doubleArray0 = new double[1][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, 4638);
      timePeriodValuesCollection0.removeChangeListener(categoryToPieDataset0);
      assertTrue(categoryToPieDataset0.getNotify());
      assertTrue(timePeriodValuesCollection0.getNotify());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      jDBCCategoryDataset0.validateObject();
      assertTrue(jDBCCategoryDataset0.getNotify());
  }
}
