/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 17 21:38:24 GMT 2019
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.event.ActionListener;
import java.awt.event.WindowListener;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.gantt.XYTaskDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultHeatMapDataset;
import org.jfree.data.xy.IntervalXYDelegate;
import org.jfree.data.xy.TableXYDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultHeatMapDataset_ESTest extends DefaultHeatMapDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(943, 943, (-2027.4568199), (-4462.26158), 1.0, 3436.29);
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(2667, 943, (-4462.26158), 2255, (-706.12), 1.0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZ(2255, 589);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2255
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(1044, 1, 0.9696034430557936, 1, 1918.647, Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'maxY' cannot be INF or NaN.
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1367, 1367, 1367, 1367, 0.0, 0.0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(1367, 3, (-665.55111965), 3, (-3757.99978518), 1367);
      defaultHeatMapDataset1.equals(datasetChangeEvent0);
      TableXYDataset tableXYDataset0 = mock(TableXYDataset.class, new ViolatedAssumptionAnswer());
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(tableXYDataset0);
      defaultHeatMapDataset0.removeChangeListener(xYDatasetTableModel0);
      defaultHeatMapDataset1.getZ(358, 0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      defaultHeatMapDataset0.setZValue(376, 3, 0.0, false);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset1.getYSampleCount();
      defaultHeatMapDataset1.getXValue(376);
      defaultHeatMapDataset1.getXSampleCount();
      defaultHeatMapDataset1.getZ(0, 2);
      defaultHeatMapDataset0.getYValue(24);
      defaultHeatMapDataset0.getXSampleCount();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1367, 1367, 1367, 1367, 0.0, 0.0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(1367, 1367, (-665.55111965), 1367, (-3757.99978518), 1367);
      defaultHeatMapDataset1.equals(datasetChangeEvent0);
      TableXYDataset tableXYDataset0 = mock(TableXYDataset.class, new ViolatedAssumptionAnswer());
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(tableXYDataset0);
      defaultHeatMapDataset0.removeChangeListener(xYDatasetTableModel0);
      defaultHeatMapDataset1.getZ(358, 0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      int int0 = 376;
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue(376, 1367, 0.0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1367
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1367, 1367, 1367, 1367, 0.0, 0.0);
      defaultHeatMapDataset0.getZ(358, 0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset0);
      defaultHeatMapDataset0.setZValue(376, 3, 0.0, false);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset0.getYSampleCount();
      defaultHeatMapDataset0.getXValue(376);
      defaultHeatMapDataset0.getXSampleCount();
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZ((-1), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1367, 1367, 1367, 1367, 0.0, 0.0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(1367, 3, (-665.55111965), 3, (-3757.99978518), 1367);
      defaultHeatMapDataset1.clone();
      defaultHeatMapDataset1.equals(datasetChangeEvent0);
      TableXYDataset tableXYDataset0 = mock(TableXYDataset.class, new ViolatedAssumptionAnswer());
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(tableXYDataset0);
      defaultHeatMapDataset0.removeChangeListener(xYDatasetTableModel0);
      defaultHeatMapDataset1.getZ(358, 0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      defaultHeatMapDataset0.setZValue(376, 3, 0.0, false);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset1.getYSampleCount();
      defaultHeatMapDataset1.getXValue(376);
      defaultHeatMapDataset1.getXSampleCount();
      Object object0 = defaultHeatMapDataset0.clone();
      defaultHeatMapDataset1.equals(object0);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset1.getZ((-1), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1044, 1044, 0.5, 1542.604728730257, 0.0, (-1070.137587268315));
      defaultHeatMapDataset0.getZ(32, 32);
      defaultHeatMapDataset0.getMaximumXValue();
      defaultHeatMapDataset0.getMinimumYValue();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-434);
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(5, 425, (-1.0), 5, (-1.0), (-903.4651136030102));
      defaultHeatMapDataset0.getMinimumXValue();
      DefaultHeatMapDataset defaultHeatMapDataset1 = null;
      try {
        defaultHeatMapDataset1 = new DefaultHeatMapDataset((-434), 5417, (-773.70018634285), (-1370.421157079443), (-434), (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'xSamples' > 0
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1956, 1956, 0.0, (-1173.996515031513), (-1173.996515031513), 0.0);
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      TableXYDataset tableXYDataset0 = mock(TableXYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(tableXYDataset0).getX(anyInt() , anyInt());
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(tableXYDataset0);
      xYDatasetTableModel0.getValueAt(0, 0);
      defaultHeatMapDataset0.addChangeListener(xYDatasetTableModel0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("DefaultIntervalCategoryDataset.getValue(): series index out of range.", vetoableChangeListener0);
      defaultHeatMapDataset0.hasListener(vetoableChangeListenerProxy0);
      defaultHeatMapDataset0.validateObject();
      defaultHeatMapDataset0.hasListener(vetoableChangeListenerProxy0);
      defaultHeatMapDataset0.getXValue(1956);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset0.getMaximumYValue();
      defaultHeatMapDataset0.getYSampleCount();
      defaultHeatMapDataset0.getMaximumYValue();
      defaultHeatMapDataset0.getMinimumYValue();
      defaultHeatMapDataset0.getMaximumYValue();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(808, 808, 0.0, (-900.8545), (-222.078652), (-331.6916754));
      defaultHeatMapDataset0.getXValue(808);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListener propertyChangeListener1 = propertyChangeListenerProxy0.getListener();
      defaultHeatMapDataset0.hasListener(propertyChangeListener1);
      defaultHeatMapDataset0.fireDatasetChanged();
      defaultHeatMapDataset0.setNotify(false);
      defaultHeatMapDataset0.getYValue(0);
      defaultHeatMapDataset0.getMinimumYValue();
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset0.getYValue(0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1367, 1367, 1367, 1367, 0.0, 0.0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(1367, 3, (-665.55111965), 3, (-3757.99978518), 1367);
      defaultHeatMapDataset1.equals(datasetChangeEvent0);
      TableXYDataset tableXYDataset0 = mock(TableXYDataset.class, new ViolatedAssumptionAnswer());
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(tableXYDataset0);
      defaultHeatMapDataset0.removeChangeListener(xYDatasetTableModel0);
      defaultHeatMapDataset1.getZ(358, 0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      defaultHeatMapDataset0.setZValue(376, 3, 0.0, false);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset1.getYSampleCount();
      defaultHeatMapDataset1.getXValue(376);
      defaultHeatMapDataset1.getXSampleCount();
      // Undeclared exception!
      try { 
        defaultHeatMapDataset1.getZ((-1), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2, 2, 2, 2, (-1.0), (-1.0));
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(2, 2, 2, 2, (-1.0), (-1.0));
      double[][] doubleArray0 = new double[9][8];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-1.0);
      doubleArray1[1] = (-1.0);
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (-1.0);
      doubleArray1[5] = (-1.0);
      doubleArray1[6] = (-1.0);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (-1.0);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (-1.0);
      doubleArray3[1] = (-3393.42325477359);
      doubleArray3[2] = (-1.0);
      doubleArray3[3] = (-1.0);
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = 1.0;
      doubleArray3[6] = (-1.0);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (double) 2;
      doubleArray4[1] = (-1.0);
      doubleArray4[2] = 190.2755315;
      doubleArray4[3] = 1.0;
      doubleArray4[4] = (-1.0);
      doubleArray4[5] = 2909.91316912652;
      doubleArray4[6] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = (-1.0);
      doubleArray5[1] = (-3393.42325477359);
      doubleArray5[2] = 190.2755315;
      doubleArray5[3] = 190.2755315;
      doubleArray5[4] = (double) 2;
      doubleArray5[5] = (-3393.42325477359);
      doubleArray5[6] = (-6458.0);
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) 2;
      doubleArray6[1] = (-6458.0);
      doubleArray6[2] = (-3393.42325477359);
      doubleArray6[3] = (double) 2;
      doubleArray6[4] = (-6458.0);
      doubleArray6[5] = 2909.91316912652;
      doubleArray6[6] = 0.0;
      doubleArray6[7] = 0.0;
      doubleArray6[8] = 190.2755315;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[8];
      doubleArray7[0] = 3383.2473144191276;
      doubleArray7[1] = 0.0;
      doubleArray7[2] = (-3393.42325477359);
      doubleArray7[3] = 190.2755315;
      doubleArray7[4] = (double) 2;
      doubleArray7[5] = (-1.0);
      doubleArray7[6] = 190.2755315;
      doubleArray7[7] = (-6458.0);
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[2];
      doubleArray8[0] = 0.0;
      doubleArray8[1] = 0.0;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[0];
      doubleArray0[8] = doubleArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, 2);
      defaultHeatMapDataset1.addChangeListener(categoryToPieDataset0);
      DatasetGroup datasetGroup0 = new DatasetGroup("M1");
      datasetGroup0.clone();
      datasetGroup0.clone();
      datasetGroup0.clone();
      defaultHeatMapDataset1.setGroup(datasetGroup0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      defaultHeatMapDataset0.setGroup(datasetGroup0);
      defaultHeatMapDataset0.fireDatasetChanged();
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue(3070, 2, (-1.0));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3070
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1656, 1656, 1656, (-1497.999015231), 1656, (-201.19068864326));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYTaskDataset0);
      intervalXYDelegate0.setAutoWidth(true);
      defaultHeatMapDataset0.addChangeListener(intervalXYDelegate0);
      defaultHeatMapDataset0.getXValue(1656);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZ(1656, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1656
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2901, 2901, 2901, 1.0, (-3604.03), 2.0);
      defaultHeatMapDataset0.setZValue(238, 825, 2.0);
      defaultHeatMapDataset0.equals((Object) null);
      double[][] doubleArray0 = new double[6][4];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 238;
      doubleArray1[1] = (double) 2901;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 238;
      doubleArray2[1] = (double) 825;
      doubleArray2[2] = (double) 1974;
      doubleArray2[3] = 2.0;
      doubleArray2[4] = (double) 1974;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (double) 825;
      doubleArray3[1] = (double) 2901;
      doubleArray3[2] = (double) 825;
      doubleArray3[3] = 0.0;
      doubleArray3[4] = (double) 1974;
      doubleArray3[5] = (-1622.47091514212);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = 0.0;
      doubleArray4[1] = (double) 2901;
      doubleArray4[2] = (double) 1974;
      doubleArray4[3] = 0.0;
      doubleArray4[4] = (double) 238;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[5];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (-1622.47091514212);
      doubleArray5[2] = (double) 2901;
      doubleArray5[3] = (double) 825;
      doubleArray5[4] = 2.0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (-1622.47091514212);
      doubleArray6[1] = 0.0;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      defaultHeatMapDataset0.hasListener(defaultIntervalCategoryDataset0);
      defaultHeatMapDataset0.getXValue(1974);
      defaultHeatMapDataset0.getMinimumYValue();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1044, 1044, 0.5, 1542.604728730257, 0.0, (-1070.137587268315));
      defaultHeatMapDataset0.getMaximumXValue();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 1;
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 1, Double.NaN, Double.POSITIVE_INFINITY, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'minX' cannot be INF or NaN.
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 6;
      double double0 = (-438.7);
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(6, 6, (-438.7), Double.NEGATIVE_INFINITY, (-438.7), (-549.935901875));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'maxX' cannot be INF or NaN.
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 1956;
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(1956, 1956, Double.POSITIVE_INFINITY, (-1.0), (-1.0), (-1919.69376565));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'minX' cannot be INF or NaN.
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2055, 6, (-2763.384), 0.0, (-2763.384), 0.0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultHeatMapDataset0.removeChangeListener(xYDatasetTableModel0);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue(2055, 2, (double) 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2055
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(4636, 10, 651.9, 0.0, (-1387.1417056372527), (-1387.1417056372527));
      defaultHeatMapDataset0.getMinimumXValue();
      int int0 = 1;
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      defaultHeatMapDataset0.setZValue(1, 0, 3723.455654062, true);
      int int1 = 66;
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZ(4, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1456, 1456, 1456, 488.6050836149, 488.6050836149, 1456);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      defaultHeatMapDataset0.getYValue(1456);
      defaultHeatMapDataset0.getXSampleCount();
      defaultHeatMapDataset0.getXSampleCount();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 3143;
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(3143, 3143, 0.0, 0.0, (-369.60176831), (-2570.518388511772));
      defaultHeatMapDataset0.getMaximumYValue();
      defaultHeatMapDataset0.fireDatasetChanged();
      XYDataset xYDataset0 = null;
      IntervalXYDelegate intervalXYDelegate0 = null;
      try {
        intervalXYDelegate0 = new IntervalXYDelegate((XYDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 1895;
      int int1 = 1;
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1895, 1, 1895, 1895, 1.0, 0.0);
      defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.validateObject();
      int int2 = (-2012);
      int int3 = 0;
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZ(0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 1;
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 1, 1, 1, 0.0, 301.5080776709);
      ActionListener actionListener0 = mock(ActionListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(actionListener0, actionListener0);
      AWTEventMulticaster.add((ActionListener) null, (ActionListener) null);
      defaultHeatMapDataset0.hasListener((EventListener) null);
      Object object0 = new Object();
      defaultHeatMapDataset0.equals(object0);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset0.equals(object0);
      defaultHeatMapDataset0.validateObject();
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue(588, 588, (-758.23));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 588
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2112, 2112, 2112, 747.5777036069567, (-2472.762658), 2112);
      defaultHeatMapDataset0.getZValue(1236, 1236);
      defaultHeatMapDataset0.getXSampleCount();
      Integer integer0 = new Integer(2112);
      defaultHeatMapDataset0.equals(integer0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2801, 2801, 2801, (-3778.56101), 2801, (-3778.56101));
      defaultHeatMapDataset0.setZValue(0, 0, 1.0, false);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset0.getYSampleCount();
      defaultHeatMapDataset0.getXSampleCount();
      defaultHeatMapDataset0.getMaximumXValue();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 3087;
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(3087, 1638, 3087, 0.0, 43.46060266812839, 2403.548);
      defaultHeatMapDataset0.getMinimumYValue();
      defaultHeatMapDataset0.validateObject();
      defaultHeatMapDataset0.fireDatasetChanged();
      DatasetChangeListener datasetChangeListener0 = null;
      defaultHeatMapDataset0.removeChangeListener((DatasetChangeListener) null);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZValue(548, 2485);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2485
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1349, 1, 1, (-2589.0993821441), 1, 1349);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZ(1349, (-489));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1349
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(196, 4, 196, (-4012.680648), 953.0, 196);
      defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.validateObject();
      defaultHeatMapDataset0.getMinimumYValue();
      defaultHeatMapDataset0.setNotify(true);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue(29, 10, (double) 196, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 1;
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 1, 1, 0.0, 0.0, 0.0);
      defaultHeatMapDataset0.validateObject();
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue(0, 1, (double) 1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 914;
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(914, 914, 914, 2.0, 914, Double.NEGATIVE_INFINITY);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'maxY' cannot be INF or NaN.
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 1, 3010.18973438057, 3010.18973438057, 3010.18973438057, 3010.18973438057);
      DatasetGroup datasetGroup0 = new DatasetGroup();
      defaultHeatMapDataset0.setGroup(datasetGroup0);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue(1, 1, 3010.18973438057);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 346, 346, 346, 1, 1);
      defaultHeatMapDataset0.getMaximumYValue();
      defaultHeatMapDataset0.getXSampleCount();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(0, (-4299), 0, (-4299), 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'xSamples' > 0
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, (-1016), (-1016), (-546.864486309), (-1016), 592.1001497);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'ySamples' > 0
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 4447;
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(4447, 4447, 4447, 1411.1133045108413, Double.NEGATIVE_INFINITY, 4447);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'minY' cannot be INF or NaN.
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset((-622), (-622), (-622), (-622), 370.54310258898784, 370.54310258898784);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'xSamples' > 0
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double double0 = Double.NaN;
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(1, 1, 834.9, Double.NaN, Double.NaN, 834.9);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'maxX' cannot be INF or NaN.
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 538;
      int int1 = 0;
      double double0 = (-305.170140096206);
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(538, 0, 538, (-305.170140096206), 13.623375490998596, (-305.170140096206));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'ySamples' > 0
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 1917;
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1917, 1917, 1917, 1917, 536.347637517, 834.9);
      Object object0 = defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.equals(object0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(object0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZ(1917, 1917);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1917
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1367, 1367, 1367, 1367, 0.0, 0.0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(1367, 3, (-665.55111965), 3, (-3757.99978518), 1367);
      defaultHeatMapDataset1.equals(datasetChangeEvent0);
      TableXYDataset tableXYDataset0 = mock(TableXYDataset.class, new ViolatedAssumptionAnswer());
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(tableXYDataset0);
      defaultHeatMapDataset0.removeChangeListener(xYDatasetTableModel0);
      defaultHeatMapDataset1.getZ(358, 0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      defaultHeatMapDataset0.setZValue(376, 3, 0.0, false);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset1.getYSampleCount();
      defaultHeatMapDataset1.getXValue(376);
      defaultHeatMapDataset1.getXSampleCount();
      // Undeclared exception!
      try { 
        defaultHeatMapDataset1.getZ((-1), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(157, 157, 157, 157, (-1.0), (-1.0));
      defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.fireDatasetChanged();
      defaultHeatMapDataset0.setZValue(152, 152, (-1304.6415));
      defaultHeatMapDataset0.getZ(152, 152);
      int int0 = 1319;
      defaultHeatMapDataset0.getXValue(1319);
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.getZValue(939, 939);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 939
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(1367, 1367, 1367, 1367, 0.0, 0.0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultHeatMapDataset0, defaultHeatMapDataset0);
      defaultHeatMapDataset0.notifyListeners(datasetChangeEvent0);
      DefaultHeatMapDataset defaultHeatMapDataset1 = new DefaultHeatMapDataset(1367, 3, (-665.55111965), 3, (-3757.99978518), 1367);
      defaultHeatMapDataset1.equals(datasetChangeEvent0);
      TableXYDataset tableXYDataset0 = mock(TableXYDataset.class, new ViolatedAssumptionAnswer());
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(tableXYDataset0);
      defaultHeatMapDataset0.removeChangeListener(xYDatasetTableModel0);
      defaultHeatMapDataset1.getZ(358, 0);
      defaultHeatMapDataset0.equals(defaultHeatMapDataset1);
      defaultHeatMapDataset0.setZValue(376, 3, 0.0, false);
      defaultHeatMapDataset0.getMinimumXValue();
      defaultHeatMapDataset1.getYSampleCount();
      defaultHeatMapDataset1.getXValue(376);
      defaultHeatMapDataset1.getXSampleCount();
      // Undeclared exception!
      try { 
        defaultHeatMapDataset1.getZ((-1), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(2020, 1221, 1108.0, 1106.847, 2020, (-1.0));
      Object object0 = defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.equals(object0);
      defaultHeatMapDataset0.notifyListeners((DatasetChangeEvent) null);
      defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.equals((Object) null);
      defaultHeatMapDataset0.getXSampleCount();
      defaultHeatMapDataset0.validateObject();
      defaultHeatMapDataset0.getMaximumXValue();
      int int0 = defaultHeatMapDataset0.getYSampleCount();
      defaultHeatMapDataset0.getYValue((-1418));
      defaultHeatMapDataset0.getMaximumXValue();
      int int1 = defaultHeatMapDataset0.getYSampleCount();
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 17;
      DefaultHeatMapDataset defaultHeatMapDataset0 = new DefaultHeatMapDataset(17, 17, 17, 17, (-2060.3310391), 1106.847);
      defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.getMaximumYValue();
      DatasetGroup datasetGroup0 = defaultHeatMapDataset0.getGroup();
      defaultHeatMapDataset0.clone();
      defaultHeatMapDataset0.setGroup(datasetGroup0);
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      defaultHeatMapDataset0.addChangeListener(xYDatasetTableModel0);
      defaultHeatMapDataset0.equals(xYDatasetTableModel0);
      defaultHeatMapDataset0.validateObject();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("", vetoableChangeListener0);
      defaultHeatMapDataset0.hasListener(vetoableChangeListenerProxy0);
      defaultHeatMapDataset0.getYValue((-1696));
      // Undeclared exception!
      try { 
        defaultHeatMapDataset0.setZValue((-1696), 17, (-2060.3310391));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1696
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1);
      double double0 = 1274.8192;
      DefaultHeatMapDataset defaultHeatMapDataset0 = null;
      try {
        defaultHeatMapDataset0 = new DefaultHeatMapDataset(0, (-1), (-1306.7), (-925.2644311), 1274.8192, (-925.2644311));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'xSamples' > 0
         //
         verifyException("org.jfree.data.general.DefaultHeatMapDataset", e);
      }
  }
}
